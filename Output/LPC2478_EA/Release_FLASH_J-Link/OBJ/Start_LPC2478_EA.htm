<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Output\LPC2478_EA\Release_FLASH_J-Link\OBJ\Start_LPC2478_EA.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Output\LPC2478_EA\Release_FLASH_J-Link\OBJ\Start_LPC2478_EA.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Wed Feb 12 11:41:44 2014
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[fb]">OS_Idle</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[fb]">OS_Idle</a><BR>
 <LI><a href="#[17d]">OS_LeaveRegion</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[187]">OS_Switch</a><BR>
 <LI><a href="#[18a]">OS_ChangeTask</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[186]">OS_MakeTaskReady</a><BR>
 <LI><a href="#[2c9]">_ISO_CompleteUrb</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c7]">USBH_OHCI_ISO_SubmitUrbsFromList</a><BR>
 <LI><a href="#[2af]">_BULK_INT_OnCompleteUrb</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[203]">USBH_OHCI_BULK_INT_SubmitUrbsFromList</a><BR>
 <LI><a href="#[57]">_ProcessPortResetSetAddress</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[267]">USBH_HC_ServicePorts</a><BR>
 <LI><a href="#[275]">USBH_StartEnumeration</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f]">USBH_BD_ProcessEnum</a><BR>
 <LI><a href="#[33f]">_HubPortResetSetIdleServicePorts</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[267]">USBH_HC_ServicePorts</a><BR>
 <LI><a href="#[308]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[308]">WM__InvalidateRect</a><BR>
 <LI><a href="#[305]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[305]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[32e]">WM_SendToParent</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[258]">WM__SendMessage</a><BR>
 <LI><a href="#[3a8]">_Screen2hWin</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a8]">_Screen2hWin</a><BR>
 <LI><a href="#[31f]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31f]">_Findx1</a><BR>
 <LI><a href="#[31e]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31e]">_Findx0</a><BR>
 <LI><a href="#[31c]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31c]">_Findy1</a><BR>
 <LI><a href="#[333]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[333]">_PaintTransChildren</a><BR>
 <LI><a href="#[b9]">_sys_exit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b9]">_sys_exit</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[21]">FIQ_Handler</a> from vectors.o(Vect) referenced from vectors.o(Vect)
 <LI><a href="#[89]">GUIMONO_DispChar</a> from GUI_CharM.o(.text) referenced from F6x8.o(.constdata)
 <LI><a href="#[8a]">GUIMONO_GetCharDistX</a> from GUI_CharM.o(.text) referenced from F6x8.o(.constdata)
 <LI><a href="#[8b]">GUIMONO_GetFontInfo</a> from GUI_CharM.o(.text) referenced from F6x8.o(.constdata)
 <LI><a href="#[8c]">GUIMONO_IsInFont</a> from GUI_CharM.o(.text) referenced from F6x8.o(.constdata)
 <LI><a href="#[4d]">GUI_MEMDEV__WriteToActiveOpaque</a> from GUIDEV_WriteToActiveOpaque.o(.text) referenced from GUIDEV_16.o(.text)
 <LI><a href="#[66]">GUI_TIMER_Exec</a> from GUI_Timer.o(.text) referenced from GUI_Timer.o(.text)
 <LI><a href="#[98]">GUI_USAGE_BM_AddHLine</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.constdata)
 <LI><a href="#[97]">GUI_USAGE_BM_AddPixel</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.constdata)
 <LI><a href="#[99]">GUI_USAGE_BM_Clear</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.constdata)
 <LI><a href="#[9b]">GUI_USAGE_BM_GetNextDirty</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.constdata)
 <LI><a href="#[20]">IRQ_Handler</a> from RTOS.o(C$$code) referenced from vectors.o(Vect)
 <LI><a href="#[87]">LCD_DrawHLine</a> from LCD.o(.text) referenced from GUI_Core.o(.constdata)
 <LI><a href="#[88]">LCD_DrawPixel</a> from LCD.o(.text) referenced from GUI_Core.o(.constdata)
 <LI><a href="#[6d]">LCD_Index2Color_565</a> from GUICC_565_Index2Color.o(.text) referenced from GUICC_565.o(.constdata)
 <LI><a href="#[2b]">MainTask</a> from os_usbh_hid.o(.text) referenced from main.o(.text)
 <LI><a href="#[3b]">OS_StartTask</a> from RTOS.o(C$$code) referenced from OS_CreateTask.o(.text)
 <LI><a href="#[6b]">OS_SwitchAfterISR</a> from RTOS.o(C$$code) referenced from RTOS.o(C$$code)
 <LI><a href="#[6a]">OS_SwitchAfterISR_Idle</a> from RTOS.o(C$$code) referenced from RTOS.o(C$$code)
 <LI><a href="#[1f]">Prefetch_Handler</a> from vectors.o(Vect) referenced from vectors.o(Vect)
 <LI><a href="#[a9]">Reset_Handler</a> from startup_lpc2xxx.o(Init) referenced from vectors.o(Vect)
 <LI><a href="#[1e]">SWI_Handler</a> from vectors.o(Vect) referenced from vectors.o(Vect)
 <LI><a href="#[52]">USBH_BD_DefaultEpUrbCompletion</a> from USBH_Core.o(.text) referenced from USBH_Interface.o(.text)
 <LI><a href="#[53]">USBH_BD_EpUrbCompletion</a> from USBH_EndPoint.o(.text) referenced from USBH_Interface.o(.text)
 <LI><a href="#[4f]">USBH_BD_ProcessEnum</a> from USBH_Device.o(.text) referenced from USBH_Device.o(.text)
 <LI><a href="#[56]">USBH_CreateInterfaces</a> from USBH_Device.o(.text) referenced 2 times from USBH_RootHub.o(.text)
 <LI><a href="#[3d]">USBH_DefaultReleaseEpCompletion</a> from USBH_HC.o(.text) referenced 3 times from USBH_Core.o(.text)
 <LI><a href="#[24]">USBH_ISRTask</a> from USBH_Core.o(.text) referenced from os_usbh_hid.o(.text)
 <LI><a href="#[b]">USBH_OHCI_AddEndpoint</a> from USBH_OHC_Device.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[46]">USBH_OHCI_BULK_INT_OnRemoveEpTimer</a> from USBH_OHC_EP_BulkInt.o(.text) referenced from USBH_OHC_Device.o(.text)
 <LI><a href="#[47]">USBH_OHCI_BULK_OnAbortUrbTimer</a> from USBH_OHC_EP_BulkInt.o(.text) referenced from USBH_OHC_Device.o(.text)
 <LI><a href="#[45]">USBH_OHCI_EP0_OnAbortUrbTimer</a> from USBH_OHC_EP_Control.o(.text) referenced from USBH_OHC_Device.o(.text)
 <LI><a href="#[44]">USBH_OHCI_EP0_OnReleaseEpTimer</a> from USBH_OHC_EP_Control.o(.text) referenced from USBH_OHC_Device.o(.text)
 <LI><a href="#[a]">USBH_OHCI_GetFrameNumber</a> from USBH_OHC_Device.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[8]">USBH_OHCI_HostExit</a> from USBH_OHC_Device.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[7]">USBH_OHCI_HostInit</a> from USBH_OHC_Device.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[49]">USBH_OHCI_INT_OnAbortUrbTimer</a> from USBH_OHC_EP_Int.o(.text) referenced from USBH_OHC_Device.o(.text)
 <LI><a href="#[48]">USBH_OHCI_INT_OnReleaseEpTimer</a> from USBH_OHC_EP_Int.o(.text) referenced from USBH_OHC_Device.o(.text)
 <LI><a href="#[4b]">USBH_OHCI_ISO_OnAbortUrbTimer</a> from USBH_OHC_EP_Iso.o(.text) referenced from USBH_OHC_Device.o(.text)
 <LI><a href="#[4a]">USBH_OHCI_ISO_OnRemoveEpTimer</a> from USBH_OHC_EP_Iso.o(.text) referenced from USBH_OHC_Device.o(.text)
 <LI><a href="#[1b]">USBH_OHCI_ProcessInterrupt</a> from USBH_OHC_Device.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[13]">USBH_OHCI_ROOTHUB_ClearHubStatus</a> from USBH_OHC_RootHub.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[15]">USBH_OHCI_ROOTHUB_ClearPortStatus</a> from USBH_OHC_RootHub.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[18]">USBH_OHCI_ROOTHUB_DisablePort</a> from USBH_OHC_RootHub.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[12]">USBH_OHCI_ROOTHUB_GetHubStatus</a> from USBH_OHC_RootHub.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[10]">USBH_OHCI_ROOTHUB_GetPortCount</a> from USBH_OHC_RootHub.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[14]">USBH_OHCI_ROOTHUB_GetPortStatus</a> from USBH_OHC_RootHub.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[11]">USBH_OHCI_ROOTHUB_GetPowerGoodTime</a> from USBH_OHC_RootHub.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[17]">USBH_OHCI_ROOTHUB_ResetPort</a> from USBH_OHC_RootHub.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[16]">USBH_OHCI_ROOTHUB_SetPortPower</a> from USBH_OHC_RootHub.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[19]">USBH_OHCI_ROOTHUB_SetPortSuspend</a> from USBH_OHC_RootHub.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[c]">USBH_OHCI_ReleaseEndpoint</a> from USBH_OHC_Device.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[1a]">USBH_OHCI_ServiceISR</a> from USBH_OHC_Device.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[9]">USBH_OHCI_SetHcState</a> from USBH_OHC_Device.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[f]">USBH_OHCI_TRANSFER_SubmitRequest</a> from USBH_OHC_Transfer.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[51]">USBH_PNP_NotifyWrapperCallbackRoutine</a> from USBH_PnPNotification.o(.text) referenced from USBH_Driver.o(.text)
 <LI><a href="#[4c]">USBH_ROOTHUB_OnNotification</a> from USBH_RootHub.o(.text) referenced 2 times from USBH_OHC_Device.o(.text)
 <LI><a href="#[23]">USBH_Task</a> from USBH_Core.o(.text) referenced from os_usbh_hid.o(.text)
 <LI><a href="#[1d]">Undefined_Handler</a> from vectors.o(Vect) referenced from vectors.o(Vect)
 <LI><a href="#[59]">WM_HandlePID</a> from WM_Touch.o(.text) referenced from GUI_PID.o(.text)
 <LI><a href="#[5c]">WM__InvalidateRectEx</a> from WM.o(.text) referenced from WM.o(.text)
 <LI><a href="#[d]">_AbortEndpoint</a> from USBH_OHC_Device.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[92]">_CalcSizeOfChar</a> from GUI_UC_EncodeNone.o(.text) referenced from GUI_UC_EncodeNone.o(.constdata)
 <LI><a href="#[8d]">_Color2Index_0</a> from GUICC_0.o(.text) referenced from GUICC_0.o(.constdata)
 <LI><a href="#[6c]">_Color2Index_565</a> from GUICC_565.o(.text) referenced from GUICC_565.o(.constdata)
 <LI><a href="#[34]">_ControlCache</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[6f]">_DrawBitmap</a> from GUIDRV_Lin_OSX_16.o(.text) referenced 3 times from GUIDRV_Lin_OSX_16.o(.constdata)
 <LI><a href="#[70]">_DrawHLine</a> from GUIDRV_Lin_OSX_16.o(.text) referenced 3 times from GUIDRV_Lin_OSX_16.o(.constdata)
 <LI><a href="#[71]">_DrawVLine</a> from GUIDRV_Lin_OSX_16.o(.text) referenced 3 times from GUIDRV_Lin_OSX_16.o(.constdata)
 <LI><a href="#[93]">_Encode</a> from GUI_UC_EncodeNone.o(.text) referenced from GUI_UC_EncodeNone.o(.constdata)
 <LI><a href="#[27]">_ExecTouch</a> from bsp.o(.text) referenced from bsp.o(.text)
 <LI><a href="#[72]">_FillRect</a> from GUIDRV_Lin_OSX_16.o(.text) referenced 3 times from GUIDRV_Lin_OSX_16.o(.constdata)
 <LI><a href="#[9a]">_GUI_USAGE_BM_Delete</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.constdata)
 <LI><a href="#[90]">_GetCharCode</a> from GUI_UC_EncodeNone.o(.text) referenced from GUI_UC_EncodeNone.o(.constdata)
 <LI><a href="#[91]">_GetCharSize</a> from GUI_UC_EncodeNone.o(.text) referenced from GUI_UC_EncodeNone.o(.constdata)
 <LI><a href="#[79]">_GetDevData</a> from GUIDRV_Lin_OSX_16.o(.text) referenced 3 times from GUIDRV_Lin_OSX_16.o(.constdata)
 <LI><a href="#[77]">_GetDevFunc</a> from GUIDRV_Lin_OSX_16.o(.text) referenced 3 times from GUIDRV_Lin_OSX_16.o(.constdata)
 <LI><a href="#[78]">_GetDevProp</a> from GUIDRV_Lin_OSX_16.o(.text) referenced 3 times from GUIDRV_Lin_OSX_16.o(.constdata)
 <LI><a href="#[8f]">_GetIndexMask_0</a> from GUICC_0.o(.text) referenced from GUICC_0.o(.constdata)
 <LI><a href="#[6e]">_GetIndexMask_565</a> from GUICC_565.o(.text) referenced from GUICC_565.o(.constdata)
 <LI><a href="#[73]">_GetPixelIndex</a> from GUIDRV_Lin_OSX_16.o(.text) referenced 3 times from GUIDRV_Lin_OSX_16.o(.constdata)
 <LI><a href="#[30]">_GetPos</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[7a]">_GetRect</a> from GUIDRV_Lin_OSX_16.o(.text) referenced 3 times from GUIDRV_Lin_OSX_16.o(.constdata)
 <LI><a href="#[5e]">_HubNotifyClearEndpointStallCompletion</a> from USBH_Hub.o(.text) referenced from USBH_Hub.o(.text)
 <LI><a href="#[62]">_HubProcessPortResetSetAddress</a> from USBH_Hub.o(.text) referenced from USBH_Hub.o(.text)
 <LI><a href="#[5f]">_HubStatusRequestCompletion</a> from USBH_Hub.o(.text) referenced from USBH_Hub.o(.text)
 <LI><a href="#[28]">_ISR</a> from usbh_config_lpc24xx.o(.text) referenced from usbh_config_lpc24xx.o(.text)
 <LI><a href="#[8e]">_Index2Color_0</a> from GUICC_0.o(.text) referenced from GUICC_0.o(.constdata)
 <LI><a href="#[33]">_Init</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[58]">_InitPortsCompletion</a> from USBH_RootHub.o(.text) referenced from USBH_RootHub.o(.text)
 <LI><a href="#[29]">_OS_ISR_Tick</a> from rtosinit.o(.text) referenced from rtosinit.o(.text)
 <LI><a href="#[3c]">_OS_RSema_OnTerminate</a> from OSRSEM.o(.text) referenced from OSRSEM.o(.text)
 <LI><a href="#[36]">_Off</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[35]">_On</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[41]">_OnAbortCompletion</a> from USBH_HID.o(.text) referenced from USBH_HID.o(.text)
 <LI><a href="#[3e]">_OnGeneralCompletion</a> from USBH_HID.o(.text) referenced 2 times from USBH_HID.o(.text)
 <LI><a href="#[40]">_OnGeneralDeviceNotification</a> from USBH_HID.o(.text) referenced from USBH_HID.o(.text)
 <LI><a href="#[42]">_OnIntInCompletion</a> from USBH_HID.o(.text) referenced from USBH_HID.o(.text)
 <LI><a href="#[26]">_OnKeyboardChange</a> from os_usbh_hid.o(.text) referenced from os_usbh_hid.o(.text)
 <LI><a href="#[25]">_OnMouseChange</a> from os_usbh_hid.o(.text) referenced from os_usbh_hid.o(.text)
 <LI><a href="#[43]">_OnOutCompletion</a> from USBH_HID.o(.text) referenced from USBH_HID.o(.text)
 <LI><a href="#[3f]">_OnResetReadEndpointCompletion</a> from USBH_HID.o(.text) referenced from USBH_HID.o(.text)
 <LI><a href="#[2a]">_OnRx</a> from gui_x_embos.o(.text) referenced from gui_x_embos.o(.text)
 <LI><a href="#[64]">_OnSubStateCompletion</a> from USBH_URB.o(.text) referenced from USBH_URB.o(.text)
 <LI><a href="#[50]">_OnSubmitUrbCompletion</a> from USBH_Device.o(.text) referenced from USBH_Device.o(.text)
 <LI><a href="#[5b]">_Paint1</a> from WM.o(.text) referenced from WM.o(.text)
 <LI><a href="#[4]">_Parser4GlobalItem</a> from USBH_HID.o(.text) referenced 2 times from USBH_HID.o(.data)
 <LI><a href="#[5]">_Parser4LocalItem</a> from USBH_HID.o(.text) referenced 2 times from USBH_HID.o(.data)
 <LI><a href="#[3]">_Parser4MainItem</a> from USBH_HID.o(.text) referenced 2 times from USBH_HID.o(.data)
 <LI><a href="#[6]">_Parser4Reserved</a> from USBH_HID.o(.text) referenced 2 times from USBH_HID.o(.data)
 <LI><a href="#[4e]">_ProcessEnumDisableParentHubPortCompletion</a> from USBH_Device.o(.text) referenced from USBH_Device.o(.text)
 <LI><a href="#[60]">_ProcessEnumHub</a> from USBH_Hub.o(.text) referenced from USBH_Hub.o(.text)
 <LI><a href="#[61]">_ProcessHubNotification</a> from USBH_Hub.o(.text) referenced from USBH_Hub.o(.text)
 <LI><a href="#[57]">_ProcessPortResetSetAddress</a> from USBH_RootHub.o(.text) referenced from USBH_RootHub.o(.text)
 <LI><a href="#[e]">_ResetEndpoint</a> from USBH_OHC_Device.o(.text) referenced 2 times from USBH_OHC_Device.o(.data)
 <LI><a href="#[54]">_ResetPipeCompletion</a> from USBH_Interface.o(.text) referenced from USBH_Interface.o(.text)
 <LI><a href="#[31]">_SetAlpha</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[38]">_SetAlphaMode</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[95]">_SetBkColor</a> from LCD.o(.text) referenced from LCD.o(.constdata)
 <LI><a href="#[3a]">_SetChroma</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[39]">_SetChromaMode</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[94]">_SetColor</a> from LCD.o(.text) referenced from LCD.o(.constdata)
 <LI><a href="#[96]">_SetDrawMode</a> from LCD.o(.text) referenced from LCD.o(.constdata)
 <LI><a href="#[55]">_SetInterfaceCompletion</a> from USBH_Interface.o(.text) referenced from USBH_Interface.o(.text)
 <LI><a href="#[37]">_SetLUTEntry</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[76]">_SetOrg</a> from GUIDRV_Lin_OSX_16.o(.text) referenced 3 times from GUIDRV_Lin_OSX_16.o(.constdata)
 <LI><a href="#[74]">_SetPixelIndex</a> from GUIDRV_Lin_OSX_16.o(.text) referenced 3 times from GUIDRV_Lin_OSX_16.o(.constdata)
 <LI><a href="#[2f]">_SetPos</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[2e]">_SetSize</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[2c]">_SetVRAMAddr</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[2d]">_SetVSize</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[32]">_SetVis</a> from GUIDRV_Lin_OSX_16.o(.text) referenced from GUIDRV_Lin_OSX_16.o(.text)
 <LI><a href="#[63]">_SubStateTimerRoutine</a> from USBH_URB.o(.text) referenced from USBH_URB.o(.text)
 <LI><a href="#[75]">_XorPixel</a> from GUIDRV_Lin_OSX_16.o(.text) referenced 3 times from GUIDRV_Lin_OSX_16.o(.constdata)
 <LI><a href="#[5a]">_cbPaintMemDev</a> from WM.o(.text) referenced from WM.o(.text)
 <LI><a href="#[65]">_cbTimer</a> from WM_Timer.o(.text) referenced from WM_Timer.o(.text)
 <LI><a href="#[68]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[67]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
 <LI><a href="#[5d]">cbBackWin</a> from WM.o(.text) referenced from WM.o(.text)
 <LI><a href="#[69]">fputc</a> from retarget.o(.text) referenced from _printf_char_file.o(.text)
 <LI><a href="#[22]">main</a> from main.o(.text) referenced from rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[a8]"></a>__program_start</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))

<P><STRONG><a name="[aa]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[ab]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[ad]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size 0 bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ae]"></a>_printf_d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[3c3]"></a>_printf_percent</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (via Veneer)
</UL>

<P><STRONG><a name="[b3]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via Veneer)
</UL>

<P><STRONG><a name="[b7]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via Veneer)
</UL>

<P><STRONG><a name="[ac]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b0]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b2]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[b4]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[3d1]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[b6]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>

<P><STRONG><a name="[b8]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit (via Veneer)
</UL>

<P><STRONG><a name="[2b]"></a>MainTask</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, os_usbh_hid.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Logf_Application
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_SetOnMouseStateChange
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_SetOnKeyboardStateChange
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SetPriority
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetMail
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CreateTask_R
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CreateMB
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ToggleLED
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>BSP_ETH_InstallISR</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_InstallISRHandler
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_ISRSetPrio
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_EnableISR
</UL>

<P><STRONG><a name="[d3]"></a>BSP_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CPCA9532_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d5]"></a>BSP_SetLED</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLEDState
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6]"></a>BSP_ClrLED</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLEDState
</UL>

<P><STRONG><a name="[c2]"></a>BSP_ToggleLED</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLEDState
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[e2]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChroma
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChromaMode
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlphaMode
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLUTEntry
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[e3]"></a>LCD_X_Config</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, bsp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Align
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[e8]"></a>BSP_USBH_InstallISR</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_InstallISRHandler
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_ISRSetPrio
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_EnableISR
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_X_Config
</UL>

<P><STRONG><a name="[f2]"></a>BSP_USBH_Init</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_X_Config
</UL>

<P><STRONG><a name="[69]"></a>fputc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[3cc]"></a>ferror</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[b9]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit (via Veneer)
</UL>

<P><STRONG><a name="[ea]"></a>_ttywrch</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3cf]"></a>__user_initial_stackheap</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap (via Veneer)
</UL>

<P><STRONG><a name="[ed]"></a>USBH_X_Config</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, usbh_config_lpc24xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetWarnFilter
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetLogFilter
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Add
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AssignTransferMemory
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AssignMemory
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USBH_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USBH_InstallISR
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[c7]"></a>I2CPCA9532_WriteRead</STRONG> (Thumb, 280 bytes, Stack size 0 bytes, i2cpca9532.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_I2C_PutChar
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_I2C_CheckStatus
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_I2C_GetChar
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_I2C_WriteWithWait
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CPCA9532_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLEDState
</UL>

<P><STRONG><a name="[d4]"></a>I2CPCA9532_Init</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, i2cpca9532.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CPCA9532_WriteRead
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[d0]"></a>OS_ARM_InstallISRHandler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtosinit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RestoreI
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitHW
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USBH_InstallISR
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ETH_InstallISR
</UL>

<P><STRONG><a name="[d2]"></a>OS_ARM_ISRSetPrio</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtosinit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RestoreI
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitHW
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USBH_InstallISR
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ETH_InstallISR
</UL>

<P><STRONG><a name="[d1]"></a>OS_ARM_EnableISR</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtosinit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RestoreI
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitHW
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USBH_InstallISR
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ETH_InstallISR
</UL>

<P><STRONG><a name="[fa]"></a>OS_InitHW</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, rtosinit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RestoreI
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_InstallISRHandler
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_ISRSetPrio
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_EnableISR
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fb]"></a>OS_Idle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtosinit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Idle
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Idle
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ChangeTask
</UL>

<P><STRONG><a name="[fc]"></a>OS_ConvertCycles2us</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rtosinit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>

<P><STRONG><a name="[fd]"></a>OS_COM_Send1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rtosinit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_COM_ClearTxActive
</UL>

<P><STRONG><a name="[ff]"></a>OS_irq_handler</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, rtosinit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SwitchFromInt (via Veneer)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via Veneer)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r5
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler (via Veneer)
</UL>

<P><STRONG><a name="[102]"></a>OS_ARM_DisableISR</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtosinit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RestoreI
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via Veneer)
</UL>

<P><STRONG><a name="[103]"></a>__low_level_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtosinit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitPLL
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EMC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler (via Veneer)
</UL>

<P><STRONG><a name="[14a]"></a>GUI_TOUCH_X_ActivateX</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[149]"></a>GUI_TOUCH_X_ActivateY</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[108]"></a>GUI_TOUCH_X_MeasureX</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_x_touch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsTouch
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SPI_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[109]"></a>GUI_TOUCH_X_MeasureY</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, gui_x_touch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsTouch
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SPI_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[10a]"></a>GUI_X_Config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, guiconf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_SetAvBlockSize
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[112]"></a>USBH_Panic</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbh_configio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_DisableInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ConfigRootHub
</UL>

<P><STRONG><a name="[114]"></a>USBH_Log</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usbh_configio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_EnableInterrupt
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_DisableInterrupt
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_puts
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowStamp
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Logf_Application
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Logf
</UL>

<P><STRONG><a name="[116]"></a>USBH_Warn</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usbh_configio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_EnableInterrupt
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_DisableInterrupt
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_puts
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowStamp
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Warnf_Application
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Warnf
</UL>

<P><STRONG><a name="[39a]"></a>GUI_X_GetTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_x_embos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>

<P><STRONG><a name="[118]"></a>GUI_X_Delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_x_embos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[11a]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_x_embos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Delay
</UL>

<P><STRONG><a name="[11b]"></a>GUI_X_InitOS</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_x_embos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CreateRSema
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
</UL>

<P><STRONG><a name="[11d]"></a>GUI_X_Unlock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_x_embos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Unuse
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_GetpContext
</UL>

<P><STRONG><a name="[11f]"></a>GUI_X_Lock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_x_embos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Use
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[24e]"></a>GUI_X_GetTaskId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_x_embos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[121]"></a>GUI_X_WaitEvent</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_x_embos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_WaitEvent
</UL>

<P><STRONG><a name="[123]"></a>GUI_X_SignalEvent</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_x_embos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SignalEvent
</UL>

<P><STRONG><a name="[126]"></a>GUI_X_Init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_x_embos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SetRxCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[128]"></a>OS_Error</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, os_error.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CreateTask_R
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ChangeTask
</UL>

<P><STRONG><a name="[22]"></a>main</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Start (via Veneer)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitKern
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitHW
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SetLED
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CreateTask_R
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[142]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[12c]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeMemory
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
</UL>

<P><STRONG><a name="[132]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 468 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeMemory
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>

<P><STRONG><a name="[238]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWinEx
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetDelay
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetTime
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveFromLinList
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_Select
</UL>

<P><STRONG><a name="[2e3]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_GetState
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[2e6]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_GetState
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[136]"></a>GUI_ALLOC_GetNumFreeBytes</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[137]"></a>GUI_ALLOC_GetNumFreeBlocks</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[138]"></a>GUI_ALLOC_GetNumUsedBytes</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[139]"></a>GUI_ALLOC_GetNumUsedBlocks</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[13a]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[13b]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv_100
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_sdiv_100
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[39d]"></a>GUI_ALLOC_Lock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[39e]"></a>GUI_ALLOC_Unlock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[10b]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[10c]"></a>GUI_ALLOC_SetAvBlockSize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[13e]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>

<P><STRONG><a name="[13f]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[140]"></a>GUI_ALLOC_FreePtrArray</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[14c]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUI_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPos
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntry
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChroma
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaMode
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaMode
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPos
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVis
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSize
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSize
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddr
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlpha
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaEx
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaModeEx
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaModeEx
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaEx
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelMax
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeMax
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfColor2IndexEx
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfIndex2ColorEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXY
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorY
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorX
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYMag
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXMag
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSize
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYMagEx
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXMagEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AssignCursorLayer
</UL>

<P><STRONG><a name="[141]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[143]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, GUI_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[3a4]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, GUI_Device.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[350]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, GUI_Device.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[e4]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, GUI_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[32f]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_OnKey.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[125]"></a>GUI_StoreKeyMsg</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, GUI_OnKey.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnRx
</UL>

<P><STRONG><a name="[144]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, GUI_OnKey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[146]"></a>GUI_SendKeyMsg</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, GUI_OnKey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
</UL>

<P><STRONG><a name="[db]"></a>GUI_TOUCH_SetOrientation</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_TOUCH_DriverAnalog.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
</UL>

<P><STRONG><a name="[dc]"></a>GUI_TOUCH_Calibrate</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, GUI_TOUCH_DriverAnalog.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
</UL>

<P><STRONG><a name="[cd]"></a>GUI_TOUCH_Exec</STRONG> (Thumb, 374 bytes, Stack size 0 bytes, GUI_TOUCH_DriverAnalog.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreUnstable
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_ActivateY
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_ActivateX
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecTouch
</UL>

<P><STRONG><a name="[147]"></a>LCD_GetXSizeEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
</UL>

<P><STRONG><a name="[148]"></a>LCD_GetYSizeEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
</UL>

<P><STRONG><a name="[14e]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[14f]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[150]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[151]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[152]"></a>LCD_GetXMagEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[153]"></a>LCD_GetYMagEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[d8]"></a>LCD_GetMirrorXEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
</UL>

<P><STRONG><a name="[d9]"></a>LCD_GetMirrorYEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
</UL>

<P><STRONG><a name="[da]"></a>LCD_GetSwapXYEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
</UL>

<P><STRONG><a name="[154]"></a>LCD_GetXSize</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[155]"></a>LCD_GetYSize</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[156]"></a>LCD_GetVXSize</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[157]"></a>LCD_GetVYSize</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[158]"></a>LCD_GetBitsPerPixel</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[159]"></a>LCD_GetNumColors</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[15a]"></a>LCD_GetXMag</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[15b]"></a>LCD_GetYMag</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[15c]"></a>LCD_GetMirrorX</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[15d]"></a>LCD_GetMirrorY</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[15e]"></a>LCD_GetSwapXY</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[15f]"></a>LCD_GetPaletteEx</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[160]"></a>LCD_GetPalette</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[161]"></a>LCD_GetpfIndex2ColorEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>

<P><STRONG><a name="[2e5]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[162]"></a>LCD_GetpfColor2IndexEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>

<P><STRONG><a name="[2e7]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[163]"></a>LCD_GetXSizeMax</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[164]"></a>LCD_GetYSizeMax</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[165]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[166]"></a>LCD_GetVYSizeMax</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[167]"></a>LCD_GetBitsPerPixelMax</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[349]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[168]"></a>LCD_SetAlphaEx</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerAlphaEx
</UL>

<P><STRONG><a name="[e7]"></a>LCD_SetVRAMAddrEx</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[e6]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[e5]"></a>LCD_SetSizeEx</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
</UL>

<P><STRONG><a name="[16a]"></a>LCD_SetVisEx</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
</UL>

<P><STRONG><a name="[16b]"></a>LCD_SetPosEx</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_Set.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
</UL>

<P><STRONG><a name="[16c]"></a>LCD_SetAlphaModeEx</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[16d]"></a>LCD_SetChromaModeEx</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[16e]"></a>LCD_SetChromaEx</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[16f]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUT
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEx
</UL>

<P><STRONG><a name="[170]"></a>LCD_GetPosEx</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_Set.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
</UL>

<P><STRONG><a name="[171]"></a>LCD_SetAlpha</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[172]"></a>LCD_SetVRAMAddr</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[173]"></a>LCD_SetVSize</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[174]"></a>LCD_SetSize</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[175]"></a>LCD_SetVis</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[176]"></a>LCD_SetPos</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[177]"></a>LCD_SetAlphaMode</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[178]"></a>LCD_SetChromaMode</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[179]"></a>LCD_SetChroma</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[17a]"></a>LCD_SetLUTEntry</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[17b]"></a>LCD_GetPos</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[bd]"></a>OS_CreateTask_R</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, OS_CreateTask.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Error
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InsertTask
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LeaveRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[230]"></a>OS_EVENT_Create</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, OS_EVENT_Create.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_Init
</UL>

<P><STRONG><a name="[17e]"></a>OS_EVENT_Set</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, OS_EVENT_Set.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ClearWaitObj
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LeaveRegion
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_SetEvent
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_SignalNetEvent
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_SignalISR
</UL>

<P><STRONG><a name="[182]"></a>OS_EVENT_Wait</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, OS_EVENT_Wait.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DeactivateP
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitEvent
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitISR
</UL>

<P><STRONG><a name="[184]"></a>OS_EVENT_WaitTimed</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, OS_EVENT_WaitTimed.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DeactivateTimedP
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitEventTimed
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitNetEvent
</UL>

<P><STRONG><a name="[f9]"></a>OS_HandleTick</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, OS_HandleTick.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_ISR_Tick
</UL>

<P><STRONG><a name="[127]"></a>OS_SetRxCallback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, OS_SetRxCallback.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
</UL>

<P><STRONG><a name="[fe]"></a>OS_COM_ClearTxActive</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, OSCOM2.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_COM_Send1
</UL>

<P><STRONG><a name="[124]"></a>OS_SignalEvent</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, OSEVENS.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MakeTaskReady
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_SignalEvent
</UL>

<P><STRONG><a name="[122]"></a>OS_WaitEvent</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, OSEVENW.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Switch (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_WaitEvent
</UL>

<P><STRONG><a name="[c3]"></a>OS_GetMail</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, OSGM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMail
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DeactivateP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LeaveRegion
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[111]"></a>OS_GetTaskName</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, OSINFO.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowStamp
</UL>

<P><STRONG><a name="[f8]"></a>OS_RestoreI</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, OSKERN.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_DisableISR
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitHW
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_InstallISRHandler
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_ISRSetPrio
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_EnableISR
</UL>

<P><STRONG><a name="[17d]"></a>OS_LeaveRegion</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, OSKERN.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Switch (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Use
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Unuse
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Set
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SetPriority
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PutMail
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetMail
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CreateTask_R
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_RSema_OnTerminate
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetNumTasks
</UL>

<P><STRONG><a name="[186]"></a>OS_MakeTaskReady</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, OSKERN.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Switch (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SignalEvent
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ClearWaitObj
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InsertTask
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ChangeTask
</UL>

<P><STRONG><a name="[189]"></a>OS_ActivateTask</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, OSKERN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Switch (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
</UL>

<P><STRONG><a name="[17c]"></a>OS_InsertTask</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, OSKERN.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MakeTaskReady
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SetPriority
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CreateTask_R
</UL>

<P><STRONG><a name="[193]"></a>OS_UnlinkTask</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, OSKERN.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SetPriority
</UL>

<P><STRONG><a name="[18a]"></a>OS_ChangeTask</STRONG> (Thumb, 580 bytes, Stack size 0 bytes, OSKERN.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Error
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Idle
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetNumTasks
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MakeTaskReady
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Switch (via Veneer)
</UL>

<P><STRONG><a name="[18d]"></a>OS_Deactivated</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, OSKERN.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Switch (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DeactivateTimedP
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DeactivateP
</UL>

<P><STRONG><a name="[129]"></a>OS_InitKern</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, OSKERN.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d8]"></a>OS_DecRegionCnt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, OSKERN.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SwitchAfterISR (via Veneer)
</UL>

<P><STRONG><a name="[18e]"></a>OS_CallISR</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, OSKERN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SwitchFromInt (via Veneer)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>

<P><STRONG><a name="[18f]"></a>OS_CallNestableISR</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, OSKERN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SwitchFromInt (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r5
</UL>

<P><STRONG><a name="[191]"></a>OS_DelayUntil</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, OSKERN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Switch (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>

<P><STRONG><a name="[119]"></a>OS_Delay</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, OSKERN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Switch (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ExecIdle
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_Delay
</UL>

<P><STRONG><a name="[c1]"></a>OS_CreateMB</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, OSMAIL.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[ba]"></a>OS_PutMail</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, OSPM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PutMail
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DeactivateP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LeaveRegion
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeyboardChange
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMouseChange
</UL>

<P><STRONG><a name="[11c]"></a>OS_CreateRSema</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, OSRSEM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_Init
</UL>

<P><STRONG><a name="[120]"></a>OS_Use</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, OSRSEM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DeactivateP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LeaveRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_Lock
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_LockSys
</UL>

<P><STRONG><a name="[11e]"></a>OS_Unuse</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, OSRSEM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ClearWaitObj
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LeaveRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_Unlock
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_UnlockSys
</UL>

<P><STRONG><a name="[bc]"></a>OS_SetPriority</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, OSSETP.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlinkTask
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InsertTask
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LeaveRegion
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[e0]"></a>OS_CreateTimer</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, OSTIME.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
</UL>

<P><STRONG><a name="[e1]"></a>OS_StartTimer</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, OSTIME.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
</UL>

<P><STRONG><a name="[194]"></a>OS_StopTimer</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, OSTIME.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>

<P><STRONG><a name="[ce]"></a>OS_RetriggerTimer</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, OSTIME.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecTouch
</UL>

<P><STRONG><a name="[195]"></a>USBH_AllocTimer</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MallocZeroed
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_Init
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateAllocInit
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateInit
</UL>

<P><STRONG><a name="[197]"></a>USBH_CancelTimer</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_UnlockSys
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_LockSys
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnSubStateCompletion
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateSubmitRequest
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateExit
</UL>

<P><STRONG><a name="[19a]"></a>USBH_FreeTimer</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_UnlockSys
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_LockSys
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteDevice
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Exit
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateExit
</UL>

<P><STRONG><a name="[19c]"></a>USBH_StartTimer</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_UnlockSys
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_SignalNetEvent
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_LockSys
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_GetTime32
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_ReleaseEndpoint
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_OnAbortUrbTimer
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_AbortEp
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_ReleaseEp
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_OnReleaseEpTimer
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_OnAbortUrbTimer
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_ReleaseEp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AbortEp
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_ReleaseEp
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_OnAbortUrbTimer
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AbortEp
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateWait
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessNotification
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessDeviceNotifications
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateSubmitRequest
</UL>

<P><STRONG><a name="[19f]"></a>USBH_IsExpired</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, USBH_Core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_GetTime32
</UL>

<P><STRONG><a name="[23]"></a>USBH_Task</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitNetEvent
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_UnlockSys
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_LockSys
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_GetTime32
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_usbh_hid.o(.text)
</UL>
<P><STRONG><a name="[24]"></a>USBH_ISRTask</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitISR
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_usbh_hid.o(.text)
</UL>
<P><STRONG><a name="[1a3]"></a>USBH_OnISREvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, USBH_Core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_SignalISR
</UL>

<P><STRONG><a name="[bb]"></a>USBH_Init</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_X_Config
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_Init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EnumerateDevices
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_PreInit
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[27e]"></a>USBH_SearchNextDescriptor</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptorFromInterface
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetEndpointDescriptorFromInterface
</UL>

<P><STRONG><a name="[1a9]"></a>USBH_BD_InitDefaultEndpoint</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r6
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
</UL>

<P><STRONG><a name="[1ab]"></a>USBH_BD_ReleaseDefaultEndpoint</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r3
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
</UL>

<P><STRONG><a name="[52]"></a>USBH_BD_DefaultEpUrbCompletion</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Interface.o(.text)
</UL>
<P><STRONG><a name="[1ae]"></a>USBH_BD_DefaultEpSubmitUrb</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
</UL>

<P><STRONG><a name="[1b0]"></a>USBH_BD_SubmitClearFeatureEndpointStall</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubStatusRequestCompletion
</UL>

<P><STRONG><a name="[1b2]"></a>USBH_BD_SubmitSetInterface</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
</UL>

<P><STRONG><a name="[1b4]"></a>USBH_ResetEndpoint</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnIntInCompletion
</UL>

<P><STRONG><a name="[1f4]"></a>USBH_WriteReg32</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_SetPortSuspend
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_SetPortPower
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_ResetPort
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_ProcessInterrupt
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_Init
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_DisablePort
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Insert
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_InsertEp
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ProcessInterrupt
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ServiceISR
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostInit
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetHcFuncState
</UL>

<P><STRONG><a name="[1f3]"></a>USBH_ReadReg32</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_SetPortSuspend
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_ResetPort
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_ProcessInterrupt
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_Init
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_GetPortStatus
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_GetHubStatus
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ProcessInterrupt
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ServiceISR
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostInit
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetHcFuncState
</UL>

<P><STRONG><a name="[1c0]"></a>USBH_LoadU32LE</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ParseReport
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessHubNotification
</UL>

<P><STRONG><a name="[1c1]"></a>USBH_LoadU16LE</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ParseReport
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
</UL>

<P><STRONG><a name="[1b6]"></a>USBH_ConfigRootHub</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, USBH_Core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Panic
</UL>

<P><STRONG><a name="[1bf]"></a>USBH_DLIST_Init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InitEp
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_GetEp
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveEDFromLogicalListAndFree
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_BuildDummyEpTree
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Init
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Get
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AbortEp
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_InitEp
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_GetEp
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ParseReport
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_PreInit
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_CreateTransferBufferPool
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompletePendingUrbs
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_CompletePendingUrbs
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_Init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateHostController
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_StartHub
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewUsbInterface
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_AllocInitUsbHub
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkParentAndChildDevicesAsRemoved
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateNewUsbDevice
</UL>

<P><STRONG><a name="[1d7]"></a>USBH_DLIST_IsEmpty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveEDFromLogicalListAndFree
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AbortEp
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetDeviceInfo
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetNumDevices
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_GetFromTransferBufferPool
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_CreateTransferBufferPool
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_DeleteTransferBufferPool
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_AddUrb
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompletePendingUrbs
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AddUrb
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_CompletePendingUrbs
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetFirstTDFromED
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetLastTDFromED
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobRemoveAllTDtoPool
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInsertTD
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_Release
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_NotifyWrapperCallbackRoutine
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteHub
</UL>

<P><STRONG><a name="[1d8]"></a>USBH_DLIST_GetNext</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RemoveHostController
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_OnNotification
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_OnAbortUrbTimer
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_AbortEp
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveEDFromLogicalListAndFree
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveAllUserEDFromPhysicalLink
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_OnAbortUrbTimer
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AbortEp
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_OnAbortUrbTimer
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AbortEp
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetDeviceInfo
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetNumDevices
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_HubGetPortByNumber
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessHubNotification
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RestartEnumError
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationHubPortReset
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdFireEnumErrorNotification
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationRootPortReset
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_GetPortByNumber
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitPortsCompletion
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompletePendingUrbs
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_CompletePendingUrbs
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetFirstTDFromED
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SearchUsbEndpointInInterface
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_RemoveEndpoints
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetInterfaceCompletion
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_ServicePorts
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ServiceAllHubs
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessNotification
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessDeviceNotifications
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_NotifyWrapperCallbackRoutine
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_GetInterfaceById
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_GetDeviceById
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_RemoveNotification
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_AddNotification
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationProcessDeviceEnum
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessDevicePnpNotifications
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_HubBuildChildDeviceList
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_GetPendingUrbCount
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteUsbInterface
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetPendingUrbCount
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SearchUsbInterface
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkDeviceAsRemoved
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteInterfaces
</UL>

<P><STRONG><a name="[273]"></a>USBH_DLIST_GetPrev</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_ReleaseEndpoint
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveAllUserEDFromPhysicalLink
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_ReleaseEp
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Insert
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_InsertEp
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetLastTDFromED
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInsertTD
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkParentAndChildDevicesAsRemoved
</UL>

<P><STRONG><a name="[274]"></a>USBH_DLIST_RemoveEntry</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RemoveHostController
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveEDFromLogicalListAndFree
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AbortEp
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AddHostController
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UnregisterPnPNotification
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UnregisterEnumErrorNotification
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompletePendingUrbs
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_CompletePendingUrbs
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteDoneTD
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_RemoveEndpoints
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RemoveUsbEndpoint
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetInterfaceCompletion
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_NotifyWrapperCallbackRoutine
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_RemoveHostController
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_RemoveDeviceFromList
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_RemoveUsbInterface
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteUsbInterface
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkParentAndChildDevicesAsRemoved
</UL>

<P><STRONG><a name="[2a4]"></a>USBH_DLIST_RemoveHead</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveEDFromLogicalListAndFree
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_GetFromTransferBufferPool
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_CreateTransferBufferPool
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_DeleteTransferBufferPool
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteAllPendingTD
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_Release
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteHub
</UL>

<P><STRONG><a name="[2a7]"></a>USBH_DLIST_RemoveTail</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AbortEp
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompletePendingUrbs
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_CompletePendingUrbs
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobRemoveAllTDtoPool
</UL>

<P><STRONG><a name="[2b5]"></a>USBH_DLIST_InsertHead</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InsertEp
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveEDFromLogicalListAndFree
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_InsertEp
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AbortEp
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompletePendingUrbs
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_CompletePendingUrbs
</UL>

<P><STRONG><a name="[1bb]"></a>USBH_DLIST_InsertTail</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Insert
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_InsertEp
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AddHostController
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RegisterPnPNotification
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddField
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_PutToTransferBufferPool
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_CreateTransferBufferPool
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RegisterEnumErrorNotification
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_AddUrb
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AddUrb
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AddUrb
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInsertTD
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_AddUsbEndpoint
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetInterfaceCompletion
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_AddPortsStartPowerGoodTime
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessNotification
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessDeviceNotifications
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_AddHostController
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_HubBuildChildDeviceList
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_CreateEndpoints
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_AddUsbInterface
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AddUsbDevice
</UL>

<P><STRONG><a name="[1c4]"></a>USBH_DLIST_Remove</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_h2p
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckStateAndCloseInterface
</UL>

<P><STRONG><a name="[1cb]"></a>USBH_DLIST_Add</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_h2p
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
</UL>

<P><STRONG><a name="[ec]"></a>USBH_ServiceISR</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_SignalISR
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISR
</UL>

<P><STRONG><a name="[2c0]"></a>USBH__ConvSetupPacketToBuffer</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, USBH_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AddUrb
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
</UL>

<P><STRONG><a name="[1b7]"></a>USBH_AllocIsoUrb</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, USBH_Core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MallocZeroed
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AllocTransferMemory
</UL>

<P><STRONG><a name="[1b9]"></a>USBH_FreeIsoUrb</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, USBH_Core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
</UL>

<P><STRONG><a name="[be]"></a>USBH_HID_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RegisterPnPNotification
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[1d3]"></a>USBH_HID_Exit</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UnregisterPnPNotification
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CloseInterface
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckStateAndCloseInterface
</UL>

<P><STRONG><a name="[bf]"></a>USBH_HID_SetOnMouseStateChange</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[c0]"></a>USBH_HID_SetOnKeyboardStateChange</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[1d5]"></a>USBH_HID_GetNumDevices</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetInterfaceInfo
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>

<P><STRONG><a name="[1da]"></a>USBH_HID_Open</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>

<P><STRONG><a name="[1dc]"></a>USBH_HID_GetDeviceInfo</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetInterfaceInfo
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_h2p
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ParseReport
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
</UL>

<P><STRONG><a name="[1de]"></a>USBH_HID_GetReportDescriptorParsed</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_h2p
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ParseReport
</UL>

<P><STRONG><a name="[1df]"></a>USBH_HID_GetReportDescriptor</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_h2p
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>

<P><STRONG><a name="[1e1]"></a>USBH_HID_GetReport</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitEvent
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_FreeEvent
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_AllocEvent
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SubmitInBuffer
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_h2p
</UL>

<P><STRONG><a name="[1e3]"></a>USBH_HID_SetReport</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitEvent
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_FreeEvent
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_AllocEvent
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SubmitOutBuffer
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_h2p
</UL>

<P><STRONG><a name="[1e5]"></a>USBH_HID_CancelIo</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitEvent
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_FreeEvent
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_AllocEvent
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_h2p
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
</UL>

<P><STRONG><a name="[1e6]"></a>USBH_HID_Close</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_h2p
</UL>

<P><STRONG><a name="[1e8]"></a>USBH_PrintfSafe</STRONG> (Thumb, 294 bytes, Stack size 0 bytes, USBH_Log.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Logf_Application
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_sprintf_Application
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Warnf_Application
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Warnf
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Logf
</UL>

<P><STRONG><a name="[1e9]"></a>USBH_Logf</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, USBH_Log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Log
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PrintfSafe
</UL>

<P><STRONG><a name="[1ea]"></a>USBH_Warnf</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, USBH_Log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Warn
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PrintfSafe
</UL>

<P><STRONG><a name="[f1]"></a>USBH_SetLogFilter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, USBH_Log.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_X_Config
</UL>

<P><STRONG><a name="[f0]"></a>USBH_SetWarnFilter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, USBH_Log.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_X_Config
</UL>

<P><STRONG><a name="[c4]"></a>USBH_Logf_Application</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, USBH_Log.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Log
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PrintfSafe
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[1eb]"></a>USBH_Warnf_Application</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, USBH_Log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Warn
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PrintfSafe
</UL>

<P><STRONG><a name="[1ec]"></a>USBH_sprintf_Application</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, USBH_Log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PrintfSafe
</UL>

<P><STRONG><a name="[1ed]"></a>USBH_MEM_POOL_Create</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, USBH_MEM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>

<P><STRONG><a name="[1ef]"></a>USBH_MEM_POOL_Alloc</STRONG> (Thumb, 242 bytes, Stack size 0 bytes, USBH_MEM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_UnlockSys
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_LockSys
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_TryMalloc
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MallocZeroed
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AllocTransferMemory
</UL>

<P><STRONG><a name="[1f0]"></a>USBH_MEM_POOL_Free</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, USBH_MEM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_UnlockSys
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_LockSys
</UL>

<P><STRONG><a name="[1f1]"></a>USBH_TryMalloc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, USBH_MEM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MEM_POOL_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_CreateTransferBufferPool
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_BufferAllocateTransferBuffer
</UL>

<P><STRONG><a name="[1b3]"></a>USBH_Malloc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, USBH_MEM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MEM_POOL_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_AllocPool
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ParseReport
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Parser4MainItem
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddField
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SubmitSetInterface
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateAllocInit
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_CreateTransferBufferPool
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewHubPort
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewEndpoint
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessNotification
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessDeviceNotifications
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_NewNotification
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateHostController
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewUsbInterface
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_AllocInitUsbHub
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateNewUsbDevice
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
</UL>

<P><STRONG><a name="[196]"></a>USBH_MallocZeroed</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, USBH_MEM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MEM_POOL_Alloc
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AllocIsoUrb
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AllocTimer
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RegisterEnumErrorNotification
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateEnumErrorNotification
</UL>

<P><STRONG><a name="[19b]"></a>USBH_Free</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, USBH_MEM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_UnlockSys
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_LockSys
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_FreePool
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_AllocPool
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AddHostController
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteDevice
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckStateAndCloseInterface
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ParseReport
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Parser4MainItem
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DefaultReleaseEpCompletion
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_FreeIsoUrb
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_FreeTimer
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateFree
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_CreateTransferBufferPool
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_DeleteTransferBufferPool
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UnregisterEnumErrorNotification
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteHubPort
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewEndpoint
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteEndpoint
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetInterfaceCompletion
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ResetPipeCompletion
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ReleaseNotification
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_NotifyWrapperCallbackRoutine
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateHostController
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_BufferFreeTransferBuffer
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteHostController
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteUsbInterface
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteHub
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_AllocInitUsbHub
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
</UL>

<P><STRONG><a name="[ee]"></a>USBH_AssignMemory</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, USBH_MEM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_X_Config
</UL>

<P><STRONG><a name="[ef]"></a>USBH_AssignTransferMemory</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, USBH_MEM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_X_Config
</UL>

<P><STRONG><a name="[1b8]"></a>USBH_AllocTransferMemory</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, USBH_MEM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MEM_POOL_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_AllocPool
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AllocIsoUrb
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_CreateTransferBufferPool
</UL>

<P><STRONG><a name="[1f5]"></a>USBH_IsTimeOver</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_GetTime32
</UL>

<P><STRONG><a name="[1f6]"></a>USBH_OHCI_EndpointListEnable</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ReadReg32
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_ReleaseEp
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_ReleaseEp
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostInit
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddControlBulkDummyEndpoint
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_SubmitUrb
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AddUrb
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_SubmitTransfer
</UL>

<P><STRONG><a name="[204]"></a>USBH_OHCI_GetCopyTransferBuffer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_GetItem
</UL>

<P><STRONG><a name="[206]"></a>USBH_OHCI_GetInitializedCopyTransferBuffer</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_GetItem
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AddUrb
</UL>

<P><STRONG><a name="[2ad]"></a>USBH_OHCI_GetBufferLengthFromCopyTransferBuffer</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckForCompletion
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AddUrb
</UL>

<P><STRONG><a name="[2bc]"></a>USBH_OHCI_UpdateCopyTransferBuffer</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_UpdateTDLengthStatus
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_UpdateTDLengthStatus
</UL>

<P><STRONG><a name="[207]"></a>USBH_OHCI_FillCopyTransferBuffer</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckForCompletion
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AddUrb
</UL>

<P><STRONG><a name="[208]"></a>USBH_OHCI_CopyToUrbBufferUpdateTransferBuffer</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_UpdateTDLengthStatus
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_UpdateTDLengthStatus
</UL>

<P><STRONG><a name="[209]"></a>USBH_OHCI_CreateController</STRONG> (Thumb, 434 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdAlloc
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_AllocPool
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_DummyEpAllocPool
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HccaAlloc
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Alloc
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AllocPool
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_AllocPool
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteDevice
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AllocTimer
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Add
</UL>

<P><STRONG><a name="[212]"></a>USBH_OHCI_DeleteController</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteDevice
</UL>

<P><STRONG><a name="[213]"></a>USBH_OHCI_RemoveController</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RemoveHostController
</UL>

<P><STRONG><a name="[7]"></a>USBH_OHCI_HostInit</STRONG> (Thumb, 452 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_Init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_InitAllocDummyIntEps
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_BuildDummyEpTree
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HccaSetInterruptTable
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_udiv_10 (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddControlBulkDummyEndpoint
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetHcFuncState
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_GetTime32
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ReadReg32
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>USBH_OHCI_HostExit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>USBH_OHCI_AddEndpoint</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InsertEp
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InitEp
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_GetEp
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_InsertEp
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Put
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Insert
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Init
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Get
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_InsertEp
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_PutEp
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_InitEp
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_GetEp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>USBH_OHCI_ReleaseEndpoint</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_ReleaseEndpoint
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_ReleaseEp
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_ReleaseEp
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_ReleaseEp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>USBH_OHCI_SetHcState</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetHcFuncState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>USBH_OHCI_GetFrameNumber</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>USBH_OHCI_ServiceISR</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ReadReg32
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>USBH_OHCI_ProcessInterrupt</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TRANSFER_ProcessDoneInterrupt
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_ProcessInterrupt
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ReadReg32
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[f3]"></a>USBH_OHCI_Add</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AddHostController
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_X_Config
</UL>

<P><STRONG><a name="[113]"></a>USBH_OS_DisableInterrupt</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Warn
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Log
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Panic
</UL>

<P><STRONG><a name="[115]"></a>USBH_OS_EnableInterrupt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Warn
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Log
</UL>

<P><STRONG><a name="[1a5]"></a>USBH_OS_Init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Create
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CreateRSema
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[231]"></a>USBH_OS_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Use
</UL>

<P><STRONG><a name="[232]"></a>USBH_OS_Unlock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Unuse
</UL>

<P><STRONG><a name="[198]"></a>USBH_OS_LockSys</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Use
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Task
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MEM_POOL_Free
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MEM_POOL_Alloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_FreeTimer
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CancelTimer
</UL>

<P><STRONG><a name="[199]"></a>USBH_OS_UnlockSys</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Unuse
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Task
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MEM_POOL_Free
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MEM_POOL_Alloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_FreeTimer
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CancelTimer
</UL>

<P><STRONG><a name="[19d]"></a>USBH_OS_GetTime32</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Task
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostInit
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_IsTimeOver
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_IsExpired
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
</UL>

<P><STRONG><a name="[233]"></a>USBH_OS_Delay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Delay
</UL>

<P><STRONG><a name="[1a1]"></a>USBH_OS_WaitNetEvent</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_WaitTimed
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Task
</UL>

<P><STRONG><a name="[19e]"></a>USBH_OS_SignalNetEvent</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
</UL>

<P><STRONG><a name="[1a2]"></a>USBH_OS_WaitISR</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ISRTask
</UL>

<P><STRONG><a name="[1a4]"></a>USBH_OS_SignalISR</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ServiceISR
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OnISREvent
</UL>

<P><STRONG><a name="[1c7]"></a>USBH_OS_AllocEvent</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_CancelIo
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_SetReport
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetReport
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnIntInCompletion
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptorEx
</UL>

<P><STRONG><a name="[1c9]"></a>USBH_OS_FreeEvent</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_CancelIo
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_SetReport
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetReport
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnIntInCompletion
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptorEx
</UL>

<P><STRONG><a name="[1c5]"></a>USBH_OS_SetEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAbortCompletion
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOutCompletion
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnIntInCompletion
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralCompletion
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnSubmitUrbCompletion
</UL>

<P><STRONG><a name="[234]"></a>USBH_OS_ResetEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Reset
</UL>

<P><STRONG><a name="[1e2]"></a>USBH_OS_WaitEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_CancelIo
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_SetReport
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetReport
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptorEx
</UL>

<P><STRONG><a name="[1c8]"></a>USBH_OS_WaitEventTimed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, USBH_OS_embOS.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_WaitTimed
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnIntInCompletion
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptorEx
</UL>

<P><STRONG><a name="[6d]"></a>LCD_Index2Color_565</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, GUICC_565_Index2Color.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv_63
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv_31
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_565.o(.constdata)
</UL>
<P><STRONG><a name="[23c]"></a>GUI_ClearRect</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>

<P><STRONG><a name="[241]"></a>GUI_Clear</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, GUI_Core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[243]"></a>GUI__Config</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[244]"></a>GUI_Init</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[135]"></a>GUI_Unlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI_Task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_GetState
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWinEx
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetDelay
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetTime
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenShape
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetState
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeNone
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerAlphaEx
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoX
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoY
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_Select
</UL>

<P><STRONG><a name="[133]"></a>GUI_Lock</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, GUI_Task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_GetpContext
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_GetState
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWinEx
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetDelay
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetTime
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenShape
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetState
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeNone
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerAlphaEx
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoX
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoY
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_Select
</UL>

<P><STRONG><a name="[248]"></a>GUITASK_Init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_Task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[24c]"></a>GUITASK_CopyContext</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, GUI_Task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[24f]"></a>GUITASK_GetpContext</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, GUI_Task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>

<P><STRONG><a name="[14b]"></a>GUI_TOUCH_StoreUnstable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, GUI_TOUCH_StoreUnstable.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreState
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[251]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, LCD_Color.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>

<P><STRONG><a name="[253]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, LCD_Color.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>

<P><STRONG><a name="[254]"></a>LCD_InitLUT</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, LCD_Color.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[145]"></a>WM_OnKey</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, WM_OnKey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[183]"></a>OS_DeactivateP</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, OS_DeactivateP.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Deactivated
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Wait
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Use
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PutMail
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetMail
</UL>

<P><STRONG><a name="[185]"></a>OS_DeactivateTimedP</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, OS_DeactivateTP.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Deactivated
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_WaitTimed
</UL>

<P><STRONG><a name="[235]"></a>OS_EVENT_Reset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, OS_EVENT_Reset.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_ResetEvent
</UL>

<P><STRONG><a name="[18c]"></a>OS_GetNumTasks</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, OS_GetNumTasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LeaveRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ChangeTask
</UL>

<P><STRONG><a name="[180]"></a>OS_ClearWaitObj</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, OS_Wait.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MakeTaskReady
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Unuse
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Set
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_RSema_OnTerminate
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PutMail
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMail
</UL>

<P><STRONG><a name="[192]"></a>_PutMail</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, OSMX.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ClearWaitObj
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PutMail
</UL>

<P><STRONG><a name="[188]"></a>_GetMail</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, OSMX.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ClearWaitObj
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_enable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetMail
</UL>

<P><STRONG><a name="[259]"></a>USBH_DeleteInterfaces</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, USBH_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_RemoveUsbInterface
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteUsbInterface
</UL>

<P><STRONG><a name="[1ad]"></a>USBH_DeleteDevice</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ReleaseDefaultEndpoint
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateExit
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_BufferFreeTransferBuffer
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteHostController
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_RemoveUsbInterface
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteUsbInterface
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteHub
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CloseInterface
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SubmitSetInterface
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SubmitClearFeatureEndpointStall
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DefaultEpSubmitUrb
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DefaultEpUrbCompletion
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnSubStateCompletion
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SubStateTimerRoutine
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetError
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetSetIdleServicePorts
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubProcessPortResetSetAddress
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubStatusRequestCompletion
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubNotifyClearEndpointStallCompletion
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessHubNotification
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_EpUrbCompletion
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_EpSubmitUrb
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetInterfaceCompletion
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ResetPipeCompletion
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateSubmitRequest
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkDeviceAsRemoved
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateNewUsbDevice
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CheckCtrlTransferBuffer
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EnumParentPortRestart
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ProcessEnumPortError
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumDisableParentHubPortCompletion
</UL>

<P><STRONG><a name="[334]"></a>USBH_GetUcharFromDesc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewEndpoint
</UL>

<P><STRONG><a name="[260]"></a>USBH_ProcessEnumPortError</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationProcessDeviceEnum
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateSubmitRequest
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateInit
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateExit
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SetPortState
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_HubPrepareClrFeatureReq
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
</UL>

<P><STRONG><a name="[266]"></a>USBH_EnumParentPortRestart</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationProcessDeviceEnum
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ServicePorts
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SetPortState
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
</UL>

<P><STRONG><a name="[335]"></a>USBH_GetUshortFromDesc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewEndpoint
</UL>

<P><STRONG><a name="[268]"></a>USBH_CheckCtrlTransferBuffer</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_BufferFreeTransferBuffer
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_BufferAllocateTransferBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessHubNotification
</UL>

<P><STRONG><a name="[4f]"></a>USBH_BD_ProcessEnum</STRONG> (Thumb, 1444 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ReleaseDefaultEndpoint
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_InitDefaultEndpoint
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateSubmitRequest
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_BufferFreeTransferBuffer
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_BufferAllocateTransferBuffer
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_StartHub
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_AllocInitUsbHub
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EnumParentPortRestart
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ProcessEnumPortError
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartEnumeration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Device.o(.text)
</UL>
<P><STRONG><a name="[26c]"></a>USBH_CreateNewUsbDevice</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateInit
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_GetNextDeviceId
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubProcessPortResetSetAddress
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
</UL>

<P><STRONG><a name="[26e]"></a>USBH_MarkDeviceAsRemoved</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_RemoveDeviceFromList
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessDevicePnpNotifications
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RemoveHostController
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkParentAndChildDevicesAsRemoved
</UL>

<P><STRONG><a name="[271]"></a>USBH_MarkParentAndChildDevicesAsRemoved</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetPrev
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_HubBuildChildDeviceList
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkDeviceAsRemoved
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_OnNotification
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubStatusRequestCompletion
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubNotifyClearEndpointStallCompletion
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessHubNotification
</UL>

<P><STRONG><a name="[275]"></a>USBH_StartEnumeration</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubProcessPortResetSetAddress
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
</UL>

<P><STRONG><a name="[29f]"></a>USBH_GetNextInterfaceDesc</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
</UL>

<P><STRONG><a name="[56]"></a>USBH_CreateInterfaces</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessDevicePnpNotifications
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewUsbInterface
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteUsbInterface
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_CreateEndpoints
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_AddUsbInterface
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AddUsbDevice
</UL>
<BR>[Address Reference Count : 2]<UL><LI> USBH_RootHub.o(.text)
<LI> USBH_Hub.o(.text)
</UL>
<P><STRONG><a name="[299]"></a>USBH_GetNextEndpointDesc</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetInterfaceCompletion
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_CreateEndpoints
</UL>

<P><STRONG><a name="[27a]"></a>USBH_GetDeviceDescriptor</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, USBH_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>

<P><STRONG><a name="[1ce]"></a>USBH_GetCurrentConfigurationDescriptor</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
</UL>

<P><STRONG><a name="[1d0]"></a>USBH_GetInterfaceDescriptor</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
</UL>

<P><STRONG><a name="[27b]"></a>USBH_SearchUsbInterface</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_CompareUsbInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
</UL>

<P><STRONG><a name="[27d]"></a>USBH_GetEndpointDescriptorFromInterface</STRONG> (Thumb, 300 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SearchNextDescriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetEndpointDescriptor
</UL>

<P><STRONG><a name="[27f]"></a>USBH_GetDescriptorFromInterface</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, USBH_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SearchNextDescriptor
</UL>

<P><STRONG><a name="[1cf]"></a>USBH_GetEndpointDescriptor</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetEndpointDescriptorFromInterface
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
</UL>

<P><STRONG><a name="[1d1]"></a>USBH_GetDescriptor</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SearchNextDescriptor
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateSubmitRequest
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
</UL>

<P><STRONG><a name="[280]"></a>USBH_GetDescriptorEx</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, USBH_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitEventTimed
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitEvent
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_FreeEvent
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_AllocEvent
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>

<P><STRONG><a name="[281]"></a>USBH_GetSerialNumber</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, USBH_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>

<P><STRONG><a name="[282]"></a>USBH_GetFrameNumber</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, USBH_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
</UL>

<P><STRONG><a name="[283]"></a>USBH_GetPendingUrbCount</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, USBH_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_GetPendingUrbCount
</UL>

<P><STRONG><a name="[26f]"></a>USBH_BD_ProcessDevicePnpNotifications</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, USBH_Driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessDeviceNotifications
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateInterfaces
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkDeviceAsRemoved
</UL>

<P><STRONG><a name="[286]"></a>USBH_BD_AddHostController</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, USBH_Driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
</UL>

<P><STRONG><a name="[287]"></a>USBH_BD_RemoveHostController</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, USBH_Driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
</UL>

<P><STRONG><a name="[288]"></a>USBH_BD_AddNotification</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, USBH_Driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessDeviceNotifications
</UL>

<P><STRONG><a name="[289]"></a>USBH_BD_RemoveNotification</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, USBH_Driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessDeviceNotifications
</UL>

<P><STRONG><a name="[2a0]"></a>USBH_BD_GetNextInterfaceId</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, USBH_Driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewUsbInterface
</UL>

<P><STRONG><a name="[26d]"></a>USBH_BD_GetNextDeviceId</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, USBH_Driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateNewUsbDevice
</UL>

<P><STRONG><a name="[28a]"></a>USBH_BD_GetDeviceById</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, USBH_Driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
</UL>

<P><STRONG><a name="[28b]"></a>USBH_BD_GetInterfaceById</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, USBH_Driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OpenInterface
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetInterfaceInfo
</UL>

<P><STRONG><a name="[1a6]"></a>USBH_BD_PreInit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, USBH_Driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[1a7]"></a>USBH_BD_Init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, USBH_Driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AllocTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[28c]"></a>USBH_Exit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, USBH_Driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_FreeTimer
</UL>

<P><STRONG><a name="[22d]"></a>USBH_AddHostController</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, USBH_Driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r3
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_Release
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateHostController
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Add
</UL>

<P><STRONG><a name="[214]"></a>USBH_RemoveHostController</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, USBH_Driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r3
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteHostController
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkDeviceAsRemoved
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_RemoveController
</UL>

<P><STRONG><a name="[1d2]"></a>USBH_RegisterPnPNotification</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, USBH_Driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessNotification
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_NewNotification
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_Init
</UL>

<P><STRONG><a name="[1d4]"></a>USBH_UnregisterPnPNotification</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, USBH_Driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ReleaseNotification
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_Exit
</UL>

<P><STRONG><a name="[28d]"></a>USBH_CreateHostController</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AddHostController
</UL>

<P><STRONG><a name="[25f]"></a>USBH_DeleteHostController</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_Release
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RemoveHostController
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitPortsCompletion
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
</UL>

<P><STRONG><a name="[279]"></a>USBH_AddUsbDevice</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateInterfaces
</UL>

<P><STRONG><a name="[270]"></a>USBH_HC_RemoveDeviceFromList</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkDeviceAsRemoved
</UL>

<P><STRONG><a name="[3d]"></a>USBH_DefaultReleaseEpCompletion</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_Release
</UL>
<BR>[Address Reference Count : 3]<UL><LI> USBH_Core.o(.text)
<LI> USBH_Driver.o(.text)
<LI> USBH_EndPoint.o(.text)
</UL>
<P><STRONG><a name="[1a8]"></a>USBH_EnumerateDevices</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r6
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_AddPortsStartPowerGoodTime
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r7
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[2d9]"></a>USBH_BD_GetUsbAddress</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubProcessPortResetSetAddress
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
</UL>

<P><STRONG><a name="[267]"></a>USBH_HC_ServicePorts</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_ServicePorts
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ServiceAllHubs
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_OnNotification
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetSetIdleServicePorts
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubStatusRequestCompletion
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubNotifyClearEndpointStallCompletion
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessHubNotification
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RestartEnumError
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitPortsCompletion
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EnumParentPortRestart
</UL>

<P><STRONG><a name="[22e]"></a>USBH_HCM_FreePool</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HccaRelease
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Alloc
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteDevice
</UL>

<P><STRONG><a name="[210]"></a>USBH_HCM_AllocPool</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AllocTransferMemory
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdAlloc
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_AllocPool
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_DummyEpAllocPool
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HccaAlloc
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Alloc
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AllocPool
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController
</UL>

<P><STRONG><a name="[205]"></a>USBH_HCM_GetItem</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_GetEp
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_InitAllocDummyIntEps
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HccaAlloc
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Get
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_GetEp
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetInitializedCopyTransferBuffer
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetCopyTransferBuffer
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetTransDesc
</UL>

<P><STRONG><a name="[2a5]"></a>USBH_HCM_PutItem</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InitEp
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_PutAllDummyEp
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_InitAllocDummyIntEps
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HccaRelease
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Put
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Get
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AbortEp
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_PutEp
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_InitEp
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_PutEp
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompletePendingUrbs
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_SubmitUrb
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompleteUrb
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_CompleteUrb
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AddUrb
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_CompletePendingUrbs
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_OnCompleteUrb
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteDoneTD
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobRemoveAllTDtoPool
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteAllPendingTD
</UL>

<P><STRONG><a name="[297]"></a>USBH_HCM_GetItemFromPhyAddr</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TRANSFER_ProcessDoneInterrupt
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetTdCount
</UL>

<P><STRONG><a name="[2d4]"></a>USBH_HCM_IsPhysAddrInPool</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TRANSFER_ProcessDoneInterrupt
</UL>

<P><STRONG><a name="[2d3]"></a>USBH_HCM_FillPhyMemory</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HccaAlloc
</UL>

<P><STRONG><a name="[2dc]"></a>USBH_HC_SetActivePortReset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_ServicePorts
</UL>

<P><STRONG><a name="[2d7]"></a>USBH_HC_ClrActivePortReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, USBH_HC.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
</UL>

<P><STRONG><a name="[298]"></a>USBH_BD_AddUsbEndpoint</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, USBH_Interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
</UL>

<P><STRONG><a name="[277]"></a>USBH_BD_CreateEndpoints</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, USBH_Interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewEndpoint
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetNextEndpointDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateInterfaces
</UL>

<P><STRONG><a name="[29b]"></a>USBH_RemoveUsbEndpoint</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, USBH_Interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
</UL>

<P><STRONG><a name="[29c]"></a>USBH_BD_RemoveEndpoints</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, USBH_Interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteEndpoint
</UL>

<P><STRONG><a name="[284]"></a>USBH_BD_GetPendingUrbCount</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, USBH_Interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetPendingUrbCount
</UL>

<P><STRONG><a name="[1b5]"></a>USBH_SubmitUrb</STRONG> (Thumb, 642 bytes, Stack size 0 bytes, USBH_Interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r3
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SubmitSetInterface
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SubmitClearFeatureEndpointStall
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DefaultEpSubmitUrb
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_EpSubmitUrb
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ServicePorts
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SetPortState
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetNextInterfaceDesc
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkParentAndChildDevicesAsRemoved
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_CancelIo
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SubmitOutBuffer
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SubmitInBuffer
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnIntInCompletion
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ResetEndpoint
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptorEx
</UL>

<P><STRONG><a name="[1d6]"></a>USBH_GetInterfaceInfo</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, USBH_Interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_GetInterfaceById
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetDeviceInfo
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetNumDevices
</UL>

<P><STRONG><a name="[1cd]"></a>USBH_OpenInterface</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, USBH_Interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_GetInterfaceById
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
</UL>

<P><STRONG><a name="[1c3]"></a>USBH_CloseInterface</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, USBH_Interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_Exit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckStateAndCloseInterface
</UL>

<P><STRONG><a name="[276]"></a>USBH_BD_NewUsbInterface</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, USBH_Interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_GetNextInterfaceId
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateInterfaces
</UL>

<P><STRONG><a name="[25b]"></a>USBH_BD_DeleteUsbInterface</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, USBH_Interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateInterfaces
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteInterfaces
</UL>

<P><STRONG><a name="[27c]"></a>USBH_BD_CompareUsbInterface</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, USBH_Interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessNotification
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_ProcessDeviceNotifications
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SearchUsbInterface
</UL>

<P><STRONG><a name="[2a1]"></a>USBH_BD_SearchUsbEndpointInInterface</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, USBH_Interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
</UL>

<P><STRONG><a name="[278]"></a>USBH_BD_AddUsbInterface</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, USBH_Interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateInterfaces
</UL>

<P><STRONG><a name="[25a]"></a>USBH_BD_RemoveUsbInterface</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, USBH_Interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteInterfaces
</UL>

<P><STRONG><a name="[2b7]"></a>USBH_OHCI_EpGlobInitED</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InitEp
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_BuildDummyEpTree
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_InitEp
</UL>

<P><STRONG><a name="[2a2]"></a>USBH_OHCI_EpGlobInsertTD</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetPrev
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InitEp
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_InitEp
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_SubmitUrb
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AddUrb
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_SubmitTransfer
</UL>

<P><STRONG><a name="[2a3]"></a>USBH_OHCI_EpGlobDeleteAllPendingTD</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_OnAbortUrbTimer
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_OnAbortUrbTimer
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckForCompletion
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckAndCancelAbortedUrbs
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckForCompletion
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckAndCancelAbortedUrbs
</UL>

<P><STRONG><a name="[2b9]"></a>USBH_OHCI_EpGlobLinkEds</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InsertEp
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_InsertEp
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_BuildDummyEpTree
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Insert
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_InsertEp
</UL>

<P><STRONG><a name="[2b4]"></a>USBH_OHCI_EpGlobUnlinkEd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_ReleaseEndpoint
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveAllUserEDFromPhysicalLink
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_ReleaseEp
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
</UL>

<P><STRONG><a name="[2a6]"></a>USBH_OHCI_EpGlobRemoveAllTDtoPool</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveTail
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InitEp
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Put
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_PutEp
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_InitEp
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_PutEp
</UL>

<P><STRONG><a name="[2c2]"></a>USBH_OHCI_EpGlobIsTDActive</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
</UL>

<P><STRONG><a name="[2a8]"></a>USBH_OHCI_EpGlobGetLastTDFromED</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetPrev
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_SubmitUrb
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AddUrb
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_SubmitTransfer
</UL>

<P><STRONG><a name="[2a9]"></a>USBH_OHCI_EpGlobGetFirstTDFromED</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_OnAbortUrbTimer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_OnAbortUrbTimer
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckAndCancelAbortedUrbs
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckAndCancelAbortedUrbs
</UL>

<P><STRONG><a name="[2aa]"></a>USBH_OHCI_EpGlobDeleteDoneTD</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckForCompletion
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckForCompletion
</UL>

<P><STRONG><a name="[2b2]"></a>USBH_OHCI_EpGlobClearSkip</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_OnAbortUrbTimer
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_OnAbortUrbTimer
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckAndCancelAbortedUrbs
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckAndCancelAbortedUrbs
</UL>

<P><STRONG><a name="[2b6]"></a>USBH_OHCI_EpGlobSetSkip</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_ReleaseEndpoint
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_AbortEp
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveAllUserEDFromPhysicalLink
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_ReleaseEp
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_ReleaseEp
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AbortEp
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_ReleaseEp
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AbortEp
</UL>

<P><STRONG><a name="[202]"></a>USBH_OHCI_EpGlobClearHalt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ResetEndpoint
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckForCompletion
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckForCompletion
</UL>

<P><STRONG><a name="[2ac]"></a>USBH_OHCI_EpGlobIsHalt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckForCompletion
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckForCompletion
</UL>

<P><STRONG><a name="[201]"></a>USBH_OHCI_EpClearToggle</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ResetEndpoint
</UL>

<P><STRONG><a name="[2ab]"></a>USBH_OHCI_EpGlobGetTdCount</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, USBH_OHC_EP.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_GetItemFromPhyAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_OnAbortUrbTimer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_OnAbortUrbTimer
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckAndCancelAbortedUrbs
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckAndCancelAbortedUrbs
</UL>

<P><STRONG><a name="[203]"></a>USBH_OHCI_BULK_INT_SubmitUrbsFromList</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_FillCopyTransferBuffer
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetBufferLengthFromCopyTransferBuffer
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetInitializedCopyTransferBuffer
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_SubmitTransfer
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_OnCompleteUrb
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobIsHalt
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_OnAbortUrbTimer
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ResetEndpoint
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AddUrb
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckAndCancelAbortedUrbs
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_OnCompleteUrb
</UL>

<P><STRONG><a name="[2b0]"></a>USBH_OHCI_BULK_INT_CheckAndCancelAbortedUrbs</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdGetStatusAndLength
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_CompletePendingUrbs
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_OnCompleteUrb
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetTdCount
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobClearSkip
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetFirstTDFromED
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteAllPendingTD
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_OnAbortUrbTimer
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckForCompletion
</UL>

<P><STRONG><a name="[21e]"></a>USBH_OHCI_BULK_INT_PutEp</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobRemoveAllTDtoPool
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveEDFromLogicalListAndFree
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_AddEndpoint
</UL>

<P><STRONG><a name="[1fa]"></a>USBH_OHCI_BULK_RemoveEps</STRONG> (Thumb, 346 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertHead
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetPrev
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r5
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobRemoveAllTDtoPool
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobUnlinkEd
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_OnRemoveEpTimer
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
</UL>

<P><STRONG><a name="[46]"></a>USBH_OHCI_BULK_INT_OnRemoveEpTimer</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.text)
</UL>
<P><STRONG><a name="[47]"></a>USBH_OHCI_BULK_OnAbortUrbTimer</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdGetStatusAndLength
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_CompletePendingUrbs
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_OnCompleteUrb
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetTdCount
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobClearSkip
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetFirstTDFromED
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteAllPendingTD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.text)
</UL>
<P><STRONG><a name="[1fe]"></a>USBH_OHCI_BULK_INT_AbortEp</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_CompletePendingUrbs
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobSetSkip
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AbortEndpoint
</UL>

<P><STRONG><a name="[20c]"></a>USBH_OHCI_BULK_INT_AllocPool</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_AllocPool
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController
</UL>

<P><STRONG><a name="[21b]"></a>USBH_OHCI_BULK_INT_GetEp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_GetItem
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_AddEndpoint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddControlBulkDummyEndpoint
</UL>

<P><STRONG><a name="[21c]"></a>USBH_OHCI_BULK_INT_InitEp</STRONG> (Thumb, 236 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetTransDesc
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobRemoveAllTDtoPool
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInsertTD
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInitED
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_AddEndpoint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddControlBulkDummyEndpoint
</UL>

<P><STRONG><a name="[223]"></a>USBH_OHCI_BULK_InsertEp</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetPrev
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobLinkEds
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_AddEndpoint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddControlBulkDummyEndpoint
</UL>

<P><STRONG><a name="[229]"></a>USBH_OHCI_BULK_ReleaseEp</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobSetSkip
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ReleaseEndpoint
</UL>

<P><STRONG><a name="[2ba]"></a>USBH_OHCI_BULK_INT_AddUrb</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_FillCopyTransferBuffer
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetBufferLengthFromCopyTransferBuffer
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetInitializedCopyTransferBuffer
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_SubmitTransfer
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TRANSFER_SubmitRequest
</UL>

<P><STRONG><a name="[2bb]"></a>USBH_OHCI_BULK_INT_UpdateTDLengthStatus</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CopyToUrbBufferUpdateTransferBuffer
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_UpdateCopyTransferBuffer
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdGetStatusAndLength
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TRANSFER_ProcessDoneInterrupt
</UL>

<P><STRONG><a name="[2bd]"></a>USBH_OHCI_BULK_INT_CheckForCompletion</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobClearHalt
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_FillCopyTransferBuffer
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetBufferLengthFromCopyTransferBuffer
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckAndCancelAbortedUrbs
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_SubmitTransfer
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_OnCompleteUrb
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobIsHalt
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteDoneTD
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteAllPendingTD
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TRANSFER_ProcessDoneInterrupt
</UL>

<P><STRONG><a name="[221]"></a>USBH_OHCI_EP0_Put</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobRemoveAllTDtoPool
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_AddEndpoint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddControlBulkDummyEndpoint
</UL>

<P><STRONG><a name="[1f9]"></a>USBH_OHCI_Ep0RemoveEndpoints</STRONG> (Thumb, 340 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertHead
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetPrev
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r5
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobRemoveAllTDtoPool
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobUnlinkEd
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnReleaseEpTimer
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
</UL>

<P><STRONG><a name="[44]"></a>USBH_OHCI_EP0_OnReleaseEpTimer</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.text)
</UL>
<P><STRONG><a name="[20b]"></a>USBH_OHCI_EP0_Alloc</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_FreePool
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_AllocPool
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController
</UL>

<P><STRONG><a name="[21f]"></a>USBH_OHCI_EP0_Get</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_GetItem
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_AddEndpoint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddControlBulkDummyEndpoint
</UL>

<P><STRONG><a name="[220]"></a>USBH_OHCI_EP0_Init</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetTransDesc
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInsertTD
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInitED
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_AddEndpoint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddControlBulkDummyEndpoint
</UL>

<P><STRONG><a name="[2c1]"></a>USBH_OHCI_EP0_AddUrb</STRONG> (Thumb, 222 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH__ConvSetupPacketToBuffer
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdInit
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetTransDesc
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetLastTDFromED
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInsertTD
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TRANSFER_SubmitRequest
</UL>

<P><STRONG><a name="[222]"></a>USBH_OHCI_EP0_Insert</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetPrev
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobLinkEds
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_AddEndpoint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddControlBulkDummyEndpoint
</UL>

<P><STRONG><a name="[228]"></a>USBH_OHCI_EP0_ReleaseEp</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobSetSkip
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ReleaseEndpoint
</UL>

<P><STRONG><a name="[45]"></a>USBH_OHCI_EP0_OnAbortUrbTimer</STRONG> (Thumb, 392 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertHead
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveTail
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_CompleteUrb
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobClearSkip
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobIsTDActive
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteAllPendingTD
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.text)
</UL>
<P><STRONG><a name="[1ff]"></a>USBH_OHCI_EP0_AbortEp</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertHead
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveTail
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobSetSkip
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AbortEndpoint
</UL>

<P><STRONG><a name="[2c4]"></a>USBH_OHCI_EP0_DoneCheckForCompletion</STRONG> (Thumb, 554 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobClearHalt
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CopyToUrbBufferUpdateTransferBuffer
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_FillCopyTransferBuffer
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_UpdateCopyTransferBuffer
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetBufferLengthFromCopyTransferBuffer
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetInitializedCopyTransferBuffer
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_CompleteUrb
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdInit
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdGetStatusAndLength
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetTransDesc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobIsHalt
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteDoneTD
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetLastTDFromED
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInsertTD
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TRANSFER_ProcessDoneInterrupt
</UL>

<P><STRONG><a name="[1fc]"></a>USBH_OHCI_INT_PutAllDummyEp</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, USBH_OHC_EP_Int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
</UL>

<P><STRONG><a name="[1fb]"></a>USBH_OHCI_INT_RemoveEDFromLogicalListAndFree</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, USBH_OHC_EP_Int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_PutEp
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertHead
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r4
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_OnReleaseEpTimer
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
</UL>

<P><STRONG><a name="[48]"></a>USBH_OHCI_INT_OnReleaseEpTimer</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, USBH_OHC_EP_Int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveEDFromLogicalListAndFree
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>USBH_OHCI_INT_OnAbortUrbTimer</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, USBH_OHC_EP_Int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckAndCancelAbortedUrbs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.text)
</UL>
<P><STRONG><a name="[217]"></a>USBH_OHCI_INT_InitAllocDummyIntEps</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, USBH_OHC_EP_Int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_GetItem
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostInit
</UL>

<P><STRONG><a name="[20d]"></a>USBH_OHCI_INT_DummyEpAllocPool</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, USBH_OHC_EP_Int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_AllocPool
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController
</UL>

<P><STRONG><a name="[218]"></a>USBH_OHCI_INT_BuildDummyEpTree</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, USBH_OHC_EP_Int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobLinkEds
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInitED
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostInit
</UL>

<P><STRONG><a name="[2cd]"></a>USBH_OHCI_INT_GetBandwidth</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, USBH_OHC_EP_Int.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InsertEp
</UL>

<P><STRONG><a name="[21d]"></a>USBH_OHCI_INT_InsertEp</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, USBH_OHC_EP_Int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertHead
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobLinkEds
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_AddEndpoint
</UL>

<P><STRONG><a name="[1f8]"></a>USBH_OHCI_INT_RemoveAllUserEDFromPhysicalLink</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, USBH_OHC_EP_Int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetPrev
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobSetSkip
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobUnlinkEd
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
</UL>

<P><STRONG><a name="[227]"></a>USBH_OHCI_INT_ReleaseEp</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, USBH_OHC_EP_Int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetPrev
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobSetSkip
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobUnlinkEd
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ReleaseEndpoint
</UL>

<P><STRONG><a name="[2c7]"></a>USBH_OHCI_ISO_SubmitUrbsFromList</STRONG> (Thumb, 412 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_IsoTdInit
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompleteUrb
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetTransDesc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobIsHalt
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetLastTDFromED
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInsertTD
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_OnAbortUrbTimer
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_AddUrb
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckAndCancelAbortedUrbs
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompleteUrb
</UL>

<P><STRONG><a name="[2ca]"></a>USBH_OHCI_ISO_CheckAndCancelAbortedUrbs</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompletePendingUrbs
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompleteUrb
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdGetStatusAndLength
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetTdCount
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobClearSkip
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetFirstTDFromED
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteAllPendingTD
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckForCompletion
</UL>

<P><STRONG><a name="[2cc]"></a>USBH_OHCI_ISO_PutEp</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobRemoveAllTDtoPool
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>

<P><STRONG><a name="[1fd]"></a>USBH_OHCI_ISO_RemoveEps</STRONG> (Thumb, 334 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertHead
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetPrev
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r5
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobRemoveAllTDtoPool
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobUnlinkEd
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_OnRemoveEpTimer
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkHostResources
</UL>

<P><STRONG><a name="[4a]"></a>USBH_OHCI_ISO_OnRemoveEpTimer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>USBH_OHCI_ISO_OnAbortUrbTimer</STRONG> (Thumb, 326 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompletePendingUrbs
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompleteUrb
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdGetStatusAndLength
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetTdCount
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobClearSkip
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetFirstTDFromED
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteAllPendingTD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.text)
</UL>
<P><STRONG><a name="[200]"></a>USBH_OHCI_ISO_AbortEp</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompletePendingUrbs
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobSetSkip
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AbortEndpoint
</UL>

<P><STRONG><a name="[20f]"></a>USBH_OHCI_ISO_AllocPool</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_AllocPool
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController
</UL>

<P><STRONG><a name="[224]"></a>USBH_OHCI_ISO_GetEp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_GetItem
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_AddEndpoint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddControlBulkDummyEndpoint
</UL>

<P><STRONG><a name="[225]"></a>USBH_OHCI_ISO_InitEp</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetTransDesc
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobRemoveAllTDtoPool
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInsertTD
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInitED
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_AddEndpoint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddControlBulkDummyEndpoint
</UL>

<P><STRONG><a name="[226]"></a>USBH_OHCI_ISO_InsertEp</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertHead
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_GetBandwidth
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobLinkEds
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_AddEndpoint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddControlBulkDummyEndpoint
</UL>

<P><STRONG><a name="[22a]"></a>USBH_OHCI_ISO_ReleaseEndpoint</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetPrev
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobSetSkip
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobUnlinkEd
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ReleaseEndpoint
</UL>

<P><STRONG><a name="[2ce]"></a>USBH_OHCI_ISO_AddUrb</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_SubmitUrb
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TRANSFER_SubmitRequest
</UL>

<P><STRONG><a name="[2d0]"></a>USBH_OHCI_ISO_UpdateTDLengthStatus</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CopyToUrbBufferUpdateTransferBuffer
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_UpdateCopyTransferBuffer
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_TdGetStatusAndLength
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TRANSFER_ProcessDoneInterrupt
</UL>

<P><STRONG><a name="[2d2]"></a>USBH_OHCI_ISO_CheckForCompletion</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobClearHalt
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckAndCancelAbortedUrbs
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompleteUrb
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobIsHalt
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteDoneTD
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteAllPendingTD
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TRANSFER_ProcessDoneInterrupt
</UL>

<P><STRONG><a name="[20a]"></a>USBH_OHCI_HccaAlloc</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, USBH_OHC_HCCA.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_GetItem
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_AllocPool
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_FillPhyMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController
</UL>

<P><STRONG><a name="[22f]"></a>USBH_OHCI_HccaRelease</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, USBH_OHC_HCCA.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_FreePool
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteDevice
</UL>

<P><STRONG><a name="[219]"></a>USBH_OHCI_HccaSetInterruptTable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, USBH_OHC_HCCA.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostInit
</UL>

<P><STRONG><a name="[215]"></a>USBH_OHCI_ROOTHUB_Init</STRONG> (Thumb, 374 bytes, Stack size 0 bytes, USBH_OHC_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MallocZeroed
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ReadReg32
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostInit
</UL>

<P><STRONG><a name="[22c]"></a>USBH_OHCI_ROOTHUB_ProcessInterrupt</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, USBH_OHC_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ReadReg32
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ProcessInterrupt
</UL>

<P><STRONG><a name="[10]"></a>USBH_OHCI_ROOTHUB_GetPortCount</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, USBH_OHC_RootHub.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>USBH_OHCI_ROOTHUB_GetPowerGoodTime</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, USBH_OHC_RootHub.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>USBH_OHCI_ROOTHUB_GetHubStatus</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, USBH_OHC_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ReadReg32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>USBH_OHCI_ROOTHUB_ClearHubStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, USBH_OHC_RootHub.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>USBH_OHCI_ROOTHUB_GetPortStatus</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, USBH_OHC_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ReadReg32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>USBH_OHCI_ROOTHUB_ClearPortStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, USBH_OHC_RootHub.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>USBH_OHCI_ROOTHUB_SetPortPower</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, USBH_OHC_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>USBH_OHCI_ROOTHUB_ResetPort</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, USBH_OHC_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ReadReg32
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>USBH_OHCI_ROOTHUB_DisablePort</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, USBH_OHC_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>USBH_OHCI_ROOTHUB_SetPortSuspend</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, USBH_OHC_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ReadReg32
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[20e]"></a>USBH_OHCI_TdAlloc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, USBH_OHC_td.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_AllocPool
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController
</UL>

<P><STRONG><a name="[2b8]"></a>USBH_OHCI_GetTransDesc</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, USBH_OHC_td.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_GetItem
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InitEp
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_InitEp
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_SubmitUrb
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AddUrb
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_SubmitTransfer
</UL>

<P><STRONG><a name="[2be]"></a>USBH_OHCI_TdInit</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, USBH_OHC_td.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AddUrb
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_SubmitTransfer
</UL>

<P><STRONG><a name="[2c8]"></a>USBH_OHCI_IsoTdInit</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, USBH_OHC_td.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_SubmitUrb
</UL>

<P><STRONG><a name="[2d5]"></a>USBH_OHCI_TdGetNextTd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, USBH_OHC_td.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TRANSFER_ProcessDoneInterrupt
</UL>

<P><STRONG><a name="[2b1]"></a>USBH_OHCI_TdGetStatusAndLength</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, USBH_OHC_td.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_OnAbortUrbTimer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_OnAbortUrbTimer
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckAndCancelAbortedUrbs
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_UpdateTDLengthStatus
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckAndCancelAbortedUrbs
</UL>

<P><STRONG><a name="[2d1]"></a>USBH_OHCI_ISO_TdGetStatusAndLength</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, USBH_OHC_td.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_UpdateTDLengthStatus
</UL>

<P><STRONG><a name="[f]"></a>USBH_OHCI_TRANSFER_SubmitRequest</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, USBH_OHC_Transfer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_AddUrb
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AddUrb
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AddUrb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[22b]"></a>USBH_OHCI_TRANSFER_ProcessDoneInterrupt</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, USBH_OHC_Transfer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdGetNextTd
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckForCompletion
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_UpdateTDLengthStatus
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckForCompletion
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_UpdateTDLengthStatus
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_IsPhysAddrInPool
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_GetItemFromPhyAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ProcessInterrupt
</UL>

<P><STRONG><a name="[292]"></a>USBH_ROOTHUB_Init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, USBH_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateInit
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateHostController
</UL>

<P><STRONG><a name="[28e]"></a>USBH_ROOTHUB_Release</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, USBH_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteHubPort
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateExit
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AddHostController
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DefaultReleaseEpCompletion
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteHostController
</UL>

<P><STRONG><a name="[2db]"></a>USBH_ROOTHUB_GetPortByNumber</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, USBH_RootHub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
</UL>

<P><STRONG><a name="[4c]"></a>USBH_ROOTHUB_OnNotification</STRONG> (Thumb, 496 bytes, Stack size 0 bytes, USBH_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r3
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ServicePorts
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SetPortState
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkParentAndChildDevicesAsRemoved
</UL>
<BR>[Address Reference Count : 2]<UL><LI> USBH_OHC_Device.o(.text)
<LI> USBH_Driver.o(.text)
</UL>
<P><STRONG><a name="[295]"></a>USBH_ROOTHUB_ServicePorts</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, USBH_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationRootPortReset
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_SetActivePortReset
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SetPortState
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ServicePorts
</UL>

<P><STRONG><a name="[294]"></a>USBH_ROOTHUB_AddPortsStartPowerGoodTime</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, USBH_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r3
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateWait
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewHubPort
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EnumerateDevices
</UL>

<P><STRONG><a name="[2df]"></a>LCD_SetLUTEx</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, GUICC_0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
</UL>

<P><STRONG><a name="[2e0]"></a>LCD_SetLUT</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, GUICC_0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
</UL>

<P><STRONG><a name="[2e1]"></a>GUI_USAGE_Select</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUIDEV_Usage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[2e2]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, GUIDEV_Usage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[239]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, GUIDEV_Usage.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r7
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[4d]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 704 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r7
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[24d]"></a>GUI_DispString</STRONG> (Thumb, 254 bytes, Stack size 0 bytes, GUI_DispString.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2ee]"></a>GUI_GotoY</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_Goto.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[2ef]"></a>GUI_GotoX</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_Goto.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[242]"></a>GUI_GotoXY</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, GUI_Goto.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>

<P><STRONG><a name="[37f]"></a>GUI_PID_GetState</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, GUI_PID.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[369]"></a>GUI_PID_StoreState</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, GUI_PID.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[256]"></a>GUI_SelectLayer</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>

<P><STRONG><a name="[2f1]"></a>GUI_AssignCursorLayer</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[388]"></a>GUI_GetCursorLayer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[2f2]"></a>GUI_SetLayerPosEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[2f3]"></a>GUI_SetLayerSizeEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[2f4]"></a>GUI_SetLayerVisEx</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[2f5]"></a>GUI_SetLayerAlphaEx</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaEx
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[2f6]"></a>GUI_GetLayerPosEx</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[24a]"></a>GUI_SetOrg</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, GUI_SetOrg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[250]"></a>GUI_TOUCH_StoreState</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUI_TOUCH_StoreState.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreUnstable
</UL>

<P><STRONG><a name="[2f8]"></a>GUI_UC_SetEncodeNone</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[23b]"></a>GUI__memset16</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, GUI__memset16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[252]"></a>LCD_Color2Index</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, LCD.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[3a6]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, LCD.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[3a5]"></a>LCD_SetColorIndex</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, LCD.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[23d]"></a>LCD_SetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[88]"></a>LCD_DrawPixel</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, LCD.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>LCD_DrawHLine</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, LCD.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.constdata)
</UL>
<P><STRONG><a name="[23f]"></a>LCD_FillRect</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r4
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[2e4]"></a>LCD_DrawBitmap</STRONG> (Thumb, 670 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r6
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r5
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[30d]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[249]"></a>LCD_Init</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, LCD.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r6
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[257]"></a>LCD_Index2Color</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, LCD.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[246]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
</UL>

<P><STRONG><a name="[247]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
</UL>

<P><STRONG><a name="[255]"></a>LCD_GetNumLayers</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, LCD_GetNumDisplays.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[2fb]"></a>WM__Client2Screen</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>

<P><STRONG><a name="[2fd]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[2ff]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[301]"></a>WM__ActivateClipRect</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[303]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[304]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[305]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[308]"></a>WM__InvalidateRect</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>

<P><STRONG><a name="[5c]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[309]"></a>WM__DetachWindow</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>

<P><STRONG><a name="[30a]"></a>WM__GetTopLevelLayer</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[30b]"></a>WM__SelectTopLevelLayer</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
</UL>

<P><STRONG><a name="[30c]"></a>WM_SelectWindow</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[30e]"></a>WM__RemoveFromLinList</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[30f]"></a>WM__SendMsgNoData</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>

<P><STRONG><a name="[310]"></a>WM__IsWindow</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>

<P><STRONG><a name="[311]"></a>WM_DeleteWindow</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>

<P><STRONG><a name="[315]"></a>WM_SendMessage</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
</UL>

<P><STRONG><a name="[316]"></a>WM_InvalidateRect</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[317]"></a>WM_InvalidateWindow</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[318]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 446 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindow
</UL>

<P><STRONG><a name="[31b]"></a>WM_CreateWindow</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[240]"></a>WM__GetNextIVR</STRONG> (Thumb, 610 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[23e]"></a>WM__InitIVRSearch</STRONG> (Thumb, 246 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[320]"></a>WM_SetDefault</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[323]"></a>WM__Paint</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__SuppressMixing
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[326]"></a>WM__DeleteSecure</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[327]"></a>WM_Exec1</STRONG> (Thumb, 368 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__SuppressMixing
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[32c]"></a>WM_Exec</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[32d]"></a>WM_DefaultProc</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>

<P><STRONG><a name="[354]"></a>WM_Activate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[330]"></a>WM_Deactivate</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[24b]"></a>WM_Init</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[245]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WM_GetDesktopWindow.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[258]"></a>WM__SendMessage</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, WM__SendMessage.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>

<P><STRONG><a name="[53]"></a>USBH_BD_EpUrbCompletion</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, USBH_EndPoint.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Interface.o(.text)
</UL>
<P><STRONG><a name="[29e]"></a>USBH_BD_EpSubmitUrb</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, USBH_EndPoint.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessHubNotification
</UL>

<P><STRONG><a name="[29a]"></a>USBH_BD_NewEndpoint</STRONG> (Thumb, 220 bytes, Stack size 0 bytes, USBH_EndPoint.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r7
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetUshortFromDesc
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetUcharFromDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetInterfaceCompletion
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_CreateEndpoints
</UL>

<P><STRONG><a name="[29d]"></a>USBH_BD_DeleteEndpoint</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, USBH_EndPoint.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r3
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_RemoveEndpoints
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetInterfaceCompletion
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteUsbInterface
</UL>

<P><STRONG><a name="[336]"></a>_CreateEnumErrorNotification</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, USBH_Enum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MallocZeroed
</UL>

<P><STRONG><a name="[337]"></a>USBH_RegisterEnumErrorNotification</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, USBH_Enum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MallocZeroed
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
</UL>

<P><STRONG><a name="[338]"></a>USBH_UnregisterEnumErrorNotification</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, USBH_Enum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
</UL>

<P><STRONG><a name="[339]"></a>UbdFireEnumErrorNotification</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, USBH_Enum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
</UL>

<P><STRONG><a name="[2d6]"></a>UbdSetEnumErrorNotificationRootPortReset</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, USBH_Enum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_ServicePorts
</UL>

<P><STRONG><a name="[265]"></a>UbdSetEnumErrorNotificationProcessDeviceEnum</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, USBH_Enum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EnumParentPortRestart
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ProcessEnumPortError
</UL>

<P><STRONG><a name="[33a]"></a>UbdSetEnumErrorNotificationHubPortReset</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, USBH_Enum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetError
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubProcessPortResetSetAddress
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ServiceAllHubs
</UL>

<P><STRONG><a name="[33b]"></a>USBH_RestartEnumError</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, USBH_Enum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ServicePorts
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SetPortState
</UL>

<P><STRONG><a name="[262]"></a>USBH_BD_HubPrepareClrFeatureReq</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ProcessEnumPortError
</UL>

<P><STRONG><a name="[261]"></a>USBH_BD_SetPortState</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_OnNotification
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RestartEnumError
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitPortsCompletion
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_ServicePorts
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EnumParentPortRestart
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ProcessEnumPortError
</UL>

<P><STRONG><a name="[33c]"></a>USBH_BD_HubGetPortByNumber</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, USBH_Hub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
</UL>

<P><STRONG><a name="[2dd]"></a>USBH_BD_NewHubPort</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_AddPortsStartPowerGoodTime
</UL>

<P><STRONG><a name="[26a]"></a>USBH_BD_AllocInitUsbHub</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateInit
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
</UL>

<P><STRONG><a name="[2da]"></a>USBH_BD_DeleteHubPort</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_Release
</UL>

<P><STRONG><a name="[25d]"></a>USBH_BD_DeleteHub</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateExit
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_BufferFreeTransferBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
</UL>

<P><STRONG><a name="[340]"></a>_HubPrepareClearFeatureEndpointStall</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, USBH_Hub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>

<P><STRONG><a name="[26b]"></a>USBH_BD_StartHub</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
</UL>

<P><STRONG><a name="[272]"></a>USBH_BD_HubBuildChildDeviceList</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkParentAndChildDevicesAsRemoved
</UL>

<P><STRONG><a name="[296]"></a>USBH_BD_ServiceAllHubs</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubProcessPortResetSetAddress
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationHubPortReset
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ServicePorts
</UL>

<P><STRONG><a name="[28f]"></a>USBH_PNP_NewNotification</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, USBH_PnPNotification.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RegisterPnPNotification
</UL>

<P><STRONG><a name="[291]"></a>USBH_PNP_ReleaseNotification</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, USBH_PnPNotification.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UnregisterPnPNotification
</UL>

<P><STRONG><a name="[51]"></a>USBH_PNP_NotifyWrapperCallbackRoutine</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, USBH_PnPNotification.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r3
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Driver.o(.text)
</UL>
<P><STRONG><a name="[285]"></a>USBH_PNP_ProcessDeviceNotifications</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, USBH_PnPNotification.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_CompareUsbInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_RemoveNotification
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_AddNotification
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessDevicePnpNotifications
</UL>

<P><STRONG><a name="[290]"></a>USBH_PNP_ProcessNotification</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, USBH_PnPNotification.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_CompareUsbInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RegisterPnPNotification
</UL>

<P><STRONG><a name="[269]"></a>USBH_URB_BufferAllocateTransferBuffer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, USBH_URB.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_TryMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CheckCtrlTransferBuffer
</UL>

<P><STRONG><a name="[25e]"></a>USBH_URB_BufferFreeTransferBuffer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, USBH_URB.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteHub
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CheckCtrlTransferBuffer
</UL>

<P><STRONG><a name="[341]"></a>USBH_URB_DeleteTransferBufferPool</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, USBH_URB.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
</UL>

<P><STRONG><a name="[342]"></a>USBH_URB_CreateTransferBufferPool</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, USBH_URB.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_TryMalloc
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AllocTransferMemory
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
</UL>

<P><STRONG><a name="[343]"></a>USBH_URB_GetFromTransferBufferPool</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, USBH_URB.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
</UL>

<P><STRONG><a name="[344]"></a>USBH_URB_PutToTransferBufferPool</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, USBH_URB.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
</UL>

<P><STRONG><a name="[263]"></a>USBH_URB_SubStateInit</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, USBH_URB.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AllocTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_AllocInitUsbHub
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateNewUsbDevice
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ProcessEnumPortError
</UL>

<P><STRONG><a name="[345]"></a>USBH_URB_SubStateAllocInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, USBH_URB.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AllocTimer
</UL>

<P><STRONG><a name="[25c]"></a>USBH_URB_SubStateExit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, USBH_URB.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_FreeTimer
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CancelTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_Release
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteHub
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ProcessEnumPortError
</UL>

<P><STRONG><a name="[346]"></a>USBH_URB_SubStateFree</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, USBH_URB.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
</UL>

<P><STRONG><a name="[264]"></a>USBH_URB_SubStateSubmitRequest</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, USBH_URB.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CancelTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubProcessPortResetSetAddress
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetDisablePort
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessHubNotification
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ProcessEnumPortError
</UL>

<P><STRONG><a name="[2d8]"></a>USBH_URB_SubStateWait</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, USBH_URB.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubProcessPortResetSetAddress
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_AddPortsStartPowerGoodTime
</UL>

<P><STRONG><a name="[324]"></a>GUI_MEMDEV__SuppressMixing</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[347]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[348]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>

<P><STRONG><a name="[34b]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>

<P><STRONG><a name="[34c]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[34d]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[34e]"></a>GUI_MEMDEV_Create</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[34f]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[352]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[355]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[325]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, GUIDEV_Banding.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[319]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, GUI_ALLOC_AllocZero.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[2de]"></a>GUI_CalcColorDist</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, GUI_CalcColorDist.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[2e8]"></a>GUI_GetFontDistY</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI_Char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[35c]"></a>GUI_DispNextLine</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, GUI_Char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[35d]"></a>GL_DispChar</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, GUI_Char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>

<P><STRONG><a name="[2e9]"></a>GUI_GetYAdjust</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, GUI_Char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[35e]"></a>GUI_GetCharDistX</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, GUI_Char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>

<P><STRONG><a name="[2ea]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, GUI_CharLine.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[360]"></a>GUI__GetOverlap</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, GUI_CharLine.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[2eb]"></a>GUI__GetLineDistX</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, GUI_CharLine.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[2ec]"></a>GUI__DispLine</STRONG> (Thumb, 298 bytes, Stack size 0 bytes, GUI_CharLine.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[89]"></a>GUIMONO_DispChar</STRONG> (Thumb, 310 bytes, Stack size 0 bytes, GUI_CharM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_CharM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_CharM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, GUI_CharM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.constdata)
</UL>
<P><STRONG><a name="[332]"></a>GUI_MergeRect</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, GUI_MergeRect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[2fc]"></a>GUI_MoveRect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, GUI_MoveRect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>

<P><STRONG><a name="[31d]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, GUI_RectsIntersect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[328]"></a>GUI_SaveContext_W</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_SaveContext.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[32b]"></a>GUI_RestoreContext</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI_SaveContext.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[2f0]"></a>GUI_SelectLCD</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI_SelectLCD.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[32a]"></a>GUI_SetBkColor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI_SetColor.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[329]"></a>GUI_SetColor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI_SetColor.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[321]"></a>GL_SetDefault</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, GUI_SetDefault.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>

<P><STRONG><a name="[367]"></a>GUI_SetDefault</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, GUI_SetDefault.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
</UL>

<P><STRONG><a name="[2f7]"></a>GUI_TOUCH_StoreStateEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUI_TOUCH.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreState
</UL>

<P><STRONG><a name="[36a]"></a>GUI_UC_GetCharSize</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, GUI_UC.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>

<P><STRONG><a name="[36b]"></a>GUI_UC_GetCharCode</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, GUI_UC.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>

<P><STRONG><a name="[36c]"></a>GUI_UC_Encode</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, GUI_UC.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[35f]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, GUI_UC.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[2ed]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, GUI_UC.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[36d]"></a>GUI_UC__NumBytes2NumChars</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, GUI_UC.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>

<P><STRONG><a name="[300]"></a>GUI__IntersectRect</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, GUI__IntersectRect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
</UL>

<P><STRONG><a name="[306]"></a>GUI__IntersectRects</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, GUI__IntersectRects.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[302]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, LCD_SetClipRectEx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[31a]"></a>WM_BringToBottom</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, WM_BringToBottom.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[331]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, WM_CriticalHandle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[385]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, WM_CriticalHandle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[307]"></a>WM_GetFirstChild</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, WM_GetFirstChild.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[313]"></a>WM_NotifyParent</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, WM_NotifyParent.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[32e]"></a>WM_SendToParent</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, WM_SendToParent.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[370]"></a>WM_DeleteTimer</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, WM_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[312]"></a>WM__DeleteAssocTimer</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, WM_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[373]"></a>WM_CreateTimer</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, WM_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>

<P><STRONG><a name="[377]"></a>WM_RestartTimer</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, WM_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>

<P><STRONG><a name="[379]"></a>WM__IsInModalArea</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, WM_Touch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>

<P><STRONG><a name="[37b]"></a>WM__SendPIDMessage</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, WM_Touch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>

<P><STRONG><a name="[37e]"></a>WM__SendTouchMessage</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, WM_Touch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[59]"></a>WM_HandlePID</STRONG> (Thumb, 874 bytes, Stack size 0 bytes, WM_Touch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_PID__SetPrevState
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveCriticalHandle
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_PID.o(.text)
</UL>
<P><STRONG><a name="[35a]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, GUIDEV_Clear.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[357]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, GUIDEV_GetYSize.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[358]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, GUIDEV_ReduceYSize.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[359]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, GUIDEV_SetOrg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[34a]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, GUIDEV_UsageBM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[387]"></a>GUI_CURSOR_SelectEx</STRONG> (Thumb, 220 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
</UL>

<P><STRONG><a name="[38d]"></a>GUI_CURSOR_HideEx</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
</UL>

<P><STRONG><a name="[390]"></a>GUI_CURSOR_ShowEx</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>

<P><STRONG><a name="[391]"></a>GUI_CURSOR_GetStateEx</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[380]"></a>GUI_CURSOR_SetPositionEx</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, GUI_Curs1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPosition
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[392]"></a>GUI_CURSOR_Select</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[393]"></a>GUI_CURSOR_Hide</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>

<P><STRONG><a name="[394]"></a>GUI_CURSOR_Show</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>

<P><STRONG><a name="[395]"></a>GUI_CURSOR_GetState</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[396]"></a>GUI_CURSOR_SetPosition</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[356]"></a>GUI_GetOrg</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUI_GetOrg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[397]"></a>GUI_GetPenSize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUI_Pen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[398]"></a>GUI_GetPenShape</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUI_Pen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[362]"></a>GUI_SetPenSize</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_Pen.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[399]"></a>GUI_SetPenShape</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_Pen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[353]"></a>GUI_SetDrawMode</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI_SetDrawMode.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[365]"></a>GUI_SetFont</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, GUI_SetFont.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[366]"></a>GUI_SetLineStyle</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_SetLineStyle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[363]"></a>GUI_SetTextAlign</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI_SetTextAlign.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[364]"></a>GUI_SetTextMode</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI_SetTextMode.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[374]"></a>GUI_GetTime</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Time.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[39b]"></a>GUI_Delay</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, GUI_Time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[39f]"></a>GUI_TIMER__IsActive</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[3a0]"></a>GUI_TIMER__GetPeriod</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>

<P><STRONG><a name="[372]"></a>GUI_TIMER__GetNextTimer</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[66]"></a>GUI_TIMER_Exec</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, GUI_Timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Timer.o(.text)
</UL>
<P><STRONG><a name="[375]"></a>GUI_TIMER_Create</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[371]"></a>GUI_TIMER_Delete</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[376]"></a>GUI_TIMER_SetPeriod</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[3a2]"></a>GUI_TIMER_SetTime</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[3a3]"></a>GUI_TIMER_SetDelay</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>

<P><STRONG><a name="[378]"></a>GUI_TIMER_Restart</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
</UL>

<P><STRONG><a name="[35b]"></a>GUI__memset</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, GUI__memset.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>

<P><STRONG><a name="[361]"></a>LCD_SelectLCD</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, LCD_SelectLCD.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[351]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, LCD_UpdateColorIndices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[36f]"></a>WM_GetParent</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, WM_GetParent.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[37c]"></a>WM_IsWindow</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, WM_IsWindow.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[384]"></a>WM_PID__SetPrevState</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, WM_PID__GetPrevState.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[381]"></a>WM_Screen2hWin</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, WM_Screen2Win.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindowEx
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3a9]"></a>WM_Screen2hWinEx</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, WM_Screen2Win.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindowEx
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[3aa]"></a>WM_SetCapture</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, WM_SetCapture.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>

<P><STRONG><a name="[383]"></a>WM_ReleaseCapture</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, WM_SetCapture.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[36e]"></a>WM__GetPrevSibling</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, WM__GetPrevSibling.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[37a]"></a>WM__IsAncestor</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, WM__IsAncestor.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3ac]"></a>WM__IsAncestorOrSelf</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, WM__IsAncestor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[382]"></a>WM__IsEnabled</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, WM__IsEnabled.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[37d]"></a>WM__SendMessageIfEnabled</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, WM__SendMessageIfEnabled.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3ad]"></a>GL_DrawBitmap</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, GUI_DrawBitmap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r4
</UL>

<P><STRONG><a name="[389]"></a>GUI_DrawBitmap</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, GUI_DrawBitmap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r5
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[3ae]"></a>GUI_Exec1</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, GUI_Exec.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>

<P><STRONG><a name="[39c]"></a>GUI_Exec</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, GUI_Exec.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[38c]"></a>GUI_SPRITE__CreateEx</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Create
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_CreateEx
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[3b5]"></a>GUI_SPRITE_CreateEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[3b6]"></a>GUI_SPRITE_Create</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[38b]"></a>GUI_SPRITE_Delete</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[38e]"></a>GUI_SPRITE_SetPosition</STRONG> (Thumb, 808 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r7
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[3b8]"></a>GUI_SPRITE_SetBitmap</STRONG> (Thumb, 482 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r7
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[3b9]"></a>GUI_SPRITE_SetBitmapAndPosition</STRONG> (Thumb, 742 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r6
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>

<P><STRONG><a name="[38f]"></a>GUI_SPRITE_Hide</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>

<P><STRONG><a name="[38a]"></a>GUI_SPRITE_Show</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[3ba]"></a>GUI_SPRITE_GetState</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[3a7]"></a>WM_GetDesktopWindowEx</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, WM_GetDesktopWindowEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWinEx
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
</UL>

<P><STRONG><a name="[3ab]"></a>WM__GetFirstSibling</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, WM__GetFirstSibling.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[3b1]"></a>GUI_GetBitmapPixelIndexEx</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, GUI_GetBitmapPixelIndex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3b2]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, GUI_GetBitmapPixelIndex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[eb]"></a>__2printf</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, noretval__2printf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>

<P><STRONG><a name="[1cc]"></a>__2sprintf</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
</UL>

<P><STRONG><a name="[af]"></a>_printf_int_dec</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, _printf_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed (Weak Reference)
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10 (via Veneer)
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d (via Veneer)
</UL>

<P><STRONG><a name="[3c1]"></a>__printf</STRONG> (Thumb, 286 bytes, Stack size 0 bytes, __printf_wp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent (via Veneer)
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[117]"></a>putc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, putc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_puts
</UL>

<P><STRONG><a name="[368]"></a>memcmp</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, memcmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[1d9]"></a>strcpy</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, strcpy.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetNumDevices
</UL>

<P><STRONG><a name="[1e0]"></a>__aeabi_memcpy</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap (via Veneer)
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CopyToUrbBufferUpdateTransferBuffer (via Veneer)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_FillCopyTransferBuffer (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetInterfaceInfo (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetInterfaceDescriptor (via Veneer)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetEndpointDescriptor (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor (via Veneer)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetCurrentConfigurationDescriptor (via Veneer)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetReportDescriptor (via Veneer)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetSerialNumber (via Veneer)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptorEx (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDeviceDescriptor (via Veneer)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum (via Veneer)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[3c4]"></a>__rt_memcpy</STRONG> (ARM, 212 bytes, Stack size 0 bytes, rt_memcpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[134]"></a>__aeabi_memmove</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memmove.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit (via Veneer)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles (via Veneer)
</UL>

<P><STRONG><a name="[3c5]"></a>__rt_memmove</STRONG> (ARM, 212 bytes, Stack size 0 bytes, rt_memmove.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[1bd]"></a>__aeabi_memcpy4</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext (via Veneer)
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Parser4MainItem (via Veneer)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W (via Veneer)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext (via Veneer)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[386]"></a>__aeabi_memset</STRONG> (ARM, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine (via Veneer)
</UL>

<P><STRONG><a name="[1ee]"></a>__aeabi_memclr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AssignTransferMemory (via Veneer)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AssignMemory (via Veneer)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MEM_POOL_Create (via Veneer)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MallocZeroed (via Veneer)
</UL>

<P><STRONG><a name="[3c8]"></a>__rt_memclr</STRONG> (ARM, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[3c7]"></a>_memset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1b1]"></a>__aeabi_memclr4</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AssignTransferMemory (via Veneer)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AssignMemory (via Veneer)
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_InitAllocDummyIntEps (via Veneer)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController (via Veneer)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MEM_POOL_Create (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor (via Veneer)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ParseReport (via Veneer)
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Parser4MainItem (via Veneer)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddField (via Veneer)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_PreInit (via Veneer)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SubmitSetInterface (via Veneer)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SubmitClearFeatureEndpointStall (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear (via Veneer)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPrepareClearFeatureEndpointStall (via Veneer)
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubProcessPortResetSetAddress (via Veneer)
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetDisablePort (via Veneer)
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessHubNotification (via Veneer)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateHostController (via Veneer)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewUsbInterface (via Veneer)
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_HubPrepareClrFeatureReq (via Veneer)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_AllocInitUsbHub (via Veneer)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptorEx (via Veneer)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateNewUsbDevice (via Veneer)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum (via Veneer)
</UL>

<P><STRONG><a name="[3c9]"></a>_memset_w</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[1db]"></a>strcmp</STRONG> (ARM, 184 bytes, Stack size 0 bytes, strcmpfast.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_Open (via Veneer)
</UL>

<P><STRONG><a name="[10f]"></a>__aeabi_idivmod</STRONG> (ARM, 556 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowStamp (via Veneer)
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec (via Veneer)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate (via Veneer)
</UL>

<P><STRONG><a name="[12b]"></a>__ARM_call_via_r0</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_HandleTick
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CallISR
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ChangeTask
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[18b]"></a>__ARM_call_via_r1</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ChangeTask
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumBytes2NumChars
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
</UL>

<P><STRONG><a name="[14d]"></a>__ARM_call_via_r2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPos
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntry
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChroma
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaMode
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaMode
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPos
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVis
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSize
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSize
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddr
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlpha
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaEx
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaModeEx
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaModeEx
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaEx
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelMax
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeMax
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXY
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorY
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorX
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYMag
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXMag
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSize
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYMagEx
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXMagEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AssignCursorLayer
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[169]"></a>__ARM_call_via_r3</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPos
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntry
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChroma
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPos
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSize
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSize
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaEx
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>

<P><STRONG><a name="[2f9]"></a>__ARM_call_via_r4</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>

<P><STRONG><a name="[190]"></a>__ARM_call_via_r5</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CallNestableISR
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[2fa]"></a>__ARM_call_via_r6</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[23a]"></a>__ARM_call_via_r7</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[3c0]"></a>_printf_int_common</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, _printf_intcommon.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[3bc]"></a>_printf_char_common</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[67]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[3bb]"></a>_printf_char_file</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, _printf_char_file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3cd]"></a>__rt_memmove_w</STRONG> (ARM, 128 bytes, Stack size 0 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[3c6]"></a>__memmove_aligned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[3bf]"></a>__rt_udiv10</STRONG> (ARM, 44 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[3ce]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b1]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 0 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap (via Veneer)
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[b5]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[e9]"></a>__aeabi_uidivmod</STRONG> (ARM, 48 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text_udiv))
<BR><BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div2
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div5
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div8
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div12
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div16
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div_large_positive
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce (via Veneer)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteUnsigned (via Veneer)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsTouch (via Veneer)
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ConvertCycles2us (via Veneer)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_SetBacklight (via Veneer)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_AllocPool (via Veneer)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned (via Veneer)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed (via Veneer)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_GetItemFromPhyAddr (via Veneer)
</UL>

<P><STRONG><a name="[3b]"></a>OS_StartTask</STRONG> (ARM, 0 bytes, Stack size 0 bytes, RTOS.o(C$$code))
<BR>[Address Reference Count : 1]<UL><LI> OS_CreateTask.o(.text)
</UL>
<P><STRONG><a name="[187]"></a>OS_Switch</STRONG> (ARM, 0 bytes, Stack size 0 bytes, RTOS.o(C$$code))
<BR><BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ChangeTask (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_WaitEvent (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Delay (via Veneer)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DelayUntil (via Veneer)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Deactivated (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ActivateTask (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MakeTaskReady (via Veneer)
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SwitchAfterISR
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LeaveRegion (via Veneer)
</UL>

<P><STRONG><a name="[12a]"></a>OS_Start</STRONG> (ARM, 0 bytes, Stack size 0 bytes, RTOS.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[101]"></a>OS_SwitchFromInt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, RTOS.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_irq_handler (via Veneer)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CallNestableISR (via Veneer)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CallISR (via Veneer)
</UL>

<P><STRONG><a name="[20]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, RTOS.o(C$$code))
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_irq_handler (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL>
<P><STRONG><a name="[a9]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup_lpc2xxx.o(Init))
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__low_level_init (via Veneer)
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1a0]"></a>__ARM_common_call_via_r1</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, USBH_Core.o(i.__ARM_common_call_via_r1))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ServiceISR
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Task
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ISRTask
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_OnNotification
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AbortEp
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostExit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOutCompletion
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnIntInCompletion
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DefaultReleaseEpCompletion
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DefaultEpUrbCompletion
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnSubStateCompletion
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SubStateTimerRoutine
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessEnumHub
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompletePendingUrbs
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ISO_CompleteUrb
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_CompleteUrb
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_CompletePendingUrbs
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BULK_INT_OnCompleteUrb
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_EpUrbCompletion
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetInterfaceCompletion
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ResetPipeCompletion
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_AddPortsStartPowerGoodTime
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteHostController
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetFrameNumber
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkDeviceAsRemoved
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ProcessEnum
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[1af]"></a>__ARM_common_call_via_r2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, USBH_Core.o(i.__ARM_common_call_via_r2))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RemoveHostController
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_OnNotification
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ROOTHUB_ProcessInterrupt
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EnumerateDevices
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SubmitSetInterface
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SubmitClearFeatureEndpointStall
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DefaultEpSubmitUrb
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationHubPortReset
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdFireEnumErrorNotification
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationRootPortReset
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitPortsCompletion
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessPortResetSetAddress
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_EpSubmitUrb
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationProcessDeviceEnum
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateSubmitRequest
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ProcessEnumPortError
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[1ac]"></a>__ARM_common_call_via_r3</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, USBH_Core.o(i.__ARM_common_call_via_r3))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_RemoveHostController
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_OnNotification
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_AddHostController
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ParseReport
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ReleaseDefaultEndpoint
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteEndpoint
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_AddPortsStartPowerGoodTime
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PNP_NotifyWrapperCallbackRoutine
</UL>

<P><STRONG><a name="[2c6]"></a>__ARM_common_call_via_r4</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, USBH_OHC_EP_Int.o(i.__ARM_common_call_via_r4))
<BR><BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveEDFromLogicalListAndFree
</UL>

<P><STRONG><a name="[100]"></a>__ARM_common_call_via_r5</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(i.__ARM_common_call_via_r5))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_irq_handler
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
</UL>

<P><STRONG><a name="[1aa]"></a>__ARM_common_call_via_r6</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, USBH_Core.o(i.__ARM_common_call_via_r6))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EnumerateDevices
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_InitDefaultEndpoint
</UL>

<P><STRONG><a name="[293]"></a>__ARM_common_call_via_r7</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, USBH_HC.o(i.__ARM_common_call_via_r7))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EnumerateDevices
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewEndpoint
</UL>

<P><STRONG><a name="[c6]"></a>__ARM_common_disable_irq</STRONG> (ARM, 20 bytes, Stack size 0 bytes, USBH_OS_embOS.o(i.__ARM_common_disable_irq))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_DisableInterrupt (via Veneer)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_DisableISR (via Veneer)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_irq_handler (via Veneer)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitHW (via Veneer)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_InstallISRHandler (via Veneer)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_ISRSetPrio (via Veneer)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ARM_EnableISR (via Veneer)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLEDState (via Veneer)
</UL>

<P><STRONG><a name="[c8]"></a>__ARM_common_enable_irq</STRONG> (ARM, 16 bytes, Stack size 0 bytes, USBH_OS_embOS.o(i.__ARM_common_enable_irq))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Error (via Veneer)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_EnableInterrupt (via Veneer)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_irq_handler (via Veneer)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLEDState (via Veneer)
</UL>

<P><STRONG><a name="[1ca]"></a>__ARM_common_memcpy1_8</STRONG> (ARM, 68 bytes, Stack size 0 bytes, USBH_HID.o(i.__ARM_common_memcpy1_8))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnIntInCompletion (via Veneer)
</UL>

<P><STRONG><a name="[21a]"></a>__ARM_common_udiv_10</STRONG> (ARM, 28 bytes, Stack size 0 bytes, USBH_OHC_Device.o(i.__ARM_common_udiv_10))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostInit (via Veneer)
</UL>

<P><STRONG><a name="[17f]"></a>__ARM_disable_irq</STRONG> (ARM, 20 bytes, Stack size 0 bytes, irq.o(i.__ARM_disable_irq))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Wait (via Veneer)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_WaitEvent (via Veneer)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SignalEvent (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Delay (via Veneer)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_WaitTimed (via Veneer)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Set (via Veneer)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CreateRSema (via Veneer)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_HandleTick (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StartTimer (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RetriggerTimer (via Veneer)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SetPriority (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PutMail (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetMail (via Veneer)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StopTimer (via Veneer)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DelayUntil (via Veneer)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CallNestableISR (via Veneer)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DeactivateTimedP (via Veneer)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DeactivateP (via Veneer)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ClearWaitObj (via Veneer)
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Reset (via Veneer)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InsertTask (via Veneer)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ChangeTask (via Veneer)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LeaveRegion (via Veneer)
</UL>

<P><STRONG><a name="[181]"></a>__ARM_enable_irq</STRONG> (ARM, 16 bytes, Stack size 0 bytes, irq.o(i.__ARM_enable_irq))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Wait (via Veneer)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitKern (via Veneer)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_WaitEvent (via Veneer)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SignalEvent (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Delay (via Veneer)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_WaitTimed (via Veneer)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Set (via Veneer)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CreateRSema (via Veneer)
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RestoreI (via Veneer)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_HandleTick (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StartTimer (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RetriggerTimer (via Veneer)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SetPriority (via Veneer)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StopTimer (via Veneer)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PutMail (via Veneer)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DelayUntil (via Veneer)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CallNestableISR (via Veneer)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Deactivated (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ActivateTask (via Veneer)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMail (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MakeTaskReady (via Veneer)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ClearWaitObj (via Veneer)
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EVENT_Reset (via Veneer)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ChangeTask (via Veneer)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LeaveRegion (via Veneer)
</UL>

<P><STRONG><a name="[13c]"></a>__rt_sdiv_100</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUI_Alloc.o(i.__rt_sdiv_100), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
</UL>

<P><STRONG><a name="[13d]"></a>__rt_udiv_100</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, GUI_Alloc.o(i.__rt_udiv_100), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
</UL>

<P><STRONG><a name="[130]"></a>__rt_udiv_255</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, GUI_Alloc.o(i.__rt_udiv_255))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[236]"></a>__rt_udiv_31</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUICC_565_Index2Color.o(i.__rt_udiv_31))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color_565
</UL>

<P><STRONG><a name="[237]"></a>__rt_udiv_63</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUICC_565_Index2Color.o(i.__rt_udiv_63))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color_565
</UL>

<P><STRONG><a name="[3c2]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[25]"></a>_OnMouseChange</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, os_usbh_hid.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PutMail
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_usbh_hid.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>_OnKeyboardChange</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, os_usbh_hid.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PutMail
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_usbh_hid.o(.text)
</UL>
<P><STRONG><a name="[1d]"></a>Undefined_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL>
<P><STRONG><a name="[1e]"></a>SWI_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL>
<P><STRONG><a name="[1f]"></a>Prefetch_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL>
<P><STRONG><a name="[21]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL>
<P><STRONG><a name="[c5]"></a>_SetLEDState</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CPCA9532_WriteRead
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ClrLED
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SetLED
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ToggleLED
</UL>

<P><STRONG><a name="[de]"></a>_LCD_HW_Init</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
</UL>

<P><STRONG><a name="[ca]"></a>_SPI_Send</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_WriteToReg
</UL>

<P><STRONG><a name="[c9]"></a>_LCD_WriteToReg</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SPI_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DisplayInit
</UL>

<P><STRONG><a name="[cb]"></a>_LCD_DisplayInit</STRONG> (Thumb, 360 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delay
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_WriteToReg
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
</UL>

<P><STRONG><a name="[27]"></a>_ExecTouch</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RetriggerTimer
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.text)
</UL>
<P><STRONG><a name="[d7]"></a>_InitLCDController</STRONG> (Thumb, 348 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StartTimer
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CreateTimer
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_SetOrientation
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Align
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_SetBacklight
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delay
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DisplayInit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_HW_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[cc]"></a>_Delay</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DisplayInit
</UL>

<P><STRONG><a name="[df]"></a>_LCD_SetBacklight</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
</UL>

<P><STRONG><a name="[dd]"></a>_Align</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLCDController
</UL>

<P><STRONG><a name="[28]"></a>_ISR</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usbh_config_lpc24xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ServiceISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_config_lpc24xx.o(.text)
</UL>
<P><STRONG><a name="[f4]"></a>_I2C_WriteWithWait</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, i2cpca9532.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_I2C_PutChar
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_I2C_CheckStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CPCA9532_WriteRead
</UL>

<P><STRONG><a name="[f7]"></a>_I2C_GetChar</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, i2cpca9532.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CPCA9532_WriteRead
</UL>

<P><STRONG><a name="[f6]"></a>_I2C_CheckStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, i2cpca9532.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_I2C_WriteWithWait
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CPCA9532_WriteRead
</UL>

<P><STRONG><a name="[f5]"></a>_I2C_PutChar</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, i2cpca9532.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_I2C_WriteWithWait
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CPCA9532_WriteRead
</UL>

<P><STRONG><a name="[29]"></a>_OS_ISR_Tick</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtosinit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_HandleTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtosinit.o(.text)
</UL>
<P><STRONG><a name="[105]"></a>_EMC_Init</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, rtosinit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__low_level_init
</UL>

<P><STRONG><a name="[104]"></a>_InitPLL</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, rtosinit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__low_level_init
</UL>

<P><STRONG><a name="[107]"></a>_SPI_Send</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_x_touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsTouch
</UL>

<P><STRONG><a name="[106]"></a>_IsTouch</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, gui_x_touch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SPI_Send
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
</UL>

<P><STRONG><a name="[10d]"></a>_WriteUnsigned</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, usbh_configio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowStamp
</UL>

<P><STRONG><a name="[10e]"></a>_ShowStamp</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, usbh_configio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_puts
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteUnsigned
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetTaskName
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Warn
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Log
</UL>

<P><STRONG><a name="[110]"></a>_puts</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usbh_configio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Warn
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Log
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowStamp
</UL>

<P><STRONG><a name="[2a]"></a>_OnRx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_x_embos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_x_embos.o(.text)
</UL>
<P><STRONG><a name="[6c]"></a>_Color2Index_565</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUICC_565.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_565.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>_GetIndexMask_565</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUICC_565.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_565.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>_SetPixelIndex</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>_GetPixelIndex</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>_XorPixel</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>_DrawHLine</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.constdata)
</UL>
<P><STRONG><a name="[71]"></a>_DrawVLine</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>_FillRect</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>_DrawBitmap</STRONG> (Thumb, 3152 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.constdata)
</UL>
<P><STRONG><a name="[76]"></a>_SetOrg</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>_GetDevProp</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.constdata)
</UL>
<P><STRONG><a name="[2c]"></a>_SetVRAMAddr</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>_SetVSize</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[2e]"></a>_SetSize</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>_SetPos</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>_GetPos</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>_SetAlpha</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[32]"></a>_SetVis</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>_ControlCache</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>_On</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>_Off</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>_SetLUTEntry</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>_SetAlphaMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[39]"></a>_SetChromaMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>_SetChroma</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.text)
</UL>
<P><STRONG><a name="[77]"></a>_GetDevFunc</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, GUIDRV_Lin_OSX_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_OSX_16.o(.constdata)
</UL>
<P><STRONG><a name="[12d]"></a>_AddFreeMemory</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[12f]"></a>_InitOnce</STRONG> (Thumb, 560 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv_255
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumUsedBlocks
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumUsedBytes
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumFreeBlocks
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumFreeBytes
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[12e]"></a>_RemoveFreeMemory</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[131]"></a>_RemoveHoles</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[6a]"></a>OS_SwitchAfterISR_Idle</STRONG> (ARM, 0 bytes, Stack size 0 bytes, RTOS.o(C$$code))
<BR>[Address Reference Count : 1]<UL><LI> RTOS.o(C$$code)
</UL>
<P><STRONG><a name="[6b]"></a>OS_SwitchAfterISR</STRONG> (ARM, 0 bytes, Stack size 0 bytes, RTOS.o(C$$code))
<BR><BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_DecRegionCnt (via Veneer)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> RTOS.o(C$$code)
</UL>
<P><STRONG><a name="[3c]"></a>_OS_RSema_OnTerminate</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, OSRSEM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_ClearWaitObj
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LeaveRegion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> OSRSEM.o(.text)
</UL>
<P><STRONG><a name="[1bc]"></a>_LookupCollection</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddField
</UL>

<P><STRONG><a name="[1ba]"></a>_AddField</STRONG> (Thumb, 364 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LookupCollection
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Parser4MainItem
</UL>

<P><STRONG><a name="[4]"></a>_Parser4GlobalItem</STRONG> (Thumb, 530 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> USBH_HID.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>_Parser4LocalItem</STRONG> (Thumb, 292 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> USBH_HID.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>_Parser4MainItem</STRONG> (Thumb, 304 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddField
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_HID.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>_Parser4Reserved</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> USBH_HID.o(.data)
</UL>
<P><STRONG><a name="[1be]"></a>_ParseReport</STRONG> (Thumb, 370 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r3
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_LoadU16LE
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_LoadU32LE
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetReportDescriptorParsed
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetDeviceInfo
</UL>

<P><STRONG><a name="[1c2]"></a>_CheckStateAndCloseInterface</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CloseInterface
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Remove
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_Exit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnIntInCompletion
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnResetReadEndpointCompletion
</UL>

<P><STRONG><a name="[3e]"></a>_OnGeneralCompletion</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_SetEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_HID.o(.text)
</UL>
<P><STRONG><a name="[3f]"></a>_OnResetReadEndpointCompletion</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SubmitInBuffer
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckStateAndCloseInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_HID.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>_OnIntInCompletion</STRONG> (Thumb, 670 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitEventTimed
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_SetEvent
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_FreeEvent
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_AllocEvent
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy1_8 (via Veneer)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SubmitInBuffer
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckStateAndCloseInterface
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ResetEndpoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_HID.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>_OnOutCompletion</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_SetEvent
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_HID.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>_OnGeneralDeviceNotification</STRONG> (Thumb, 828 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OpenInterface
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_WaitEventTimed
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_FreeEvent
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_AllocEvent
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetInterfaceDescriptor
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetEndpointDescriptor
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetCurrentConfigurationDescriptor
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CloseInterface
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SubmitInBuffer
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckStateAndCloseInterface
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MallocZeroed
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Add
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_HID.o(.text)
</UL>
<P><STRONG><a name="[41]"></a>_OnAbortCompletion</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_SetEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_HID.o(.text)
</UL>
<P><STRONG><a name="[1dd]"></a>_h2p</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Add
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Remove
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_Close
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_CancelIo
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_SetReport
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetReport
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetReportDescriptor
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetReportDescriptorParsed
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetDeviceInfo
</UL>

<P><STRONG><a name="[1c6]"></a>_SubmitInBuffer</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, USBH_HID.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_GetReport
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnGeneralDeviceNotification
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnIntInCompletion
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnResetReadEndpointCompletion
</UL>

<P><STRONG><a name="[1e4]"></a>_SubmitOutBuffer</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, USBH_HID.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitUrb
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HID_SetReport
</UL>

<P><STRONG><a name="[1e7]"></a>_PrintUnsigned</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, USBH_Log.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_PrintfSafe
</UL>

<P><STRONG><a name="[1f2]"></a>_SetHcFuncState</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ReadReg32
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_SetHcState
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostInit
</UL>

<P><STRONG><a name="[1f7]"></a>_UnlinkHostResources</STRONG> (Thumb, 326 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_RemoveEps
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveEDFromLogicalListAndFree
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_RemoveAllUserEDFromPhysicalLink
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_INT_PutAllDummyEp
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Ep0RemoveEndpoints
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_RemoveEps
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_GetTime32
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ReadReg32
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_WriteReg32
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CancelTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostExit
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostInit
</UL>

<P><STRONG><a name="[d]"></a>_AbortEndpoint</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_AbortEp
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_AbortEp
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AbortEp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>_ResetEndpoint</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobClearHalt
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpClearToggle
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_OHC_Device.o(.data)
</UL>
<P><STRONG><a name="[216]"></a>_AddControlBulkDummyEndpoint</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InsertEp
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_InitEp
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_GetEp
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Put
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Insert
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Init
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_Get
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_InsertEp
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_InitEp
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_GetEp
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HostInit
</UL>

<P><STRONG><a name="[211]"></a>_DeleteDevice</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, USBH_OHC_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_HccaRelease
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_FreePool
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_FreeTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_DeleteController
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_CreateController
</UL>

<P><STRONG><a name="[7b]"></a>_DrawBitmap</STRONG> (Thumb, 1664 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r7
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r5
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>_FillRect</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>_DrawHLine</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>_DrawVLine</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>_SetPixelIndex</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>_XorPixel</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>_GetPixelIndex</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>_GetRect</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>_GetDevProp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>_ProcessEnumDisableParentHubPortCompletion</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Device.o(.text)
</UL>
<P><STRONG><a name="[50]"></a>_OnSubmitUrbCompletion</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, USBH_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OS_SetEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Device.o(.text)
</UL>
<P><STRONG><a name="[54]"></a>_ResetPipeCompletion</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, USBH_Interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Interface.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>_SetInterfaceCompletion</STRONG> (Thumb, 222 bytes, Stack size 0 bytes, USBH_Interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_NewEndpoint
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_DeleteEndpoint
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetNextEndpointDesc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Interface.o(.text)
</UL>
<P><STRONG><a name="[2af]"></a>_BULK_INT_OnCompleteUrb</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_OnAbortUrbTimer
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckForCompletion
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckAndCancelAbortedUrbs
</UL>

<P><STRONG><a name="[2ae]"></a>_BULK_INT_SubmitTransfer</STRONG> (Thumb, 220 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdInit
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetTransDesc
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetLastTDFromED
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInsertTD
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_SubmitUrbsFromList
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckForCompletion
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AddUrb
</UL>

<P><STRONG><a name="[2b3]"></a>_BULK_INT_CompletePendingUrbs</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, USBH_OHC_EP_BulkInt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertHead
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveTail
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_OnAbortUrbTimer
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_AbortEp
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_BULK_INT_CheckAndCancelAbortedUrbs
</UL>

<P><STRONG><a name="[2bf]"></a>_EP0_SubmitUrbsFromList</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH__ConvSetupPacketToBuffer
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveHead
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TdInit
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetTransDesc
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetLastTDFromED
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInsertTD
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
</UL>

<P><STRONG><a name="[2c3]"></a>_EP0_CompleteUrb</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_OnAbortUrbTimer
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_CompleteAbortedUrbs
</UL>

<P><STRONG><a name="[2c5]"></a>USBH_OHCI_EP0_CompleteAbortedUrbs</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, USBH_OHC_EP_Control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertHead
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveTail
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_CompleteUrb
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EP0_SubmitUrbsFromList
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobClearSkip
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobIsTDActive
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobDeleteAllPendingTD
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP0_DoneCheckForCompletion
</UL>

<P><STRONG><a name="[2c9]"></a>_ISO_CompleteUrb</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_OnAbortUrbTimer
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckForCompletion
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckAndCancelAbortedUrbs
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_SubmitUrbsFromList
</UL>

<P><STRONG><a name="[2cf]"></a>_ISO_SubmitUrb</STRONG> (Thumb, 298 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EndpointListEnable
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_IsoTdInit
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_GetTransDesc
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobGetLastTDFromED
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EpGlobInsertTD
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_AddUrb
</UL>

<P><STRONG><a name="[2cb]"></a>_ISO_CompletePendingUrbs</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, USBH_OHC_EP_Iso.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertHead
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveTail
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_RemoveEntry
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HCM_PutItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_OnAbortUrbTimer
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_AbortEp
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ISO_CheckAndCancelAbortedUrbs
</UL>

<P><STRONG><a name="[57]"></a>_ProcessPortResetSetAddress</STRONG> (Thumb, 950 bytes, Stack size 0 bytes, USBH_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationRootPortReset
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateWait
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ClrActivePortReset
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_GetUsbAddress
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateSubmitRequest
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ServicePorts
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteHostController
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SetPortState
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartEnumeration
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateNewUsbDevice
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ROOTHUB_ServicePorts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_RootHub.o(.text)
</UL>
<P><STRONG><a name="[58]"></a>_InitPortsCompletion</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, USBH_RootHub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ServicePorts
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteHostController
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SetPortState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_RootHub.o(.text)
</UL>
<P><STRONG><a name="[8d]"></a>_Color2Index_0</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, GUICC_0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_0.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>_Index2Color_0</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, GUICC_0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_0.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>_GetIndexMask_0</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, GUICC_0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_0.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>_SetBkColor</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>_SetColor</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>_SetDrawMode</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, LCD.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> LCD.o(.constdata)
</UL>
<P><STRONG><a name="[314]"></a>_DeleteAllChildren</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[5b]"></a>_Paint1</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[5a]"></a>_cbPaintMemDev</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>cbBackWin</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[2fe]"></a>_Invalidate1Abs</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
</UL>

<P><STRONG><a name="[31c]"></a>_Findy1</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>

<P><STRONG><a name="[31e]"></a>_Findx0</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[31f]"></a>_Findx1</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>

<P><STRONG><a name="[322]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 278 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[333]"></a>_PaintTransChildren</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[61]"></a>_ProcessHubNotification</STRONG> (Thumb, 1382 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_LoadU32LE
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_EpSubmitUrb
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateSubmitRequest
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ServicePorts
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkParentAndChildDevicesAsRemoved
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CheckCtrlTransferBuffer
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubStatusRequestCompletion
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubNotifyClearEndpointStallCompletion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Hub.o(.text)
</UL>
<P><STRONG><a name="[5e]"></a>_HubNotifyClearEndpointStallCompletion</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessHubNotification
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ServicePorts
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkParentAndChildDevicesAsRemoved
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Hub.o(.text)
</UL>
<P><STRONG><a name="[5f]"></a>_HubStatusRequestCompletion</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SubmitClearFeatureEndpointStall
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessHubNotification
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ServicePorts
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MarkParentAndChildDevicesAsRemoved
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Hub.o(.text)
</UL>
<P><STRONG><a name="[33d]"></a>_HubPortResetDisablePort</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetError
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateSubmitRequest
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubProcessPortResetSetAddress
</UL>

<P><STRONG><a name="[60]"></a>_ProcessEnumHub</STRONG> (Thumb, 1140 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Malloc
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_InsertTail
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_GetNext
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DLIST_IsEmpty
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_LoadU16LE
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_LoadU32LE
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateWait
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_EpSubmitUrb
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_SearchUsbEndpointInInterface
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateSubmitRequest
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_BufferAllocateTransferBuffer
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SearchUsbInterface
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CheckCtrlTransferBuffer
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetUshortFromDesc
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EnumParentPortRestart
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ProcessEnumPortError
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetUcharFromDesc
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_StartHub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Hub.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>_HubProcessPortResetSetAddress</STRONG> (Thumb, 748 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetError
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetSetIdleServicePorts
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetDisablePort
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationHubPortReset
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateWait
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_GetUsbAddress
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_URB_SubStateSubmitRequest
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_StartEnumeration
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CreateNewUsbDevice
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BD_ServiceAllHubs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_Hub.o(.text)
</UL>
<P><STRONG><a name="[33f]"></a>_HubPortResetSetIdleServicePorts</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HC_ServicePorts
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetError
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubProcessPortResetSetAddress
</UL>

<P><STRONG><a name="[33e]"></a>_HubPortResetError</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, USBH_Hub.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetSetIdleServicePorts
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UbdSetEnumErrorNotificationHubPortReset
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubProcessPortResetSetAddress
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HubPortResetDisablePort
</UL>

<P><STRONG><a name="[63]"></a>_SubStateTimerRoutine</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, USBH_URB.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_URB.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>_OnSubStateCompletion</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, USBH_URB.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeleteDevice
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CancelTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> USBH_URB.o(.text)
</UL>
<P><STRONG><a name="[65]"></a>_cbTimer</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, WM_Timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_Timer.o(.text)
</UL>
<P><STRONG><a name="[97]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, GUIDEV_UsageBM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, GUIDEV_UsageBM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.constdata)
</UL>
<P><STRONG><a name="[3a1]"></a>_Link</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetDelay
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[3a8]"></a>_Screen2hWin</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, WM_Screen2Win.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWinEx
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
</UL>

<P><STRONG><a name="[3af]"></a>_GetClipRect</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3b0]"></a>_GetClipParam</STRONG> (Thumb, 338 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[9c]"></a>_DrawBitmap</STRONG> (Thumb, 718 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r4
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>_DrawHLine</STRONG> (Thumb, 310 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r7
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r5
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.constdata)
</UL>
<P><STRONG><a name="[9e]"></a>_DrawVLine</STRONG> (Thumb, 306 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r7
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r5
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>_FillRect</STRONG> (Thumb, 366 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r7
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r5
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>_GetPixelIndex</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.constdata)
</UL>
<P><STRONG><a name="[a1]"></a>_SetPixelIndex</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.constdata)
</UL>
<P><STRONG><a name="[a2]"></a>_XorPixel</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.constdata)
</UL>
<P><STRONG><a name="[a6]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.constdata)
</UL>
<P><STRONG><a name="[a4]"></a>_GetDevFunc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>_GetDevProp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>_GetRect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.constdata)
</UL>
<P><STRONG><a name="[3b7]"></a>_Undraw</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r5
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[3b4]"></a>_SpriteDraw</STRONG> (Thumb, 366 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r7
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[3b3]"></a>_DoColorConversion</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[3d7]"></a>__arm_div_large_positive</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[3d6]"></a>__arm_div16</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[3d5]"></a>__arm_div12</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[3d4]"></a>__arm_div8</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[3d3]"></a>__arm_div5</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[3d2]"></a>__arm_div2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[68]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3d0]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3cb]"></a>_printf_post_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[3ca]"></a>_printf_pre_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[3bd]"></a>_printf_truncate_signed</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[3be]"></a>_printf_truncate_unsigned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<HR></body></html>
