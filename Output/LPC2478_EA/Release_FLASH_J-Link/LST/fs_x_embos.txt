; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--thumb --list -c --asm --interleave -o.\output\lpc2478_ea\release_flash_j-link\obj\fs_x_embos.o --asm_dir=.\Output\LPC2478_EA\Release_FLASH_J-Link\LST\ --list_dir=.\Output\LPC2478_EA\Release_FLASH_J-Link\LST\ --depend=.\output\lpc2478_ea\release_flash_j-link\obj\fs_x_embos.d --apcs=interwork -O3 -IApplication\SEGGERDEMO -IApplication\SEGGERDEMO\Src -ISetup -IInc -IConfig -IFS -IIP -IIP\IP_FS\FS_RO\Generated -IGUI -IOS -IUSB -IUSBH -I"C:\Program Files (x86)\Keil\V473\ARM\RV31\INC" -I"C:\Program Files (x86)\Keil\V473\ARM\CMSIS\Include" -I"C:\Program Files (x86)\Keil\V473\ARM\Inc\Philips" FS\FS_X_embOS.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  FS_X_OS_Lock PROC
;;;52     */
;;;53     void FS_X_OS_Lock(unsigned LockIndex) {
000000  492d              LDR      r1,|L1.184|
000002  b510              PUSH     {r4,lr}
;;;54       OS_RSEMA * pSema;
;;;55     
;;;56       pSema = _paSema + LockIndex;
000004  6849              LDR      r1,[r1,#4]  ; _paSema
000006  0100              LSLS     r0,r0,#4
000008  1840              ADDS     r0,r0,r1
00000a  d001              BEQ      |L1.16|
;;;57       if (pSema) {
;;;58         OS_Use(pSema);
00000c  f7fffffe          BL       OS_Use
                  |L1.16|
;;;59       }
;;;60     }
000010  bc10              POP      {r4}
000012  bc08              POP      {r3}
000014  4718              BX       r3
;;;61     
                          ENDP

                  FS_X_OS_Unlock PROC
;;;66     */
;;;67     void FS_X_OS_Unlock(unsigned LockIndex) {
000016  4928              LDR      r1,|L1.184|
000018  b510              PUSH     {r4,lr}
;;;68       OS_RSEMA * pSema;
;;;69     
;;;70       pSema = _paSema + LockIndex;
00001a  6849              LDR      r1,[r1,#4]  ; _paSema
00001c  0100              LSLS     r0,r0,#4
00001e  1840              ADDS     r0,r0,r1
000020  d0f6              BEQ      |L1.16|
;;;71       if (pSema) {
;;;72         OS_Unuse(pSema);
000022  f7fffffe          BL       OS_Unuse
;;;73       }
;;;74     }
000026  e7f3              B        |L1.16|
;;;75     
                          ENDP

                  FS_X_OS_Init PROC
;;;92     */
;;;93     void FS_X_OS_Init(unsigned NumLocks) {
000028  b570              PUSH     {r4-r6,lr}
00002a  0006              MOVS     r6,r0
00002c  0100              LSLS     r0,r0,#4
;;;94       unsigned i;
;;;95       OS_RSEMA * pSema;
;;;96     
;;;97       _paSema = (OS_RSEMA *)FS_AllocZeroed(NumLocks* sizeof(OS_RSEMA));
00002e  f7fffffe          BL       FS_AllocZeroed
000032  4921              LDR      r1,|L1.184|
;;;98       pSema =_paSema;
000034  0004              MOVS     r4,r0
;;;99       for (i = 0; i < NumLocks; i++) {
000036  2500              MOVS     r5,#0
000038  6048              STR      r0,[r1,#4]  ; _paSema
00003a  e004              B        |L1.70|
                  |L1.60|
;;;100        OS_CREATERSEMA(pSema++);
00003c  0020              MOVS     r0,r4
00003e  3410              ADDS     r4,r4,#0x10
000040  f7fffffe          BL       OS_CreateRSema
000044  1c6d              ADDS     r5,r5,#1              ;99
                  |L1.70|
000046  42b5              CMP      r5,r6                 ;99
000048  d3f8              BCC      |L1.60|
;;;101      }
;;;102      OS_EVENT_Create(&_Event);
00004a  481b              LDR      r0,|L1.184|
00004c  3008              ADDS     r0,r0,#8
00004e  f7fffffe          BL       OS_EVENT_Create
;;;103    }
000052  bc70              POP      {r4-r6}
000054  bc08              POP      {r3}
000056  4718              BX       r3
;;;104    
                          ENDP

                  FS_X_OS_DeInit PROC
;;;117    */
;;;118    void FS_X_OS_DeInit(void) {
000058  b5f8              PUSH     {r3-r7,lr}
;;;119      unsigned i;
;;;120      OS_RSEMA  * pSema;
;;;121      unsigned    NumLocks;
;;;122    
;;;123      NumLocks = _NumLocks;
00005a  4c17              LDR      r4,|L1.184|
;;;124      pSema   = &_paSema[0];
;;;125      for (i = 0; i < NumLocks; i++) {
00005c  2500              MOVS     r5,#0
00005e  7827              LDRB     r7,[r4,#0]            ;123  ; _NumLocks
000060  6866              LDR      r6,[r4,#4]            ;118  ; _paSema
000062  e004              B        |L1.110|
                  |L1.100|
;;;126        OS_DeleteRSema(pSema);
000064  0030              MOVS     r0,r6
000066  f7fffffe          BL       OS_DeleteRSema
;;;127        pSema++;
00006a  3610              ADDS     r6,r6,#0x10
00006c  1c6d              ADDS     r5,r5,#1              ;125
                  |L1.110|
00006e  42bd              CMP      r5,r7                 ;125
000070  d3f8              BCC      |L1.100|
;;;128      }
;;;129      OS_EVENT_Delete(&_Event);
000072  4811              LDR      r0,|L1.184|
000074  3008              ADDS     r0,r0,#8
000076  f7fffffe          BL       OS_EVENT_Delete
;;;130      FS_Free(_paSema);
00007a  6860              LDR      r0,[r4,#4]  ; _paSema
00007c  f7fffffe          BL       FS_Free
;;;131      _paSema  = NULL;
000080  2000              MOVS     r0,#0
;;;132      _NumLocks = 0;
000082  6060              STR      r0,[r4,#4]  ; _paSema
000084  7020              STRB     r0,[r4,#0]
;;;133    }
000086  bcf8              POP      {r3-r7}
000088  bc08              POP      {r3}
00008a  4718              BX       r3
;;;134    
                          ENDP

                  FS_X_OS_GetTime PROC
;;;139    */
;;;140    U32  FS_X_OS_GetTime(void) {
00008c  480b              LDR      r0,|L1.188|
;;;141      return (U32)OS_GetTime32();
00008e  6800              LDR      r0,[r0,#0]  ; OS_Time
;;;142    }
000090  4770              BX       lr
;;;143    
                          ENDP

                  FS_X_OS_Wait PROC
;;;157    */
;;;158    int FS_X_OS_Wait(int Timeout) {
000092  0001              MOVS     r1,r0
000094  b510              PUSH     {r4,lr}
;;;159      int r;
;;;160    
;;;161      r = -1;
;;;162      if (OS_EVENT_WaitTimed(&_Event, Timeout) == 0) {
000096  4808              LDR      r0,|L1.184|
000098  2400              MOVS     r4,#0                 ;161
00009a  43e4              MVNS     r4,r4                 ;161
00009c  3008              ADDS     r0,r0,#8
00009e  f7fffffe          BL       OS_EVENT_WaitTimed
0000a2  2800              CMP      r0,#0
0000a4  d100              BNE      |L1.168|
;;;163        r = 0;
0000a6  2400              MOVS     r4,#0
                  |L1.168|
;;;164      }
;;;165      return r;
0000a8  0020              MOVS     r0,r4
;;;166    }
0000aa  e7b1              B        |L1.16|
;;;167    
                          ENDP

                  FS_X_OS_Signal PROC
;;;175    */
;;;176    void FS_X_OS_Signal(void) {
0000ac  4802              LDR      r0,|L1.184|
0000ae  b510              PUSH     {r4,lr}
;;;177      OS_EVENT_Set(&_Event);
0000b0  3008              ADDS     r0,r0,#8
0000b2  f7fffffe          BL       OS_EVENT_Set
;;;178    }
0000b6  e7ab              B        |L1.16|
;;;179    
                          ENDP

                  |L1.184|
                          DCD      ||.data||
                  |L1.188|
                          DCD      OS_Time

                          AREA ||.data||, DATA, ALIGN=2

                  _NumLocks
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  _paSema
                          DCD      0x00000000
                  _Event
                          %        8
