; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--thumb --list -c --asm --interleave -o.\output\lpc2478_ea\release_flash_j-link\obj\gui_x_embos.o --asm_dir=.\Output\LPC2478_EA\Release_FLASH_J-Link\LST\ --list_dir=.\Output\LPC2478_EA\Release_FLASH_J-Link\LST\ --depend=.\output\lpc2478_ea\release_flash_j-link\obj\gui_x_embos.d --apcs=interwork -O3 -IApplication\SEGGERDEMO -IApplication\SEGGERDEMO\Src -ISetup -IInc -IConfig -IFS -IIP -IIP\IP_FS\FS_RO\Generated -IGUI -IOS -IUSB -IUSBH -I"C:\Program Files (x86)\Keil\V473\ARM\RV31\INC" -I"C:\Program Files (x86)\Keil\V473\ARM\CMSIS\Include" -I"C:\Program Files (x86)\Keil\V473\ARM\Inc\Philips" GUI\GUI_X_embOS.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_X_GetTime PROC
;;;35     
;;;36     int GUI_X_GetTime(void) {
000000  481f              LDR      r0,|L1.128|
;;;37       return OS_GetTime();
000002  6800              LDR      r0,[r0,#0]  ; OS_Time
;;;38     }
000004  4770              BX       lr
;;;39     
                          ENDP

                  GUI_X_Delay PROC
;;;40     void GUI_X_Delay(int Period) {
000006  b510              PUSH     {r4,lr}
;;;41       OS_Delay(Period);
000008  f7fffffe          BL       OS_Delay
                  |L1.12|
;;;42     }
00000c  bc10              POP      {r4}
00000e  bc08              POP      {r3}
000010  4718              BX       r3
;;;43     
                          ENDP

                  GUI_X_ExecIdle PROC
;;;48     */
;;;49     void GUI_X_ExecIdle(void) {
000012  b510              PUSH     {r4,lr}
;;;50       OS_Delay(1);
000014  2001              MOVS     r0,#1
000016  f7fffffe          BL       OS_Delay
;;;51     }
00001a  e7f7              B        |L1.12|
;;;52     
                          ENDP

                  GUI_X_InitOS PROC
;;;73     
;;;74     void GUI_X_InitOS(void)    { OS_CreateRSema(&RSema);    }
00001c  b510              PUSH     {r4,lr}
00001e  4819              LDR      r0,|L1.132|
000020  f7fffffe          BL       OS_CreateRSema
000024  e7f2              B        |L1.12|
;;;75     void GUI_X_Unlock(void)    { OS_Unuse(&RSema); }
                          ENDP

                  GUI_X_Unlock PROC
000026  b510              PUSH     {r4,lr}
000028  4816              LDR      r0,|L1.132|
00002a  f7fffffe          BL       OS_Unuse
00002e  e7ed              B        |L1.12|
;;;76     void GUI_X_Lock(void)      { OS_Use(&RSema);  }
                          ENDP

                  GUI_X_Lock PROC
000030  b510              PUSH     {r4,lr}
000032  4814              LDR      r0,|L1.132|
000034  f7fffffe          BL       OS_Use
000038  e7e8              B        |L1.12|
;;;77     U32  GUI_X_GetTaskId(void) { return (U32)OS_GetTaskID(); }
                          ENDP

                  GUI_X_GetTaskId PROC
00003a  4813              LDR      r0,|L1.136|
00003c  6800              LDR      r0,[r0,#0]  ; OS_pCurrentTask
00003e  4770              BX       lr
;;;78     
                          ENDP

                  GUI_X_WaitEvent PROC
;;;90     
;;;91     void GUI_X_WaitEvent(void)    {
000040  4811              LDR      r0,|L1.136|
000042  b510              PUSH     {r4,lr}
;;;92       _pGUITask = OS_GetpCurrentTask();
000044  6800              LDR      r0,[r0,#0]  ; OS_pCurrentTask
000046  4911              LDR      r1,|L1.140|
;;;93       OS_WaitEvent(1);
000048  6008              STR      r0,[r1,#0]  ; _pGUITask
00004a  2001              MOVS     r0,#1
00004c  f7fffffe          BL       OS_WaitEvent
;;;94     }
000050  e7dc              B        |L1.12|
;;;95     
                          ENDP

                  GUI_X_SignalEvent PROC
;;;96     void GUI_X_SignalEvent(void)    {
000052  480e              LDR      r0,|L1.140|
000054  b510              PUSH     {r4,lr}
;;;97       if (_pGUITask) {
000056  6801              LDR      r1,[r0,#0]  ; _pGUITask
000058  2900              CMP      r1,#0
00005a  d0d7              BEQ      |L1.12|
;;;98         OS_SignalEvent(1, _pGUITask);
00005c  2001              MOVS     r0,#1
00005e  f7fffffe          BL       OS_SignalEvent
;;;99       }
;;;100    }
000062  e7d3              B        |L1.12|
;;;101    
                          ENDP

                  _OnRx PROC
;;;112    
;;;113    static void _OnRx(OS_U8 Data) {
000064  b510              PUSH     {r4,lr}
;;;114      #if 0
;;;115        int Key;
;;;116        switch (Data) {
;;;117        case 'y':
;;;118          Key = GUI_KEY_LEFT;
;;;119          break;
;;;120        case 'x':
;;;121          Key = GUI_KEY_RIGHT;
;;;122          break;
;;;123        case 'q':
;;;124          Key = GUI_KEY_UP;
;;;125          break;
;;;126        case 'a':
;;;127          Key = GUI_KEY_DOWN;
;;;128          break;
;;;129        case 'w':
;;;130          Key = GUI_KEY_BACKSPACE;
;;;131          break;
;;;132        default:
;;;133          Key = Data;
;;;134        }
;;;135        GUI_StoreKeyMsg(Key, 1);
;;;136      #else
;;;137        GUI_StoreKeyMsg(Data, 1);
000066  2101              MOVS     r1,#1
000068  f7fffffe          BL       GUI_StoreKeyMsg
;;;138      #endif
;;;139    }
00006c  e7ce              B        |L1.12|
;;;140    
                          ENDP

                  GUI_X_Init PROC
;;;141    void GUI_X_Init(void) {
00006e  b510              PUSH     {r4,lr}
;;;142      OS_SetRxCallback(_OnRx);
000070  4807              LDR      r0,|L1.144|
000072  f7fffffe          BL       OS_SetRxCallback
;;;143    }
000076  e7c9              B        |L1.12|
;;;144    
                          ENDP

                  GUI_X_Log PROC
;;;158    #define OS_SendString(s) GUI_USE_PARA(s)
;;;159    void GUI_X_Log     (const char *s) { OS_SendString(s); }
000078  4770              BX       lr
;;;160    void GUI_X_Warn    (const char *s) { OS_SendString(s); }
                          ENDP

                  GUI_X_Warn PROC
00007a  4770              BX       lr
;;;161    void GUI_X_ErrorOut(const char *s) { OS_SendString(s); }
                          ENDP

                  GUI_X_ErrorOut PROC
00007c  4770              BX       lr
;;;162    
                          ENDP

00007e  0000              DCW      0x0000
                  |L1.128|
                          DCD      OS_Time
                  |L1.132|
                          DCD      ||.bss||
                  |L1.136|
                          DCD      OS_pCurrentTask
                  |L1.140|
                          DCD      ||.data||
                  |L1.144|
                          DCD      _OnRx

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  RSema
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  _pGUITask
                          DCD      0x00000000
