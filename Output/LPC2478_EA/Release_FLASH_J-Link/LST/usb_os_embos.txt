; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--thumb --list -c --asm --interleave -o.\output\lpc2478_ea\release_flash_j-link\obj\usb_os_embos.o --asm_dir=.\Output\LPC2478_EA\Release_FLASH_J-Link\LST\ --list_dir=.\Output\LPC2478_EA\Release_FLASH_J-Link\LST\ --depend=.\output\lpc2478_ea\release_flash_j-link\obj\usb_os_embos.d --apcs=interwork -O3 -IApplication\SEGGERDEMO -IApplication\SEGGERDEMO\Src -ISetup -IInc -IConfig -IFS -IIP -IIP\IP_FS\FS_RO\Generated -IGUI -IOS -IUSB -IUSBH -I"C:\Program Files (x86)\Keil\V473\ARM\RV31\INC" -I"C:\Program Files (x86)\Keil\V473\ARM\CMSIS\Include" -I"C:\Program Files (x86)\Keil\V473\ARM\Inc\Philips" USB\USB_OS_embOS.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  USB_OS_Init PROC
;;;45     */
;;;46     void USB_OS_Init(void) {
000000  b570              PUSH     {r4-r6,lr}
;;;47       unsigned i;
;;;48     
;;;49       for (i = 0; i < COUNTOF(_aEvent); i++) {
;;;50         OS_EVENT_Create(&_aEvent[i]);
000002  4d20              LDR      r5,|L1.132|
000004  2400              MOVS     r4,#0                 ;49
                  |L1.6|
000006  00e0              LSLS     r0,r4,#3
000008  1940              ADDS     r0,r0,r5
00000a  f7fffffe          BL       OS_EVENT_Create
00000e  1c64              ADDS     r4,r4,#1              ;49
000010  2c08              CMP      r4,#8                 ;49
000012  d3f8              BCC      |L1.6|
;;;51       }
;;;52     }
000014  bc70              POP      {r4-r6}
000016  bc08              POP      {r3}
000018  4718              BX       r3
;;;53     
                          ENDP

                  USB_OS_Delay PROC
;;;62     */
;;;63     void USB_OS_Delay(int ms) {
00001a  b510              PUSH     {r4,lr}
;;;64       OS_Delay(ms);
00001c  f7fffffe          BL       OS_Delay
                  |L1.32|
;;;65     }
000020  bc10              POP      {r4}
000022  bc08              POP      {r3}
000024  4718              BX       r3
;;;66     
                          ENDP

                  USB_OS_DecRI PROC
;;;75     */
;;;76     void USB_OS_DecRI(void) {
000026  4818              LDR      r0,|L1.136|
000028  b510              PUSH     {r4,lr}
;;;77       OS_DecRI();
00002a  7841              LDRB     r1,[r0,#1]  ; OS_Counters
00002c  1e49              SUBS     r1,r1,#1
00002e  0609              LSLS     r1,r1,#24
000030  0e09              LSRS     r1,r1,#24
000032  7041              STRB     r1,[r0,#1]
000034  d1f4              BNE      |L1.32|
000036  f7fffffe          BL       __ARM_common_enable_irq
;;;78     }
00003a  e7f1              B        |L1.32|
;;;79     
                          ENDP

                  USB_OS_IncDI PROC
;;;87     */
;;;88     void   USB_OS_IncDI(void) {
00003c  b510              PUSH     {r4,lr}
;;;89       OS_IncDI();
00003e  f7fffffe          BL       __ARM_common_disable_irq
000042  4811              LDR      r0,|L1.136|
000044  7841              LDRB     r1,[r0,#1]  ; OS_Counters
000046  1c49              ADDS     r1,r1,#1
000048  7041              STRB     r1,[r0,#1]
;;;90     }
00004a  e7e9              B        |L1.32|
;;;91     
                          ENDP

                  USB_OS_Signal PROC
;;;101    */
;;;102    void USB_OS_Signal(unsigned EPIndex) {
00004c  490d              LDR      r1,|L1.132|
;;;103      OS_EVENT_Pulse(&_aEvent[EPIndex]);
00004e  00c0              LSLS     r0,r0,#3
000050  b510              PUSH     {r4,lr}               ;102
000052  1840              ADDS     r0,r0,r1
000054  f7fffffe          BL       OS_EVENT_Pulse
;;;104    }
000058  e7e2              B        |L1.32|
;;;105    
                          ENDP

                  USB_OS_Wait PROC
;;;114    */
;;;115    void USB_OS_Wait(unsigned EPIndex) {
00005a  490a              LDR      r1,|L1.132|
;;;116      OS_EVENT_Wait(&_aEvent[EPIndex]);
00005c  00c0              LSLS     r0,r0,#3
00005e  b510              PUSH     {r4,lr}               ;115
000060  1840              ADDS     r0,r0,r1
000062  f7fffffe          BL       OS_EVENT_Wait
;;;117    }
000066  e7db              B        |L1.32|
;;;118    
                          ENDP

                  USB_OS_WaitTimed PROC
;;;128    */
;;;129    int USB_OS_WaitTimed(unsigned EPIndex, unsigned ms) {
000068  4a06              LDR      r2,|L1.132|
;;;130      int r;
;;;131      r = (int)OS_EVENT_WaitTimed(&_aEvent[EPIndex], ms + 1);
00006a  00c0              LSLS     r0,r0,#3
00006c  b510              PUSH     {r4,lr}               ;129
00006e  1880              ADDS     r0,r0,r2
000070  1c49              ADDS     r1,r1,#1
000072  f7fffffe          BL       OS_EVENT_WaitTimed
;;;132      return r;
;;;133    }
000076  e7d3              B        |L1.32|
;;;134    
                          ENDP

                  USB_OS_Panic PROC
                  |L1.120|
;;;148    */
;;;149    void USB_OS_Panic(unsigned ErrCode) {
000078  2800              CMP      r0,#0
;;;150      while (ErrCode);
00007a  d1fd              BNE      |L1.120|
;;;151    }
00007c  4770              BX       lr
;;;152    
                          ENDP

                  USB_OS_GetTickCnt PROC
;;;159    */
;;;160    U32 USB_OS_GetTickCnt(void) {
00007e  4803              LDR      r0,|L1.140|
;;;161      return OS_Time;
000080  6800              LDR      r0,[r0,#0]  ; OS_Time
;;;162    }
000082  4770              BX       lr
;;;163    
                          ENDP

                  |L1.132|
                          DCD      ||.bss||
                  |L1.136|
                          DCD      OS_Counters
                  |L1.140|
                          DCD      OS_Time

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  _aEvent
                          %        64

                          AREA ||i.__ARM_common_disable_irq||, COMGROUP=__ARM_common_disable_irq, CODE, READONLY, ALIGN=2

                          ARM
                  __ARM_common_disable_irq PROC
000000  e10f0000          MRS      r0,APSR ; formerly CPSR
000004  e3801080          ORR      r1,r0,#0x80
000008  e121f001          MSR      CPSR_c,r1
00000c  e2000080          AND      r0,r0,#0x80
000010  e12fff1e          BX       lr
                          ENDP


                          AREA ||i.__ARM_common_enable_irq||, COMGROUP=__ARM_common_enable_irq, CODE, READONLY, ALIGN=2

                  __ARM_common_enable_irq PROC
000000  e10f0000          MRS      r0,APSR ; formerly CPSR
000004  e3c00080          BIC      r0,r0,#0x80
000008  e121f000          MSR      CPSR_c,r0
00000c  e12fff1e          BX       lr
                          ENDP

