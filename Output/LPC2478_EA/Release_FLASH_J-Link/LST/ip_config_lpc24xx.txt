; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--thumb --list -c --asm --interleave -o.\output\lpc2478_ea\release_flash_j-link\obj\ip_config_lpc24xx.o --asm_dir=.\Output\LPC2478_EA\Release_FLASH_J-Link\LST\ --list_dir=.\Output\LPC2478_EA\Release_FLASH_J-Link\LST\ --depend=.\output\lpc2478_ea\release_flash_j-link\obj\ip_config_lpc24xx.d --apcs=interwork -O3 -IApplication\SEGGERDEMO -IApplication\SEGGERDEMO\Src -ISetup -IInc -IConfig -IFS -IIP -IIP\IP_FS\FS_RO\Generated -IGUI -IOS -IUSB -IUSBH -I"C:\Program Files (x86)\Keil\V473\ARM\RV31\INC" -I"C:\Program Files (x86)\Keil\V473\ARM\CMSIS\Include" -I"C:\Program Files (x86)\Keil\V473\ARM\Inc\Philips" Setup\IP_Config_LPC24xx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  IP_X_Config PROC
;;;75     */
;;;76     void IP_X_Config(void) {
000000  2101              MOVS     r1,#1
000002  b510              PUSH     {r4,lr}
;;;77       int mtu;
;;;78     
;;;79       IP_AssignMemory(_aPool, sizeof(_aPool));    // Assigning memory should be the first thing
000004  4817              LDR      r0,|L1.100|
000006  03c9              LSLS     r1,r1,#15
000008  f7fffffe          BL       IP_AssignMemory
;;;80       IP_AddEtherInterface(&IP_Driver_LPC24xx);   // Add ethernet driver for your hardware
00000c  4816              LDR      r0,|L1.104|
00000e  f7fffffe          BL       IP_AddEtherInterface
;;;81       IP_SetHWAddr("\x00\x22\xC7\xFF\xFF\xFF");   // MAC addr: Needs to be unique for production units
000012  a016              ADR      r0,|L1.108|
000014  f7fffffe          BL       IP_SetHWAddr
;;;82       //
;;;83       // Use DHCP client or define IP address, subnet mask,
;;;84       // gateway address and DNS server according to the
;;;85       // requirements of your application.
;;;86       //
;;;87       IP_DHCPC_Activate(0, "TARGET", NULL, NULL);
000018  2300              MOVS     r3,#0
00001a  001a              MOVS     r2,r3
00001c  0018              MOVS     r0,r3
00001e  a115              ADR      r1,|L1.116|
000020  f7fffffe          BL       IP_DHCPC_Activate
;;;88       //IP_SetAddrMask(0xC0A805E6, 0xFFFF0000);     // Assign IP addr. (e.g. 192.168.5.230) and subnet mask (e.g. 255.255.0.0)
;;;89       //IP_SetGWAddr(0, 0xC0A80501);                // Set gateway address, for example 192.168.5.1
;;;90       //IP_DNS_SetServer(0xCC98B84C);               // Set DNS server address, for example 204.152.184.76
;;;91       //
;;;92       // Run-time configure buffers.
;;;93       // The default setup will do for most cases.
;;;94       //
;;;95       mtu = 1500;                                      // 576 is minimum acc. to RFC, 1500 is max. for Ethernet
000024  4915              LDR      r1,|L1.124|
;;;96       IP_SetMTU(0, mtu);                               // Maximum Transmission Unit is 1500 for ethernet by default
000026  2000              MOVS     r0,#0
000028  f7fffffe          BL       IP_SetMTU
;;;97       IP_AddBuffers(12, 256);                          // Small buffers.
00002c  21ff              MOVS     r1,#0xff
00002e  3101              ADDS     r1,#1
000030  200c              MOVS     r0,#0xc
000032  f7fffffe          BL       IP_AddBuffers
;;;98       IP_AddBuffers(8, mtu + 40 + 16);                 // Big buffers. Size should be mtu + 16 byte for ethernet header (2 bytes type, 2*6 bytes MAC, 2 bytes padding)
000036  4911              LDR      r1,|L1.124|
000038  2008              MOVS     r0,#8
00003a  3138              ADDS     r1,r1,#0x38
00003c  f7fffffe          BL       IP_AddBuffers
;;;99       IP_ConfTCPSpace(3 * (mtu - 40), 3 * (mtu - 40)); // Define the TCP Tx and Rx window size. There should be space for 2 max size packets; otherwise communication can be very slow due to delayed Acks.
000040  480f              LDR      r0,|L1.128|
000042  0001              MOVS     r1,r0
000044  f7fffffe          BL       IP_ConfTCPSpace
;;;100      IP_SOCKET_SetDefaultOptions(0
000048  2000              MOVS     r0,#0
00004a  f7fffffe          BL       IP_SOCKET_SetDefaultOptions
;;;101    //                              | SO_TIMESTAMP     // Send TCP timestamp to optimize the round trip time measurement. Normally not used in LAN.
;;;102                                 );  
;;;103      //
;;;104      // Define log and warn filter
;;;105      // Note: The terminal I/O emulation affects the timing
;;;106      // of your communication, since the debugger stops the target
;;;107      // for every terminal I/O output unless you use DCC!
;;;108      //
;;;109      IP_SetWarnFilter(0xFFFFFFFF);               // 0xFFFFFFFF: Do not filter: Output all warnings.
00004e  2000              MOVS     r0,#0
000050  43c0              MVNS     r0,r0
000052  f7fffffe          BL       IP_SetWarnFilter
;;;110      IP_SetLogFilter(IP_MTYPE_INIT               // Output all messages from init
000056  480b              LDR      r0,|L1.132|
000058  f7fffffe          BL       IP_SetLogFilter
;;;111                    | IP_MTYPE_LINK_CHANGE        // Output a message if link status changes
;;;112                    | IP_MTYPE_DHCP               // Output general DHCP status messages
;;;113    //                | IP_MTYPE_DHCP_EXT           // Output additional DHCP messages
;;;114    //                | IP_MTYPE_CORE               // Output log messages from core module
;;;115    //                | IP_MTYPE_ALLOC              // Output log messages for memory allocation
;;;116    //                | IP_MTYPE_DRIVER             // Output log messages from driver
;;;117    //                | IP_MTYPE_ARP                // Output log messages from ARP layer
;;;118    //                | IP_MTYPE_IP                 // Output log messages from IP layer
;;;119    //                | IP_MTYPE_TCP_CLOSE          // Output a log messages if a TCP connection has been closed
;;;120    //                | IP_MTYPE_TCP_OPEN           // Output a log messages if a TCP connection has been opened
;;;121    //                | IP_MTYPE_TCP_IN             // Output TCP input logs
;;;122    //                | IP_MTYPE_TCP_OUT            // Output TCP output logs
;;;123    //                | IP_MTYPE_TCP_RTT            // Output TCP round trip time (RTT) logs
;;;124    //                | IP_MTYPE_TCP_RXWIN          // Output TCP RX window related log messages
;;;125    //                | IP_MTYPE_TCP                // Output all TCP related log messages
;;;126    //                | IP_MTYPE_UDP_IN             // Output UDP input logs
;;;127    //                | IP_MTYPE_UDP_OUT            // Output UDP output logs
;;;128    //                | IP_MTYPE_UDP                // Output all UDP related messages
;;;129    //                | IP_MTYPE_ICMP               // Output ICMP related log messages
;;;130    //                | IP_MTYPE_NET_IN             // Output network input related messages
;;;131    //                | IP_MTYPE_NET_OUT            // Output network output related messages
;;;132    //                | IP_MTYPE_DNS                // Output all DNS related messages
;;;133    //                | IP_MTYPE_SOCKET_STATE       // Output socket status messages
;;;134    //                | IP_MTYPE_SOCKET_READ        // Output socket read related messages
;;;135    //                | IP_MTYPE_SOCKET_WRITE       // Output socket write related messages
;;;136    //                | IP_MTYPE_SOCKET             // Output all socket related messages
;;;137                    | IP_MTYPE_APPLICATION
;;;138                    );
;;;139    }
00005c  bc10              POP      {r4}
00005e  bc08              POP      {r3}
000060  4718              BX       r3
;;;140    
                          ENDP

000062  0000              DCW      0x0000
                  |L1.100|
                          DCD      ||.bss||
                  |L1.104|
                          DCD      IP_Driver_LPC24xx
                  |L1.108|
00006c  00                DCB      0
00006d  22c7ffff          DCB      """",199,255,255,255,0
000071  ff00    
000073  00                DCB      0
                  |L1.116|
000074  54415247          DCB      "TARGET",0
000078  455400  
00007b  00                DCB      0
                  |L1.124|
                          DCD      0x000005dc
                  |L1.128|
                          DCD      0x0000111c
                  |L1.132|
                          DCD      0x000a4001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  _aPool
                          %        32768
