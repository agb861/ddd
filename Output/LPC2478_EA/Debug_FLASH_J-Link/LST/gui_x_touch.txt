; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--thumb --list --debug -c --asm --interleave -o.\output\lpc2478_ea\debug_flash_j-link\obj\gui_x_touch.o --asm_dir=.\Output\LPC2478_EA\Debug_FLASH_J-Link\LST\ --list_dir=.\Output\LPC2478_EA\Debug_FLASH_J-Link\LST\ --depend=.\output\lpc2478_ea\debug_flash_j-link\obj\gui_x_touch.d --apcs=interwork -O0 -IApplication\SEGGERDEMO -IApplication\SEGGERDEMO\Src -ISetup -IInc -IConfig -IFS -IIP -IIP\IP_FS\FS_RO\Generated -IGUI -IOS -IUSB -IUSBH -I"C:\Program Files (x86)\Keil\V473\ARM\RV31\INC" -I"C:\Program Files (x86)\Keil\V473\ARM\CMSIS\Include" -I"C:\Program Files (x86)\Keil\V473\ARM\Inc\Philips" -DDEBUG=1 --omf_browse=.\output\lpc2478_ea\debug_flash_j-link\obj\gui_x_touch.crf Setup\GUI_X_Touch.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _SPI_Send PROC
;;;69     */
;;;70     static unsigned char _SPI_Send(unsigned char Data) {
000000  0002              MOVS     r2,r0
;;;71       unsigned int FailsafeCnt;
;;;72     
;;;73       SPI_S0SPDR = Data;
000002  4851              LDR      r0,|L1.328|
000004  6082              STR      r2,[r0,#8]
;;;74       FailsafeCnt = 0;
000006  2100              MOVS     r1,#0
;;;75       while(((SPI_S0SPSR & 0x80) == 0) && (FailsafeCnt < 5000)) {
000008  e000              B        |L1.12|
                  |L1.10|
;;;76         FailsafeCnt++;
00000a  1c49              ADDS     r1,r1,#1
                  |L1.12|
00000c  484e              LDR      r0,|L1.328|
00000e  6840              LDR      r0,[r0,#4]            ;75
000010  2380              MOVS     r3,#0x80              ;75
000012  4218              TST      r0,r3                 ;75
000014  d102              BNE      |L1.28|
000016  484d              LDR      r0,|L1.332|
000018  4281              CMP      r1,r0                 ;75
00001a  d3f6              BCC      |L1.10|
                  |L1.28|
;;;77       }
;;;78       if (FailsafeCnt >= 5000) {
00001c  484b              LDR      r0,|L1.332|
00001e  4281              CMP      r1,r0
000020  d304              BCC      |L1.44|
;;;79         SPI_S0SPCCR = 57;
000022  2039              MOVS     r0,#0x39
000024  4b48              LDR      r3,|L1.328|
000026  60d8              STR      r0,[r3,#0xc]
;;;80         SPI_S0SPCR  = 0x38;
000028  2038              MOVS     r0,#0x38
00002a  6018              STR      r0,[r3,#0]
                  |L1.44|
;;;81       }
;;;82       return SPI_S0SPDR;
00002c  4846              LDR      r0,|L1.328|
00002e  6880              LDR      r0,[r0,#8]
000030  0600              LSLS     r0,r0,#24
000032  0e00              LSRS     r0,r0,#24
;;;83     }
000034  4770              BX       lr
;;;84     
                          ENDP

                  _IsTouch PROC
;;;90     */
;;;91     static U8 _IsTouch(void) {
000036  b5f8              PUSH     {r3-r7,lr}
;;;92       U32 Z1;
;;;93       U32 Z2;
;;;94       U32 x;
;;;95       U32 Pressure;
;;;96     
;;;97       //Read x value
;;;98       ACTIVATE_CS();
000038  2001              MOVS     r0,#1
00003a  0500              LSLS     r0,r0,#20
00003c  4944              LDR      r1,|L1.336|
00003e  60c8              STR      r0,[r1,#0xc]
;;;99       _SPI_Send(0x83 | 0x50 | 0x00);
000040  20d3              MOVS     r0,#0xd3
000042  f7fffffe          BL       _SPI_Send
;;;100      x   = ((U32)_SPI_Send(0x00)) << 8;
000046  2000              MOVS     r0,#0
000048  f7fffffe          BL       _SPI_Send
00004c  0206              LSLS     r6,r0,#8
;;;101      x  |= (U32)_SPI_Send(0x00);
00004e  2000              MOVS     r0,#0
000050  f7fffffe          BL       _SPI_Send
000054  4306              ORRS     r6,r6,r0
;;;102      x >>= 3;
000056  08f6              LSRS     r6,r6,#3
;;;103      DEACTIVATE_CS();
000058  2001              MOVS     r0,#1
00005a  0500              LSLS     r0,r0,#20
00005c  493c              LDR      r1,|L1.336|
00005e  6048              STR      r0,[r1,#4]
;;;104    
;;;105      //Read Z1 value
;;;106      ACTIVATE_CS();
000060  60c8              STR      r0,[r1,#0xc]
;;;107      _SPI_Send(0x83 | 0x30 | 0x00);
000062  20b3              MOVS     r0,#0xb3
000064  f7fffffe          BL       _SPI_Send
;;;108      Z1   = ((U32)_SPI_Send(0x00)) << 8;
000068  2000              MOVS     r0,#0
00006a  f7fffffe          BL       _SPI_Send
00006e  0204              LSLS     r4,r0,#8
;;;109      Z1  |= (U32)_SPI_Send(0x00);
000070  2000              MOVS     r0,#0
000072  f7fffffe          BL       _SPI_Send
000076  4304              ORRS     r4,r4,r0
;;;110      Z1 >>= 3;
000078  08e4              LSRS     r4,r4,#3
;;;111      DEACTIVATE_CS();
00007a  2001              MOVS     r0,#1
00007c  0500              LSLS     r0,r0,#20
00007e  4934              LDR      r1,|L1.336|
000080  6048              STR      r0,[r1,#4]
;;;112    
;;;113      //Read Z2 value
;;;114      ACTIVATE_CS();
000082  60c8              STR      r0,[r1,#0xc]
;;;115      _SPI_Send(0x83 | 0x40 | 0x00);
000084  20c3              MOVS     r0,#0xc3
000086  f7fffffe          BL       _SPI_Send
;;;116      Z2  = ((U32)_SPI_Send(0x00)) << 8;
00008a  2000              MOVS     r0,#0
00008c  f7fffffe          BL       _SPI_Send
000090  0205              LSLS     r5,r0,#8
;;;117      Z2 |= (U32)_SPI_Send(0x00);
000092  2000              MOVS     r0,#0
000094  f7fffffe          BL       _SPI_Send
000098  4305              ORRS     r5,r5,r0
;;;118      Z2 >>= 3;
00009a  08ed              LSRS     r5,r5,#3
;;;119      DEACTIVATE_CS();
00009c  2001              MOVS     r0,#1
00009e  0500              LSLS     r0,r0,#20
0000a0  492b              LDR      r1,|L1.336|
0000a2  6048              STR      r0,[r1,#4]
;;;120    
;;;121      //Calculate pressure
;;;122      Pressure =( x * Z2 - Z1) / Z1;
0000a4  0031              MOVS     r1,r6
0000a6  4369              MULS     r1,r5,r1
0000a8  1b08              SUBS     r0,r1,r4
0000aa  0021              MOVS     r1,r4
0000ac  f7fffffe          BL       __aeabi_uidivmod
0000b0  0007              MOVS     r7,r0
;;;123    
;;;124      if ((Pressure != 0) && (Pressure < 40000)) {
0000b2  2f00              CMP      r7,#0
0000b4  d006              BEQ      |L1.196|
0000b6  4827              LDR      r0,|L1.340|
0000b8  4287              CMP      r7,r0
0000ba  d203              BCS      |L1.196|
;;;125        return 1;  // Touch
0000bc  2001              MOVS     r0,#1
                  |L1.190|
;;;126      }
;;;127      return 0;    // No touch
;;;128    }
0000be  bcf8              POP      {r3-r7}
0000c0  bc08              POP      {r3}
0000c2  4718              BX       r3
                  |L1.196|
0000c4  2000              MOVS     r0,#0                 ;127
0000c6  e7fa              B        |L1.190|
;;;129    
                          ENDP

                  GUI_TOUCH_X_ActivateX PROC
;;;146    */
;;;147    void GUI_TOUCH_X_ActivateX(void) {
0000c8  4770              BX       lr
;;;148    }
;;;149    
                          ENDP

                  GUI_TOUCH_X_ActivateY PROC
;;;159    */
;;;160    void GUI_TOUCH_X_ActivateY(void) {
0000ca  4770              BX       lr
;;;161    }
;;;162    
                          ENDP

                  GUI_TOUCH_X_MeasureX PROC
;;;170    */
;;;171    int  GUI_TOUCH_X_MeasureX(void) {
0000cc  b510              PUSH     {r4,lr}
;;;172      int x;
;;;173    
;;;174      if (_IsTouch() == 1) {
0000ce  f7fffffe          BL       _IsTouch
0000d2  2801              CMP      r0,#1
0000d4  d116              BNE      |L1.260|
;;;175        ACTIVATE_CS();
0000d6  0500              LSLS     r0,r0,#20
0000d8  491d              LDR      r1,|L1.336|
0000da  60c8              STR      r0,[r1,#0xc]
;;;176        _SPI_Send(0x83 | 0x50 | 0x00);
0000dc  20d3              MOVS     r0,#0xd3
0000de  f7fffffe          BL       _SPI_Send
;;;177        x   = ((U32)_SPI_Send(0x00)) << 8;
0000e2  2000              MOVS     r0,#0
0000e4  f7fffffe          BL       _SPI_Send
0000e8  0204              LSLS     r4,r0,#8
;;;178        x  |= (U32)_SPI_Send(0x00);
0000ea  2000              MOVS     r0,#0
0000ec  f7fffffe          BL       _SPI_Send
0000f0  4304              ORRS     r4,r4,r0
;;;179        x >>= 3;
0000f2  10e4              ASRS     r4,r4,#3
;;;180        DEACTIVATE_CS();
0000f4  2001              MOVS     r0,#1
0000f6  0500              LSLS     r0,r0,#20
0000f8  4915              LDR      r1,|L1.336|
0000fa  6048              STR      r0,[r1,#4]
;;;181        return x;
0000fc  0020              MOVS     r0,r4
                  |L1.254|
;;;182      }
;;;183      return -1;
;;;184    }
0000fe  bc10              POP      {r4}
000100  bc08              POP      {r3}
000102  4718              BX       r3
                  |L1.260|
000104  2000              MOVS     r0,#0                 ;183
000106  43c0              MVNS     r0,r0                 ;183
000108  e7f9              B        |L1.254|
;;;185    
                          ENDP

                  GUI_TOUCH_X_MeasureY PROC
;;;193    */
;;;194    int  GUI_TOUCH_X_MeasureY(void) {
00010a  b510              PUSH     {r4,lr}
;;;195      int y;
;;;196    
;;;197      if (_IsTouch() == 1) {
00010c  f7fffffe          BL       _IsTouch
000110  2801              CMP      r0,#1
000112  d116              BNE      |L1.322|
;;;198        ACTIVATE_CS();
000114  0500              LSLS     r0,r0,#20
000116  490e              LDR      r1,|L1.336|
000118  60c8              STR      r0,[r1,#0xc]
;;;199        _SPI_Send(0x83 | 0x10 | 0x00);
00011a  2093              MOVS     r0,#0x93
00011c  f7fffffe          BL       _SPI_Send
;;;200        y   = ((U32)_SPI_Send(0x00)) << 8;
000120  2000              MOVS     r0,#0
000122  f7fffffe          BL       _SPI_Send
000126  0204              LSLS     r4,r0,#8
;;;201        y  |= (U32)_SPI_Send(0x00);
000128  2000              MOVS     r0,#0
00012a  f7fffffe          BL       _SPI_Send
00012e  4304              ORRS     r4,r4,r0
;;;202        y >>= 3;
000130  10e4              ASRS     r4,r4,#3
;;;203        DEACTIVATE_CS();
000132  2001              MOVS     r0,#1
000134  0500              LSLS     r0,r0,#20
000136  4906              LDR      r1,|L1.336|
000138  6048              STR      r0,[r1,#4]
;;;204        return y;
00013a  0020              MOVS     r0,r4
                  |L1.316|
;;;205      }
;;;206      return -1;
;;;207    }
00013c  bc10              POP      {r4}
00013e  bc08              POP      {r3}
000140  4718              BX       r3
                  |L1.322|
000142  2000              MOVS     r0,#0                 ;206
000144  43c0              MVNS     r0,r0                 ;206
000146  e7f9              B        |L1.316|
;;;208    
                          ENDP

                  |L1.328|
                          DCD      0xe0020000
                  |L1.332|
                          DCD      0x00001388
                  |L1.336|
                          DCD      0xe0028000
                  |L1.340|
                          DCD      0x00009c40
