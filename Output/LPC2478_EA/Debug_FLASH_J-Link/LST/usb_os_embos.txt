; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--thumb --list --debug -c --asm --interleave -o.\output\lpc2478_ea\debug_flash_j-link\obj\usb_os_embos.o --asm_dir=.\Output\LPC2478_EA\Debug_FLASH_J-Link\LST\ --list_dir=.\Output\LPC2478_EA\Debug_FLASH_J-Link\LST\ --depend=.\output\lpc2478_ea\debug_flash_j-link\obj\usb_os_embos.d --feedback=.\Output\LPC2478_EA\Debug_FLASH_J-Link\OBJ\Start_LPC2478_EA.fed --apcs=interwork -O0 -IApplication\SEGGERDEMO -IApplication\SEGGERDEMO\Src -ISetup -IInc -IConfig -IFS -IIP -IIP\IP_FS\FS_RO\Generated -IGUI -IOS -IUSB -IUSBH -I"C:\Program Files (x86)\Keil\V473\ARM\RV31\INC" -I"C:\Program Files (x86)\Keil\V473\ARM\CMSIS\Include" -I"C:\Program Files (x86)\Keil\V473\ARM\Inc\Philips" -DDEBUG=1 --omf_browse=.\output\lpc2478_ea\debug_flash_j-link\obj\usb_os_embos.crf USB\USB_OS_embOS.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  USB_OS_Init PROC
;;;45     */
;;;46     void USB_OS_Init(void) {
000000  b510              PUSH     {r4,lr}
;;;47       unsigned i;
;;;48     
;;;49       for (i = 0; i < COUNTOF(_aEvent); i++) {
000002  2400              MOVS     r4,#0
000004  e005              B        |L1.18|
                  |L1.6|
;;;50         OS_EVENT_Create(&_aEvent[i]);
000006  00e1              LSLS     r1,r4,#3
000008  4a04              LDR      r2,|L1.28|
00000a  1888              ADDS     r0,r1,r2
00000c  f7fffffe          BL       OS_EVENT_Create
000010  1c64              ADDS     r4,r4,#1              ;49
                  |L1.18|
000012  2c08              CMP      r4,#8                 ;49
000014  d3f7              BCC      |L1.6|
;;;51       }
;;;52     }
000016  bc10              POP      {r4}
000018  bc08              POP      {r3}
00001a  4718              BX       r3
;;;53     
                          ENDP

                  |L1.28|
                          DCD      _aEvent

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.2||, ||.text||
                  USB_OS_Delay PROC
;;;45     */
;;;46     void USB_OS_Init(void) {
000000  b510              PUSH     {r4,lr}
;;;47       unsigned i;
;;;48     
;;;49       for (i = 0; i < COUNTOF(_aEvent); i++) {
000002  0004              MOVS     r4,r0
000004  0020              MOVS     r0,r4
;;;50         OS_EVENT_Create(&_aEvent[i]);
000006  f7fffffe          BL       OS_Delay
00000a  bc10              POP      {r4}
00000c  bc08              POP      {r3}
00000e  4718              BX       r3
;;;51       }
;;;52     }
;;;53     
                          ENDP


                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  USB_OS_DecRI PROC
;;;45     */
;;;46     void USB_OS_Init(void) {
000000  b510              PUSH     {r4,lr}
;;;47       unsigned i;
;;;48     
;;;49       for (i = 0; i < COUNTOF(_aEvent); i++) {
000002  480a              LDR      r0,|L3.44|
000004  7840              LDRB     r0,[r0,#1]  ; OS_Counters
;;;50         OS_EVENT_Create(&_aEvent[i]);
000006  21f0              MOVS     r1,#0xf0
000008  4208              TST      r0,r1
00000a  d002              BEQ      |L3.18|
00000c  2099              MOVS     r0,#0x99
00000e  f7fffffe          BL       OS_Error
                  |L3.18|
000012  4806              LDR      r0,|L3.44|
000014  7840              LDRB     r0,[r0,#1]            ;49  ; OS_Counters
;;;51       }
;;;52     }
000016  1e40              SUBS     r0,r0,#1
000018  0600              LSLS     r0,r0,#24
00001a  0e00              LSRS     r0,r0,#24
00001c  4903              LDR      r1,|L3.44|
00001e  7048              STRB     r0,[r1,#1]
000020  d101              BNE      |L3.38|
000022  f7fffffe          BL       __ARM_common_enable_irq
                  |L3.38|
000026  bc10              POP      {r4}
000028  bc08              POP      {r3}
00002a  4718              BX       r3
;;;53     
                          ENDP

                  |L3.44|
                          DCD      OS_Counters

                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  USB_OS_IncDI PROC
;;;45     */
;;;46     void USB_OS_Init(void) {
000000  b510              PUSH     {r4,lr}
;;;47       unsigned i;
;;;48     
;;;49       for (i = 0; i < COUNTOF(_aEvent); i++) {
000002  4809              LDR      r0,|L4.40|
000004  7840              LDRB     r0,[r0,#1]  ; OS_Counters
;;;50         OS_EVENT_Create(&_aEvent[i]);
000006  21f0              MOVS     r1,#0xf0
000008  4208              TST      r0,r1
00000a  d002              BEQ      |L4.18|
00000c  2099              MOVS     r0,#0x99
00000e  f7fffffe          BL       OS_Error
                  |L4.18|
000012  f7fffffe          BL       __ARM_common_disable_irq
;;;51       }
;;;52     }
000016  4804              LDR      r0,|L4.40|
000018  7840              LDRB     r0,[r0,#1]  ; OS_Counters
00001a  1c40              ADDS     r0,r0,#1
00001c  4902              LDR      r1,|L4.40|
00001e  7048              STRB     r0,[r1,#1]
000020  bc10              POP      {r4}
000022  bc08              POP      {r3}
000024  4718              BX       r3
;;;53     
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
                          DCD      OS_Counters

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.text||
                  USB_OS_Signal PROC
;;;45     */
;;;46     void USB_OS_Init(void) {
000000  b510              PUSH     {r4,lr}
;;;47       unsigned i;
;;;48     
;;;49       for (i = 0; i < COUNTOF(_aEvent); i++) {
000002  0004              MOVS     r4,r0
000004  00e1              LSLS     r1,r4,#3
;;;50         OS_EVENT_Create(&_aEvent[i]);
000006  4a03              LDR      r2,|L5.20|
000008  1888              ADDS     r0,r1,r2
00000a  f7fffffe          BL       OS_EVENT_Pulse
00000e  bc10              POP      {r4}
000010  bc08              POP      {r3}                  ;49
000012  4718              BX       r3                    ;49
;;;51       }
;;;52     }
;;;53     
                          ENDP

                  |L5.20|
                          DCD      _aEvent

                          AREA ||area_number.6||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.text||
                  USB_OS_Wait PROC
;;;45     */
;;;46     void USB_OS_Init(void) {
000000  b510              PUSH     {r4,lr}
;;;47       unsigned i;
;;;48     
;;;49       for (i = 0; i < COUNTOF(_aEvent); i++) {
000002  0004              MOVS     r4,r0
000004  00e1              LSLS     r1,r4,#3
;;;50         OS_EVENT_Create(&_aEvent[i]);
000006  4a03              LDR      r2,|L6.20|
000008  1888              ADDS     r0,r1,r2
00000a  f7fffffe          BL       OS_EVENT_Wait
00000e  bc10              POP      {r4}
000010  bc08              POP      {r3}                  ;49
000012  4718              BX       r3                    ;49
;;;51       }
;;;52     }
;;;53     
                          ENDP

                  |L6.20|
                          DCD      _aEvent

                          AREA ||area_number.7||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.text||
                  USB_OS_WaitTimed PROC
;;;45     */
;;;46     void USB_OS_Init(void) {
000000  b570              PUSH     {r4-r6,lr}
;;;47       unsigned i;
;;;48     
;;;49       for (i = 0; i < COUNTOF(_aEvent); i++) {
000002  0004              MOVS     r4,r0
000004  000d              MOVS     r5,r1
;;;50         OS_EVENT_Create(&_aEvent[i]);
000006  00e1              LSLS     r1,r4,#3
000008  4a04              LDR      r2,|L7.28|
00000a  1888              ADDS     r0,r1,r2
00000c  1c69              ADDS     r1,r5,#1
00000e  f7fffffe          BL       OS_EVENT_WaitTimed
000012  0006              MOVS     r6,r0                 ;49
000014  0030              MOVS     r0,r6                 ;49
;;;51       }
;;;52     }
000016  bc70              POP      {r4-r6}
000018  bc08              POP      {r3}
00001a  4718              BX       r3
;;;53     
                          ENDP

                  |L7.28|
                          DCD      _aEvent

                          AREA ||area_number.8||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.8||, ||.text||
                  USB_OS_Panic PROC
;;;45     */
;;;46     void USB_OS_Init(void) {
000000  46c0              MOV      r8,r8
                  |L8.2|
;;;47       unsigned i;
;;;48     
;;;49       for (i = 0; i < COUNTOF(_aEvent); i++) {
000002  2800              CMP      r0,#0
000004  d1fd              BNE      |L8.2|
;;;50         OS_EVENT_Create(&_aEvent[i]);
000006  4770              BX       lr
;;;51       }
;;;52     }
;;;53     
                          ENDP


                          AREA ||area_number.9||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.text||
                  USB_OS_GetTickCnt PROC
;;;45     */
;;;46     void USB_OS_Init(void) {
000000  4801              LDR      r0,|L9.8|
;;;47       unsigned i;
;;;48     
;;;49       for (i = 0; i < COUNTOF(_aEvent); i++) {
000002  6800              LDR      r0,[r0,#0]  ; OS_Time
000004  4770              BX       lr
;;;50         OS_EVENT_Create(&_aEvent[i]);
;;;51       }
;;;52     }
;;;53     
                          ENDP

000006  0000              DCW      0x0000
                  |L9.8|
                          DCD      OS_Time

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  _aEvent
                          %        64

                          AREA ||i.__ARM_common_disable_irq||, COMGROUP=__ARM_common_disable_irq, CODE, READONLY, ALIGN=2

                          ARM
                  __ARM_common_disable_irq PROC
000000  e10f0000          MRS      r0,APSR ; formerly CPSR
000004  e3801080          ORR      r1,r0,#0x80
000008  e121f001          MSR      CPSR_c,r1
00000c  e2000080          AND      r0,r0,#0x80
000010  e12fff1e          BX       lr
                          ENDP


                          AREA ||i.__ARM_common_enable_irq||, COMGROUP=__ARM_common_enable_irq, CODE, READONLY, ALIGN=2

                  __ARM_common_enable_irq PROC
000000  e10f0000          MRS      r0,APSR ; formerly CPSR
000004  e3c00080          BIC      r0,r0,#0x80
000008  e121f000          MSR      CPSR_c,r0
00000c  e12fff1e          BX       lr
                          ENDP

