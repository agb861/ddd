; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--thumb --list --debug -c --asm --interleave -o.\output\lpc2478_ea\debug_flash_j-link\obj\fs_x_embos.o --asm_dir=.\Output\LPC2478_EA\Debug_FLASH_J-Link\LST\ --list_dir=.\Output\LPC2478_EA\Debug_FLASH_J-Link\LST\ --depend=.\output\lpc2478_ea\debug_flash_j-link\obj\fs_x_embos.d --feedback=.\Output\LPC2478_EA\Debug_FLASH_J-Link\OBJ\Start_LPC2478_EA.fed --apcs=interwork -O0 -IApplication\SEGGERDEMO -IApplication\SEGGERDEMO\Src -ISetup -IInc -IConfig -IFS -IIP -IIP\IP_FS\FS_RO\Generated -IGUI -IOS -IUSB -IUSBH -I"C:\Program Files (x86)\Keil\V473\ARM\RV31\INC" -I"C:\Program Files (x86)\Keil\V473\ARM\CMSIS\Include" -I"C:\Program Files (x86)\Keil\V473\ARM\Inc\Philips" -DDEBUG=1 --omf_browse=.\output\lpc2478_ea\debug_flash_j-link\obj\fs_x_embos.crf FS\FS_X_embOS.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  FS_X_OS_Lock PROC
;;;52     */
;;;53     void FS_X_OS_Lock(unsigned LockIndex) {
000000  b570              PUSH     {r4-r6,lr}
000002  0005              MOVS     r5,r0
;;;54       OS_RSEMA * pSema;
;;;55     
;;;56       pSema = _paSema + LockIndex;
000004  2014              MOVS     r0,#0x14
000006  4368              MULS     r0,r5,r0
000008  4905              LDR      r1,|L1.32|
00000a  6809              LDR      r1,[r1,#0]  ; _paSema
00000c  1844              ADDS     r4,r0,r1
;;;57       if (pSema) {
00000e  2c00              CMP      r4,#0
000010  d002              BEQ      |L1.24|
;;;58         OS_Use(pSema);
000012  0020              MOVS     r0,r4
000014  f7fffffe          BL       OS_Use
                  |L1.24|
;;;59       }
;;;60     }
000018  bc70              POP      {r4-r6}
00001a  bc08              POP      {r3}
00001c  4718              BX       r3
;;;61     
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      _paSema

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  FS_X_OS_Unlock PROC
;;;52     */
;;;53     void FS_X_OS_Lock(unsigned LockIndex) {
000000  b570              PUSH     {r4-r6,lr}
000002  0005              MOVS     r5,r0
;;;54       OS_RSEMA * pSema;
;;;55     
;;;56       pSema = _paSema + LockIndex;
000004  2014              MOVS     r0,#0x14
000006  4368              MULS     r0,r5,r0
000008  4905              LDR      r1,|L2.32|
00000a  6809              LDR      r1,[r1,#0]  ; _paSema
00000c  1844              ADDS     r4,r0,r1
;;;57       if (pSema) {
00000e  2c00              CMP      r4,#0
000010  d002              BEQ      |L2.24|
;;;58         OS_Use(pSema);
000012  0020              MOVS     r0,r4
000014  f7fffffe          BL       OS_Unuse
                  |L2.24|
;;;59       }
;;;60     }
000018  bc70              POP      {r4-r6}
00001a  bc08              POP      {r3}
00001c  4718              BX       r3
;;;61     
                          ENDP

00001e  0000              DCW      0x0000
                  |L2.32|
                          DCD      _paSema

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  FS_X_OS_Init PROC
;;;52     */
;;;53     void FS_X_OS_Lock(unsigned LockIndex) {
000000  b570              PUSH     {r4-r6,lr}
000002  0004              MOVS     r4,r0
;;;54       OS_RSEMA * pSema;
;;;55     
;;;56       pSema = _paSema + LockIndex;
000004  2114              MOVS     r1,#0x14
000006  4361              MULS     r1,r4,r1
000008  0008              MOVS     r0,r1
00000a  f7fffffe          BL       FS_AllocZeroed
;;;57       if (pSema) {
00000e  4909              LDR      r1,|L3.52|
000010  6008              STR      r0,[r1,#0]  ; _paSema
;;;58         OS_Use(pSema);
000012  0008              MOVS     r0,r1
000014  6806              LDR      r6,[r0,#0]  ; _paSema
000016  2500              MOVS     r5,#0
;;;59       }
;;;60     }
000018  e004              B        |L3.36|
                  |L3.26|
00001a  0030              MOVS     r0,r6
00001c  3614              ADDS     r6,r6,#0x14
00001e  f7fffffe          BL       OS_CreateRSema
000022  1c6d              ADDS     r5,r5,#1
                  |L3.36|
000024  42a5              CMP      r5,r4
000026  d3f8              BCC      |L3.26|
000028  4803              LDR      r0,|L3.56|
00002a  f7fffffe          BL       OS_EVENT_Create
00002e  bc70              POP      {r4-r6}
000030  bc08              POP      {r3}
000032  4718              BX       r3
;;;61     
                          ENDP

                  |L3.52|
                          DCD      _paSema
                  |L3.56|
                          DCD      _Event

                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  FS_X_OS_DeInit PROC
;;;52     */
;;;53     void FS_X_OS_Lock(unsigned LockIndex) {
000000  b570              PUSH     {r4-r6,lr}
000002  480e              LDR      r0,|L4.60|
;;;54       OS_RSEMA * pSema;
;;;55     
;;;56       pSema = _paSema + LockIndex;
000004  7806              LDRB     r6,[r0,#0]  ; _NumLocks
000006  480e              LDR      r0,|L4.64|
000008  6805              LDR      r5,[r0,#0]  ; _paSema
00000a  2400              MOVS     r4,#0
00000c  e004              B        |L4.24|
                  |L4.14|
;;;57       if (pSema) {
00000e  0028              MOVS     r0,r5
000010  f7fffffe          BL       OS_DeleteRSema
;;;58         OS_Use(pSema);
000014  3514              ADDS     r5,r5,#0x14
000016  1c64              ADDS     r4,r4,#1
                  |L4.24|
;;;59       }
;;;60     }
000018  42b4              CMP      r4,r6
00001a  d3f8              BCC      |L4.14|
00001c  4809              LDR      r0,|L4.68|
00001e  f7fffffe          BL       OS_EVENT_Delete
000022  4807              LDR      r0,|L4.64|
000024  6800              LDR      r0,[r0,#0]  ; _paSema
000026  f7fffffe          BL       FS_Free
00002a  2000              MOVS     r0,#0
00002c  4904              LDR      r1,|L4.64|
00002e  6008              STR      r0,[r1,#0]  ; _paSema
000030  4902              LDR      r1,|L4.60|
000032  7008              STRB     r0,[r1,#0]
000034  bc70              POP      {r4-r6}
000036  bc08              POP      {r3}
000038  4718              BX       r3
;;;61     
                          ENDP

00003a  0000              DCW      0x0000
                  |L4.60|
                          DCD      _NumLocks
                  |L4.64|
                          DCD      _paSema
                  |L4.68|
                          DCD      _Event

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.text||
                  FS_X_OS_GetTime PROC
;;;52     */
;;;53     void FS_X_OS_Lock(unsigned LockIndex) {
000000  4801              LDR      r0,|L5.8|
000002  6800              LDR      r0,[r0,#0]  ; OS_Time
;;;54       OS_RSEMA * pSema;
;;;55     
;;;56       pSema = _paSema + LockIndex;
000004  4770              BX       lr
;;;57       if (pSema) {
;;;58         OS_Use(pSema);
;;;59       }
;;;60     }
;;;61     
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      OS_Time

                          AREA ||area_number.6||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.text||
                  FS_X_OS_Wait PROC
;;;52     */
;;;53     void FS_X_OS_Lock(unsigned LockIndex) {
000000  b570              PUSH     {r4-r6,lr}
000002  0004              MOVS     r4,r0
;;;54       OS_RSEMA * pSema;
;;;55     
;;;56       pSema = _paSema + LockIndex;
000004  2500              MOVS     r5,#0
000006  43ed              MVNS     r5,r5
000008  0021              MOVS     r1,r4
00000a  4805              LDR      r0,|L6.32|
00000c  f7fffffe          BL       OS_EVENT_WaitTimed
;;;57       if (pSema) {
000010  2800              CMP      r0,#0
;;;58         OS_Use(pSema);
000012  d100              BNE      |L6.22|
000014  2500              MOVS     r5,#0
                  |L6.22|
000016  0028              MOVS     r0,r5
;;;59       }
;;;60     }
000018  bc70              POP      {r4-r6}
00001a  bc08              POP      {r3}
00001c  4718              BX       r3
;;;61     
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
                          DCD      _Event

                          AREA ||area_number.7||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.text||
                  FS_X_OS_Signal PROC
;;;52     */
;;;53     void FS_X_OS_Lock(unsigned LockIndex) {
000000  b510              PUSH     {r4,lr}
000002  4803              LDR      r0,|L7.16|
;;;54       OS_RSEMA * pSema;
;;;55     
;;;56       pSema = _paSema + LockIndex;
000004  f7fffffe          BL       OS_EVENT_Set
000008  bc10              POP      {r4}
00000a  bc08              POP      {r3}
00000c  4718              BX       r3
;;;57       if (pSema) {
;;;58         OS_Use(pSema);
;;;59       }
;;;60     }
;;;61     
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      _Event

                          AREA ||.data||, DATA, ALIGN=2

                  _paSema
                          DCD      0x00000000
                  _NumLocks
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  _Event
                          %        8
