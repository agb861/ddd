


ARM Macro Assembler    Page 1 


    1 00000000         ; This module performs ROM/RAM remapping (if required), 
                       initializes stack 
    2 00000000         ; pointers and interrupts for each mode, and finally bra
                       nches to __main in 
    3 00000000         ; the C library (which eventually calls main()).
    4 00000000         ;
    5 00000000         ; On reset, the ARM core starts up in Supervisor (SVC) m
                       ode, in ARM state, 
    6 00000000         ; with IRQ and FIQ disabled.
    7 00000000         
    8 00000000         
    9 00000000                 PRESERVE8
   10 00000000                 AREA             Init, CODE, READONLY
   11 00000000         ; --- ensure no functions that use semihosting SWIs are 
                       linked in from the C library
   12 00000000                 IMPORT           __use_no_semihosting_swi
   13 00000000         
   14 00000000         ; --- Standard definitions of mode bits and interrupt (I
                        & F) flags in PSRs
   15 00000000         
   16 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   17 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   18 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   19 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   20 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   21 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   22 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F        ; available on ARM 
                                                            Arch 4 and later
   23 00000000         
   24 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   25 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   26 00000000         
   27 00000000 E01FC000 
                       MAMCR   EQU              0xE01FC000  ; MAM Control Regis
                                                            ter
   28 00000000 E01FC004 
                       MAMTIM  EQU              0xE01FC004  ; MAM Timing regist
                                                            er
   29 00000000         
   30 00000000                 ENTRY
   31 00000000         



ARM Macro Assembler    Page 2 


   32 00000000                 EXPORT           Reset_Handler
   33 00000000         
   34 00000000         Reset_Handler
   35 00000000         ; Execution starts here
   36 00000000         
   37 00000000         ; LPC2148 Errata
   38 00000000         ; Date: August 5, 2005
   39 00000000         ; Document Release: Version 1.0
   40 00000000         ; Device Affected: LPC2148
   41 00000000         ; Incorrect read of data from SRAM after Reset and MAM i
                       s not enabled or partially enabled MAM.1
   42 00000000         ; Init MAM before acsses to SRAM
   43 00000000         
   44 00000000 E59F0038        ldr              r0,=MAMCR
   45 00000004 E59F1038        ldr              r1,=MAMTIM
   46 00000008 E3A02000        ldr              r2,=0
   47 0000000C E5802000        str              r2,[r0]
   48 00000010 E3A02003        ldr              r2,=3
   49 00000014 E5812000        str              r2,[r1]
   50 00000018 E3A02002        ldr              r2,=2
   51 0000001C E5802000        str              r2,[r0]
   52 00000020         
   53 00000020         
   54 00000020         ; --- Initialize stack pointer registers
   55 00000020         
   56 00000020         ; Enter each mode in turn and set up the stack pointer
   57 00000020         
   58 00000020                 IMPORT           ||Image$$CSTACK$$ZI$$Limit|| ; 
                                                            defined in scatter 
                                                            file
   59 00000020                 IMPORT           ||Image$$IRQ_STACK$$ZI$$Limit||
 
                                                            ; defined in scatte
                                                            r file
   60 00000020         
   61 00000020 E321F0D2        msr              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit 
                                                            ; No interrupts
   62 00000024 E59FD01C        ldr              sp, =||Image$$IRQ_STACK$$ZI$$Li
mit||
   63 00000028 E3CDD007        and              sp, sp, #0xFFFFFFF8
   64 0000002C         
   65 0000002C E321F0D3        msr              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit 
                                                            ; No interrupts
   66 00000030 E59FD014        ldr              sp, =||Image$$CSTACK$$ZI$$Limit
||
   67 00000034 E3CDD007        and              sp, sp, #0xFFFFFFF8
   68 00000038         
   69 00000038                 IMPORT           __main
   70 00000038                 IMPORT           __low_level_init
   71 00000038         
   72 00000038         ; --- Initialize critical IO devices
   73 00000038         ; Call  __low_level_init
   74 00000038 EBFFFFFE        bl               __low_level_init
   75 0000003C         
   76 0000003C         ; --- Now enter the C code
   77 0000003C EAFFFFFE        b                __main      ; note use B not BL
                                                            , because an applic



ARM Macro Assembler    Page 3 


                                                            ation will never re
                                                            turn this way
   78 00000040         
   79 00000040                 END
              E01FC000 
              E01FC004 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=A1788W,A1786W --apcs=interwork --d
epend=.\output\lpc2478_ea\debug_flash_j-link\obj\startup_lpc2xxx.d -o.\output\l
pc2478_ea\debug_flash_j-link\obj\startup_lpc2xxx.o -I"C:\Program Files (x86)\Ke
il\V473\ARM\RV31\INC" -I"C:\Program Files (x86)\Keil\V473\ARM\CMSIS\Include" -I
"C:\Program Files (x86)\Keil\V473\ARM\Inc\Philips" --list=.\output\lpc2478_ea\d
ebug_flash_j-link\lst\startup_lpc2xxx.lst Setup\Startup_LPC2xxx.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Init 00000000

Symbol: Init
   Definitions
      At line 10 in file Setup\Startup_LPC2xxx.s
   Uses
      None
Comment: Init unused
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 34 in file Setup\Startup_LPC2xxx.s
   Uses
      At line 32 in file Setup\Startup_LPC2xxx.s
Comment: Reset_Handler used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 25 in file Setup\Startup_LPC2xxx.s
   Uses
      At line 61 in file Setup\Startup_LPC2xxx.s
      At line 65 in file Setup\Startup_LPC2xxx.s

I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 24 in file Setup\Startup_LPC2xxx.s
   Uses
      At line 61 in file Setup\Startup_LPC2xxx.s
      At line 65 in file Setup\Startup_LPC2xxx.s

MAMCR E01FC000

Symbol: MAMCR
   Definitions
      At line 27 in file Setup\Startup_LPC2xxx.s
   Uses
      At line 44 in file Setup\Startup_LPC2xxx.s
Comment: MAMCR used once
MAMTIM E01FC004

Symbol: MAMTIM
   Definitions
      At line 28 in file Setup\Startup_LPC2xxx.s
   Uses
      At line 45 in file Setup\Startup_LPC2xxx.s
Comment: MAMTIM used once
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 20 in file Setup\Startup_LPC2xxx.s
   Uses
      None
Comment: Mode_ABT unused
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 17 in file Setup\Startup_LPC2xxx.s
   Uses
      None
Comment: Mode_FIQ unused
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 18 in file Setup\Startup_LPC2xxx.s
   Uses
      At line 61 in file Setup\Startup_LPC2xxx.s
Comment: Mode_IRQ used once
Mode_SVC 00000013



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: Mode_SVC
   Definitions
      At line 19 in file Setup\Startup_LPC2xxx.s
   Uses
      At line 65 in file Setup\Startup_LPC2xxx.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 22 in file Setup\Startup_LPC2xxx.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 21 in file Setup\Startup_LPC2xxx.s
   Uses
      None
Comment: Mode_UND unused
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 16 in file Setup\Startup_LPC2xxx.s
   Uses
      None
Comment: Mode_USR unused
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__low_level_init 00000000

Symbol: __low_level_init
   Definitions
      At line 70 in file Setup\Startup_LPC2xxx.s
   Uses
      At line 74 in file Setup\Startup_LPC2xxx.s
Comment: __low_level_init used once
__main 00000000

Symbol: __main
   Definitions
      At line 69 in file Setup\Startup_LPC2xxx.s
   Uses
      At line 77 in file Setup\Startup_LPC2xxx.s
Comment: __main used once
__use_no_semihosting_swi 00000000

Symbol: __use_no_semihosting_swi
   Definitions
      At line 12 in file Setup\Startup_LPC2xxx.s
   Uses
      None
Comment: __use_no_semihosting_swi unused
|Image$$CSTACK$$ZI$$Limit| 00000000

Symbol: |Image$$CSTACK$$ZI$$Limit|
   Definitions
      At line 58 in file Setup\Startup_LPC2xxx.s
   Uses
      At line 66 in file Setup\Startup_LPC2xxx.s
Comment: |Image$$CSTACK$$ZI$$Limit| used once
|Image$$IRQ_STACK$$ZI$$Limit| 00000000

Symbol: |Image$$IRQ_STACK$$ZI$$Limit|
   Definitions
      At line 59 in file Setup\Startup_LPC2xxx.s
   Uses
      At line 62 in file Setup\Startup_LPC2xxx.s
Comment: |Image$$IRQ_STACK$$ZI$$Limit| used once
5 symbols
350 symbols in table
